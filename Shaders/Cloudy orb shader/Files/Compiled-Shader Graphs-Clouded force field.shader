// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Shader Graphs/Clouded force field" {
Properties {
[NoScaleOffset]  Texture2D_FE0BAE36 ("Cloud Texture", 2D) = "white" { }
 Vector2_7FC22752 ("Cloud Tiling", Vector) = (1.000000,1.000000,0.000000,0.000000)
 Vector2_17D0D0AB ("Cloud Direction", Vector) = (1.000000,1.000000,0.000000,0.000000)
 Vector1_B0E68DC1 ("Cloud Power", Float) = 1.000000
 Vector1_B1B449DB ("Cloud Brightness", Float) = 0.125000
 Color_67C3A959 ("Color", Color) = (0.146849,0.152741,0.415094,0.000000)
[NoScaleOffset]  Texture2D_E192FBFC ("Distortion Texture", 2D) = "white" { }
 Vector2_57BD9D1D ("Distortion Tile", Vector) = (1.000000,1.000000,0.000000,0.000000)
 Vector2_ABF5CBC7 ("Distortion Direction", Vector) = (0.000000,0.000000,0.000000,0.000000)
 Vector1_5FF0718A ("Distortion speed", Float) = 0.062500
 Vector1_1D1A5634 ("intersect offset", Float) = 0.600000
}
SubShader { 
 Tags { "QUEUE"="Transparent+0" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" }


 // Stats for Vertex shader:
 //        d3d11: 41 avg math (24..66), 0 avg branch (0..1)
 // Stats for Fragment shader:
 //        d3d11: 125 avg math (81..269), 3 avg texture (3..5), 0 avg branch (0..1)
 Pass {
  Name "Universal Forward"
  Tags { "LIGHTMODE"="UniversalForward" "QUEUE"="Transparent+0" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 117:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 118:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 119:   ge r6.w, l(0.000000), r8.z
 120:   ge r7.w, r8.z, l(1.000000)
 121:   or r6.w, r6.w, r7.w
 122:   movc r5.w, r6.w, l(1.000000), r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 125:   mul r3.w, r3.w, r5.w
 126:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 127:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 128:   dp3 r2.w, r6.xyzx, r6.xyzx
 129:   max r2.w, r2.w, l(0.000000)
 130:   rsq r2.w, r2.w
 131:   mul r6.xyz, r2.wwww, r6.xyzx
 132:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 133:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 134:   mul r2.w, r2.w, r2.w
 135:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 136:   mul r3.w, r3.w, r3.w
 137:   mul r2.w, r2.w, r2.w
 138:   max r3.w, r3.w, l(0.100000)
 139:   mul r2.w, r2.w, r3.w
 140:   mul r2.w, r2.w, l(3.000000)
 141:   div r2.w, l(0.062500), r2.w
 142:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 143:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 144:   iadd r1.w, r1.w, l(1)
 145: endloop 
 146: add o0.xyz, r0.yzwy, r5.xyzx
 147: mov o0.w, l(0.300000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 118:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 119:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 120:   ge r6.w, l(0.000000), r8.z
 121:   ge r7.w, r8.z, l(1.000000)
 122:   or r6.w, r6.w, r7.w
 123:   movc r5.w, r6.w, l(1.000000), r5.w
 124:   ftoi r6.w, cb1[r2.w + 1024].x
 125:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 126:   max r6.w, r6.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r6.w
 128:   mul r3.w, r5.w, r3.w
 129:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 130:   mul r3.w, r3.w, r5.w
 131:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 132:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 133:   dp3 r2.w, r6.xyzx, r6.xyzx
 134:   max r2.w, r2.w, l(0.000000)
 135:   rsq r2.w, r2.w
 136:   mul r6.xyz, r2.wwww, r6.xyzx
 137:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 138:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 139:   mul r2.w, r2.w, r2.w
 140:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 141:   mul r3.w, r3.w, r3.w
 142:   mul r2.w, r2.w, r2.w
 143:   max r3.w, r3.w, l(0.100000)
 144:   mul r2.w, r2.w, r3.w
 145:   mul r2.w, r2.w, l(3.000000)
 146:   div r2.w, l(0.062500), r2.w
 147:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 148:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 149:   iadd r1.w, r1.w, l(1)
 150: endloop 
 151: add o0.xyz, r0.yzwy, r5.xyzx
 152: mov o0.w, l(0.300000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 117:   round_ni r9.xy, r9.xyxx
 118:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 119:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 120:   mul r11.xyzw, r10.xxzz, r10.xxzz
 121:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 122:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 123:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 124:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 125:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 126:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 127:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 128:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 129:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 130:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 131:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mov r12.z, r11.x
 136:   mov r12.w, r8.x
 137:   mov r13.z, r14.x
 138:   mov r13.w, r9.z
 139:   add r10.xyzw, r12.zwxz, r13.zwxz
 140:   mov r11.z, r12.y
 141:   mov r11.w, r8.y
 142:   mov r14.z, r13.y
 143:   mov r14.w, r9.w
 144:   add r8.xyw, r11.zyzw, r14.zyzw
 145:   div r11.xyz, r13.xzwx, r10.zwyz
 146:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 147:   div r12.xyz, r14.zywz, r8.xywx
 148:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 149:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 150:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 151:   mov r11.w, r12.x
 152:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 153:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 154:   mov r12.w, r11.y
 155:   mov r11.yw, r12.yyyz
 156:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 157:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 158:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 159:   mul r15.xyzw, r8.xxxy, r10.zwyz
 160:   mul r16.xyzw, r8.yyww, r10.xyzw
 161:   mul r5.w, r8.w, r10.y
 162:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 163:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 164:   mul r7.w, r7.w, r15.y
 165:   mad r6.w, r15.x, r6.w, r7.w
 166:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 167:   mad r6.w, r15.z, r7.w, r6.w
 168:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 169:   mad r6.w, r15.w, r7.w, r6.w
 170:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 171:   mad r6.w, r16.x, r7.w, r6.w
 172:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 173:   mad r6.w, r16.y, r7.w, r6.w
 174:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 175:   mad r6.w, r16.z, r7.w, r6.w
 176:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 177:   mad r6.w, r16.w, r7.w, r6.w
 178:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 179:   mad r5.w, r5.w, r7.w, r6.w
 180:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 181:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 182:   ge r6.w, l(0.000000), r8.z
 183:   ge r7.w, r8.z, l(1.000000)
 184:   or r6.w, r6.w, r7.w
 185:   movc r5.w, r6.w, l(1.000000), r5.w
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 118:   round_ni r9.xy, r9.xyxx
 119:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 120:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 121:   mul r11.xyzw, r10.xxzz, r10.xxzz
 122:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 123:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 124:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 125:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 126:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 127:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 128:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 129:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 130:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 131:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 136:   mov r12.z, r11.x
 137:   mov r12.w, r8.x
 138:   mov r13.z, r14.x
 139:   mov r13.w, r9.z
 140:   add r10.xyzw, r12.zwxz, r13.zwxz
 141:   mov r11.z, r12.y
 142:   mov r11.w, r8.y
 143:   mov r14.z, r13.y
 144:   mov r14.w, r9.w
 145:   add r8.xyw, r11.zyzw, r14.zyzw
 146:   div r11.xyz, r13.xzwx, r10.zwyz
 147:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 148:   div r12.xyz, r14.zywz, r8.xywx
 149:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 150:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 151:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 152:   mov r11.w, r12.x
 153:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 154:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 155:   mov r12.w, r11.y
 156:   mov r11.yw, r12.yyyz
 157:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 158:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 159:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 160:   mul r15.xyzw, r8.xxxy, r10.zwyz
 161:   mul r16.xyzw, r8.yyww, r10.xyzw
 162:   mul r5.w, r8.w, r10.y
 163:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 164:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 165:   mul r7.w, r7.w, r15.y
 166:   mad r6.w, r15.x, r6.w, r7.w
 167:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 168:   mad r6.w, r15.z, r7.w, r6.w
 169:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 170:   mad r6.w, r15.w, r7.w, r6.w
 171:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 172:   mad r6.w, r16.x, r7.w, r6.w
 173:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 174:   mad r6.w, r16.y, r7.w, r6.w
 175:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 176:   mad r6.w, r16.z, r7.w, r6.w
 177:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 178:   mad r6.w, r16.w, r7.w, r6.w
 179:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 180:   mad r5.w, r5.w, r7.w, r6.w
 181:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 182:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 183:   ge r6.w, l(0.000000), r8.z
 184:   ge r7.w, r8.z, l(1.000000)
 185:   or r6.w, r6.w, r7.w
 186:   movc r5.w, r6.w, l(1.000000), r5.w
 187:   ftoi r6.w, cb1[r2.w + 1024].x
 188:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 189:   max r6.w, r6.w, cb1[r2.w + 1024].y
 190:   mul r3.w, r3.w, r6.w
 191:   mul r3.w, r5.w, r3.w
 192:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 193:   mul r3.w, r3.w, r5.w
 194:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 195:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 196:   dp3 r2.w, r6.xyzx, r6.xyzx
 197:   max r2.w, r2.w, l(0.000000)
 198:   rsq r2.w, r2.w
 199:   mul r6.xyz, r2.wwww, r6.xyzx
 200:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 201:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 202:   mul r2.w, r2.w, r2.w
 203:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 204:   mul r3.w, r3.w, r3.w
 205:   mul r2.w, r2.w, r2.w
 206:   max r3.w, r3.w, l(0.100000)
 207:   mul r2.w, r2.w, r3.w
 208:   mul r2.w, r2.w, l(3.000000)
 209:   div r2.w, l(0.062500), r2.w
 210:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 211:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 212:   iadd r1.w, r1.w, l(1)
 213: endloop 
 214: add o0.xyz, r0.yzwy, r5.xyzx
 215: mov o0.w, l(0.300000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 117:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 118:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 119:   ge r6.w, l(0.000000), r8.z
 120:   ge r7.w, r8.z, l(1.000000)
 121:   or r6.w, r6.w, r7.w
 122:   movc r5.w, r6.w, l(1.000000), r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 125:   mul r3.w, r3.w, r5.w
 126:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 127:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 128:   dp3 r2.w, r6.xyzx, r6.xyzx
 129:   max r2.w, r2.w, l(0.000000)
 130:   rsq r2.w, r2.w
 131:   mul r6.xyz, r2.wwww, r6.xyzx
 132:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 133:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 134:   mul r2.w, r2.w, r2.w
 135:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 136:   mul r3.w, r3.w, r3.w
 137:   mul r2.w, r2.w, r2.w
 138:   max r3.w, r3.w, l(0.100000)
 139:   mul r2.w, r2.w, r3.w
 140:   mul r2.w, r2.w, l(3.000000)
 141:   div r2.w, l(0.062500), r2.w
 142:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 143:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 144:   iadd r1.w, r1.w, l(1)
 145: endloop 
 146: add o0.xyz, r0.yzwy, r5.xyzx
 147: mov o0.w, l(0.300000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 118:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 119:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 120:   ge r6.w, l(0.000000), r8.z
 121:   ge r7.w, r8.z, l(1.000000)
 122:   or r6.w, r6.w, r7.w
 123:   movc r5.w, r6.w, l(1.000000), r5.w
 124:   ftoi r6.w, cb1[r2.w + 1024].x
 125:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 126:   max r6.w, r6.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r6.w
 128:   mul r3.w, r5.w, r3.w
 129:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 130:   mul r3.w, r3.w, r5.w
 131:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 132:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 133:   dp3 r2.w, r6.xyzx, r6.xyzx
 134:   max r2.w, r2.w, l(0.000000)
 135:   rsq r2.w, r2.w
 136:   mul r6.xyz, r2.wwww, r6.xyzx
 137:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 138:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 139:   mul r2.w, r2.w, r2.w
 140:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 141:   mul r3.w, r3.w, r3.w
 142:   mul r2.w, r2.w, r2.w
 143:   max r3.w, r3.w, l(0.100000)
 144:   mul r2.w, r2.w, r3.w
 145:   mul r2.w, r2.w, l(3.000000)
 146:   div r2.w, l(0.062500), r2.w
 147:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 148:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 149:   iadd r1.w, r1.w, l(1)
 150: endloop 
 151: add o0.xyz, r0.yzwy, r5.xyzx
 152: mov o0.w, l(0.300000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 117:   round_ni r9.xy, r9.xyxx
 118:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 119:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 120:   mul r11.xyzw, r10.xxzz, r10.xxzz
 121:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 122:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 123:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 124:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 125:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 126:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 127:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 128:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 129:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 130:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 131:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mov r12.z, r11.x
 136:   mov r12.w, r8.x
 137:   mov r13.z, r14.x
 138:   mov r13.w, r9.z
 139:   add r10.xyzw, r12.zwxz, r13.zwxz
 140:   mov r11.z, r12.y
 141:   mov r11.w, r8.y
 142:   mov r14.z, r13.y
 143:   mov r14.w, r9.w
 144:   add r8.xyw, r11.zyzw, r14.zyzw
 145:   div r11.xyz, r13.xzwx, r10.zwyz
 146:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 147:   div r12.xyz, r14.zywz, r8.xywx
 148:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 149:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 150:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 151:   mov r11.w, r12.x
 152:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 153:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 154:   mov r12.w, r11.y
 155:   mov r11.yw, r12.yyyz
 156:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 157:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 158:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 159:   mul r15.xyzw, r8.xxxy, r10.zwyz
 160:   mul r16.xyzw, r8.yyww, r10.xyzw
 161:   mul r5.w, r8.w, r10.y
 162:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 163:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 164:   mul r7.w, r7.w, r15.y
 165:   mad r6.w, r15.x, r6.w, r7.w
 166:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 167:   mad r6.w, r15.z, r7.w, r6.w
 168:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 169:   mad r6.w, r15.w, r7.w, r6.w
 170:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 171:   mad r6.w, r16.x, r7.w, r6.w
 172:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 173:   mad r6.w, r16.y, r7.w, r6.w
 174:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 175:   mad r6.w, r16.z, r7.w, r6.w
 176:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 177:   mad r6.w, r16.w, r7.w, r6.w
 178:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 179:   mad r5.w, r5.w, r7.w, r6.w
 180:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 181:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 182:   ge r6.w, l(0.000000), r8.z
 183:   ge r7.w, r8.z, l(1.000000)
 184:   or r6.w, r6.w, r7.w
 185:   movc r5.w, r6.w, l(1.000000), r5.w
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 118:   round_ni r9.xy, r9.xyxx
 119:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 120:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 121:   mul r11.xyzw, r10.xxzz, r10.xxzz
 122:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 123:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 124:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 125:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 126:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 127:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 128:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 129:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 130:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 131:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 136:   mov r12.z, r11.x
 137:   mov r12.w, r8.x
 138:   mov r13.z, r14.x
 139:   mov r13.w, r9.z
 140:   add r10.xyzw, r12.zwxz, r13.zwxz
 141:   mov r11.z, r12.y
 142:   mov r11.w, r8.y
 143:   mov r14.z, r13.y
 144:   mov r14.w, r9.w
 145:   add r8.xyw, r11.zyzw, r14.zyzw
 146:   div r11.xyz, r13.xzwx, r10.zwyz
 147:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 148:   div r12.xyz, r14.zywz, r8.xywx
 149:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 150:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 151:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 152:   mov r11.w, r12.x
 153:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 154:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 155:   mov r12.w, r11.y
 156:   mov r11.yw, r12.yyyz
 157:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 158:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 159:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 160:   mul r15.xyzw, r8.xxxy, r10.zwyz
 161:   mul r16.xyzw, r8.yyww, r10.xyzw
 162:   mul r5.w, r8.w, r10.y
 163:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 164:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 165:   mul r7.w, r7.w, r15.y
 166:   mad r6.w, r15.x, r6.w, r7.w
 167:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 168:   mad r6.w, r15.z, r7.w, r6.w
 169:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 170:   mad r6.w, r15.w, r7.w, r6.w
 171:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 172:   mad r6.w, r16.x, r7.w, r6.w
 173:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 174:   mad r6.w, r16.y, r7.w, r6.w
 175:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 176:   mad r6.w, r16.z, r7.w, r6.w
 177:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 178:   mad r6.w, r16.w, r7.w, r6.w
 179:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 180:   mad r5.w, r5.w, r7.w, r6.w
 181:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 182:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 183:   ge r6.w, l(0.000000), r8.z
 184:   ge r7.w, r8.z, l(1.000000)
 185:   or r6.w, r6.w, r7.w
 186:   movc r5.w, r6.w, l(1.000000), r5.w
 187:   ftoi r6.w, cb1[r2.w + 1024].x
 188:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 189:   max r6.w, r6.w, cb1[r2.w + 1024].y
 190:   mul r3.w, r3.w, r6.w
 191:   mul r3.w, r5.w, r3.w
 192:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 193:   mul r3.w, r3.w, r5.w
 194:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 195:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 196:   dp3 r2.w, r6.xyzx, r6.xyzx
 197:   max r2.w, r2.w, l(0.000000)
 198:   rsq r2.w, r2.w
 199:   mul r6.xyz, r2.wwww, r6.xyzx
 200:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 201:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 202:   mul r2.w, r2.w, r2.w
 203:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 204:   mul r3.w, r3.w, r3.w
 205:   mul r2.w, r2.w, r2.w
 206:   max r3.w, r3.w, l(0.100000)
 207:   mul r2.w, r2.w, r3.w
 208:   mul r2.w, r2.w, l(3.000000)
 209:   div r2.w, l(0.062500), r2.w
 210:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 211:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 212:   iadd r1.w, r1.w, l(1)
 213: endloop 
 214: add o0.xyz, r0.yzwy, r5.xyzx
 215: mov o0.w, l(0.300000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r4.xyz, r0.wwww, cb0[4].xyzx
  91: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  92: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 89 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r4.xyz, r0.wwww, cb0[4].xyzx
  92: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  93: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  94: add o0.xyz, r0.xyzx, r1.xyzx
  95: mov o0.w, l(0.300000)
  96: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 154: add o0.xyz, r1.xyzx, r0.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r4.xyz, r0.wwww, cb0[4].xyzx
  91: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  92: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 89 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r4.xyz, r0.wwww, cb0[4].xyzx
  92: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  93: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  94: add o0.xyz, r0.xyzx, r1.xyzx
  95: mov o0.w, l(0.300000)
  96: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 154: add o0.xyz, r1.xyzx, r0.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: sample_c_lz r1.w, v9.xyxx, t1.xxxx, s1, v9.z
  45: add r2.w, -cb3[29].x, l(1.000000)
  46: mad r1.w, r1.w, cb3[29].x, r2.w
  47: ge r2.w, l(0.000000), v9.z
  48: ge r3.w, v9.z, l(1.000000)
  49: or r2.w, r2.w, r3.w
  50: movc r1.w, r2.w, l(1.000000), r1.w
  51: dp3 r2.w, -r2.xyzx, r1.xyzx
  52: add r2.w, r2.w, r2.w
  53: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  54: dp3_sat r2.w, r1.xyzx, r2.xyzx
  55: add r2.w, -r2.w, l(1.000000)
  56: mul r2.w, r2.w, r2.w
  57: mul r2.w, r2.w, r2.w
  58: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  59: add r3.w, r4.w, l(-1.000000)
  60: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  61: max r3.w, r3.w, l(0.000000)
  62: log r3.w, r3.w
  63: mul r3.w, r3.w, cb2[14].y
  64: exp r3.w, r3.w
  65: mul r3.w, r3.w, cb2[14].x
  66: mul r4.xyz, r4.xyzx, r3.wwww
  67: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  68: mad r2.w, r2.w, l(0.500000), l(0.040000)
  69: mul r4.xyz, r2.wwww, r4.xyzx
  70: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  71: mul r1.w, r1.w, cb2[10].z
  72: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  73: mul r1.w, r1.w, r2.w
  74: mul r5.xyz, r1.wwww, cb0[4].xyzx
  75: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  76: dp3 r0.x, r6.xyzx, r6.xyzx
  77: max r0.x, r0.x, l(0.000000)
  78: rsq r0.x, r0.x
  79: mul r6.xyz, r0.xxxx, r6.xyzx
  80: dp3_sat r0.x, r1.xyzx, r6.xyzx
  81: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  82: mul r0.x, r0.x, r0.x
  83: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  84: mul r1.w, r1.w, r1.w
  85: mul r0.x, r0.x, r0.x
  86: max r1.w, r1.w, l(0.100000)
  87: mul r0.x, r0.x, r1.w
  88: mul r0.x, r0.x, l(3.000000)
  89: div r0.x, l(0.062500), r0.x
  90: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  91: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  92: min r0.x, cb0[5].x, cb2[10].y
  93: ftoi r0.x, r0.x
  94: mov r5.xyz, r4.xyzx
  95: mov r1.w, l(0)
  96: loop 
  97:   uge r2.w, r1.w, r0.x
  98:   breakc_nz r2.w
  99:   and r2.w, r1.w, l(3)
 100:   ushr r3.w, r1.w, l(2)
 101:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 102:   ftoi r2.w, r2.w
 103:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 104:   dp3 r3.w, r6.xyzx, r6.xyzx
 105:   max r3.w, r3.w, l(0.000061)
 106:   rsq r4.w, r3.w
 107:   mul r7.xyz, r4.wwww, r6.xyzx
 108:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 109:   mul r3.w, r3.w, cb1[r2.w + 512].x
 110:   mad r3.w, -r3.w, r3.w, l(1.000000)
 111:   max r3.w, r3.w, l(0.000000)
 112:   mul r3.w, r3.w, r3.w
 113:   mul r3.w, r3.w, r5.w
 114:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 115:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 116:   mul r5.w, r5.w, r5.w
 117:   mul r3.w, r3.w, r5.w
 118:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 119:   mul r3.w, r3.w, r5.w
 120:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 121:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 122:   dp3 r2.w, r6.xyzx, r6.xyzx
 123:   max r2.w, r2.w, l(0.000000)
 124:   rsq r2.w, r2.w
 125:   mul r6.xyz, r2.wwww, r6.xyzx
 126:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 127:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 128:   mul r2.w, r2.w, r2.w
 129:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 130:   mul r3.w, r3.w, r3.w
 131:   mul r2.w, r2.w, r2.w
 132:   max r3.w, r3.w, l(0.100000)
 133:   mul r2.w, r2.w, r3.w
 134:   mul r2.w, r2.w, l(3.000000)
 135:   div r2.w, l(0.062500), r2.w
 136:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 137:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 138:   iadd r1.w, r1.w, l(1)
 139: endloop 
 140: add o0.xyz, r0.yzwy, r5.xyzx
 141: mov o0.w, l(0.300000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: sample_c_lz r2.w, v9.xyxx, t1.xxxx, s1, v9.z
  46: add r3.w, -cb3[29].x, l(1.000000)
  47: mad r2.w, r2.w, cb3[29].x, r3.w
  48: ge r3.w, l(0.000000), v9.z
  49: ge r4.x, v9.z, l(1.000000)
  50: or r3.w, r3.w, r4.x
  51: movc r2.w, r3.w, l(1.000000), r2.w
  52: dp3 r3.w, -r2.xyzx, r1.xyzx
  53: add r3.w, r3.w, r3.w
  54: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  55: dp3_sat r3.w, r1.xyzx, r2.xyzx
  56: add r3.w, -r3.w, l(1.000000)
  57: mul r3.w, r3.w, r3.w
  58: mul r3.w, r3.w, r3.w
  59: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  60: add r4.w, r4.w, l(-1.000000)
  61: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  62: max r4.w, r4.w, l(0.000000)
  63: log r4.w, r4.w
  64: mul r4.w, r4.w, cb2[14].y
  65: exp r4.w, r4.w
  66: mul r4.w, r4.w, cb2[14].x
  67: mul r4.xyz, r4.xyzx, r4.wwww
  68: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  69: mad r3.w, r3.w, l(0.500000), l(0.040000)
  70: mul r4.xyz, r3.wwww, r4.xyzx
  71: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  72: mul r1.w, r1.w, r2.w
  73: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  74: mul r1.w, r1.w, r2.w
  75: mul r5.xyz, r1.wwww, cb0[4].xyzx
  76: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  77: dp3 r0.x, r6.xyzx, r6.xyzx
  78: max r0.x, r0.x, l(0.000000)
  79: rsq r0.x, r0.x
  80: mul r6.xyz, r0.xxxx, r6.xyzx
  81: dp3_sat r0.x, r1.xyzx, r6.xyzx
  82: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  83: mul r0.x, r0.x, r0.x
  84: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  85: mul r1.w, r1.w, r1.w
  86: mul r0.x, r0.x, r0.x
  87: max r1.w, r1.w, l(0.100000)
  88: mul r0.x, r0.x, r1.w
  89: mul r0.x, r0.x, l(3.000000)
  90: div r0.x, l(0.062500), r0.x
  91: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  92: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  93: min r0.x, cb0[5].x, cb2[10].y
  94: ftoi r0.x, r0.x
  95: mov r5.xyz, r4.xyzx
  96: mov r1.w, l(0)
  97: loop 
  98:   uge r2.w, r1.w, r0.x
  99:   breakc_nz r2.w
 100:   and r2.w, r1.w, l(3)
 101:   ushr r3.w, r1.w, l(2)
 102:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 103:   ftoi r2.w, r2.w
 104:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 105:   dp3 r3.w, r6.xyzx, r6.xyzx
 106:   max r3.w, r3.w, l(0.000061)
 107:   rsq r4.w, r3.w
 108:   mul r7.xyz, r4.wwww, r6.xyzx
 109:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 110:   mul r3.w, r3.w, cb1[r2.w + 512].x
 111:   mad r3.w, -r3.w, r3.w, l(1.000000)
 112:   max r3.w, r3.w, l(0.000000)
 113:   mul r3.w, r3.w, r3.w
 114:   mul r3.w, r3.w, r5.w
 115:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 116:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 117:   mul r5.w, r5.w, r5.w
 118:   mul r3.w, r3.w, r5.w
 119:   ftoi r5.w, cb1[r2.w + 1024].x
 120:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 121:   max r5.w, r5.w, cb1[r2.w + 1024].y
 122:   mul r3.w, r3.w, r5.w
 123:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 124:   mul r3.w, r3.w, r5.w
 125:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 126:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 127:   dp3 r2.w, r6.xyzx, r6.xyzx
 128:   max r2.w, r2.w, l(0.000000)
 129:   rsq r2.w, r2.w
 130:   mul r6.xyz, r2.wwww, r6.xyzx
 131:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 132:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 133:   mul r2.w, r2.w, r2.w
 134:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 135:   mul r3.w, r3.w, r3.w
 136:   mul r2.w, r2.w, r2.w
 137:   max r3.w, r3.w, l(0.100000)
 138:   mul r2.w, r2.w, r3.w
 139:   mul r2.w, r2.w, l(3.000000)
 140:   div r2.w, l(0.062500), r2.w
 141:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 142:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 143:   iadd r1.w, r1.w, l(1)
 144: endloop 
 145: add o0.xyz, r0.yzwy, r5.xyzx
 146: mov o0.w, l(0.300000)
 147: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
   9: mul r1.x, r1.y, cb0[12].x
  10: mul r2.w, r1.x, l(0.500000)
  11: add r1.xy, r2.zzzz, r2.xwxx
  12: div r1.xy, r1.xyxx, r1.zzzz
  13: mul r1.z, cb0[10].x, cb4[4].x
  14: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  15: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  16: mul r1.zw, r1.xxxy, r2.xxxy
  17: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  18: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  19: dp3 r1.w, r0.yzwy, r0.yzwy
  20: rsq r1.w, r1.w
  21: mul r0.yzw, r0.yyzw, r1.wwww
  22: dp3 r1.w, v5.xyzx, v5.xyzx
  23: rsq r2.x, r1.w
  24: mul r2.xyz, r2.xxxx, v5.xyzx
  25: dp3_sat r0.y, r0.yzwy, r2.xyzx
  26: add r0.y, -r0.y, l(1.000000)
  27: log r0.y, r0.y
  28: mul r0.y, r0.y, cb4[1].x
  29: exp r0.y, r0.y
  30: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  31: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  32: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  33: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  34: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  35: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  36: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  37: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  38: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  39: rsq r0.x, r0.x
  40: mul r1.xyz, r0.xxxx, v2.xyzx
  41: max r0.x, r1.w, l(0.000000)
  42: rsq r0.x, r0.x
  43: mul r2.xyz, r0.xxxx, v5.xyzx
  44: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  45: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  46: round_ni r4.xy, r4.xyxx
  47: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  48: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  49: mul r6.xyzw, r5.xxzz, r5.xxzz
  50: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  51: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  52: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  53: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  55: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  57: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  58: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  59: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  64: mov r8.z, r7.x
  65: mov r8.w, r4.z
  66: mov r6.z, r9.x
  67: mov r6.w, r5.x
  68: add r10.xyzw, r6.zwxz, r8.zwxz
  69: mov r7.z, r8.y
  70: mov r7.w, r4.w
  71: mov r9.z, r6.y
  72: mov r9.w, r5.z
  73: add r5.xyz, r7.zywz, r9.zywz
  74: div r6.xyz, r6.xzwx, r10.zwyz
  75: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  76: div r7.xyz, r9.zywz, r5.xyzx
  77: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  78: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  79: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  80: mov r6.w, r7.x
  81: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  82: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  83: mov r7.w, r6.y
  84: mov r6.yw, r7.yyyz
  85: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  86: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  87: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  88: mul r11.xyzw, r5.xxxy, r10.zwyz
  89: mul r12.xyzw, r5.yyzz, r10.xyzw
  90: mul r1.w, r5.z, r10.y
  91: sample_c_lz r2.w, r8.xyxx, t1.xxxx, s1, v9.z
  92: sample_c_lz r3.w, r8.zwzz, t1.xxxx, s1, v9.z
  93: mul r3.w, r3.w, r11.y
  94: mad r2.w, r11.x, r2.w, r3.w
  95: sample_c_lz r3.w, r4.zwzz, t1.xxxx, s1, v9.z
  96: mad r2.w, r11.z, r3.w, r2.w
  97: sample_c_lz r3.w, r7.xyxx, t1.xxxx, s1, v9.z
  98: mad r2.w, r11.w, r3.w, r2.w
  99: sample_c_lz r3.w, r9.xyxx, t1.xxxx, s1, v9.z
 100: mad r2.w, r12.x, r3.w, r2.w
 101: sample_c_lz r3.w, r9.zwzz, t1.xxxx, s1, v9.z
 102: mad r2.w, r12.y, r3.w, r2.w
 103: sample_c_lz r3.w, r7.zwzz, t1.xxxx, s1, v9.z
 104: mad r2.w, r12.z, r3.w, r2.w
 105: sample_c_lz r3.w, r6.xyxx, t1.xxxx, s1, v9.z
 106: mad r2.w, r12.w, r3.w, r2.w
 107: sample_c_lz r3.w, r6.zwzz, t1.xxxx, s1, v9.z
 108: mad r1.w, r1.w, r3.w, r2.w
 109: add r2.w, -cb3[29].x, l(1.000000)
 110: mad r1.w, r1.w, cb3[29].x, r2.w
 111: ge r2.w, l(0.000000), v9.z
 112: ge r3.w, v9.z, l(1.000000)
 113: or r2.w, r2.w, r3.w
 114: movc r1.w, r2.w, l(1.000000), r1.w
 115: dp3 r2.w, -r2.xyzx, r1.xyzx
 116: add r2.w, r2.w, r2.w
 117: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 118: dp3_sat r2.w, r1.xyzx, r2.xyzx
 119: add r2.w, -r2.w, l(1.000000)
 120: mul r2.w, r2.w, r2.w
 121: mul r2.w, r2.w, r2.w
 122: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 123: add r3.w, r4.w, l(-1.000000)
 124: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 125: max r3.w, r3.w, l(0.000000)
 126: log r3.w, r3.w
 127: mul r3.w, r3.w, cb2[14].y
 128: exp r3.w, r3.w
 129: mul r3.w, r3.w, cb2[14].x
 130: mul r4.xyz, r4.xyzx, r3.wwww
 131: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 132: mad r2.w, r2.w, l(0.500000), l(0.040000)
 133: mul r4.xyz, r2.wwww, r4.xyzx
 134: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 135: mul r1.w, r1.w, cb2[10].z
 136: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 137: mul r1.w, r1.w, r2.w
 138: mul r5.xyz, r1.wwww, cb0[4].xyzx
 139: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 140: dp3 r0.x, r6.xyzx, r6.xyzx
 141: max r0.x, r0.x, l(0.000000)
 142: rsq r0.x, r0.x
 143: mul r6.xyz, r0.xxxx, r6.xyzx
 144: dp3_sat r0.x, r1.xyzx, r6.xyzx
 145: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 146: mul r0.x, r0.x, r0.x
 147: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 148: mul r1.w, r1.w, r1.w
 149: mul r0.x, r0.x, r0.x
 150: max r1.w, r1.w, l(0.100000)
 151: mul r0.x, r0.x, r1.w
 152: mul r0.x, r0.x, l(3.000000)
 153: div r0.x, l(0.062500), r0.x
 154: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 155: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 156: min r0.x, cb0[5].x, cb2[10].y
 157: ftoi r0.x, r0.x
 158: mov r5.xyz, r4.xyzx
 159: mov r1.w, l(0)
 160: loop 
 161:   uge r2.w, r1.w, r0.x
 162:   breakc_nz r2.w
 163:   and r2.w, r1.w, l(3)
 164:   ushr r3.w, r1.w, l(2)
 165:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 166:   ftoi r2.w, r2.w
 167:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 168:   dp3 r3.w, r6.xyzx, r6.xyzx
 169:   max r3.w, r3.w, l(0.000061)
 170:   rsq r4.w, r3.w
 171:   mul r7.xyz, r4.wwww, r6.xyzx
 172:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 173:   mul r3.w, r3.w, cb1[r2.w + 512].x
 174:   mad r3.w, -r3.w, r3.w, l(1.000000)
 175:   max r3.w, r3.w, l(0.000000)
 176:   mul r3.w, r3.w, r3.w
 177:   mul r3.w, r3.w, r5.w
 178:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 179:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 180:   mul r5.w, r5.w, r5.w
 181:   mul r3.w, r3.w, r5.w
 182:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 183:   mul r3.w, r3.w, r5.w
 184:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 185:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 186:   dp3 r2.w, r6.xyzx, r6.xyzx
 187:   max r2.w, r2.w, l(0.000000)
 188:   rsq r2.w, r2.w
 189:   mul r6.xyz, r2.wwww, r6.xyzx
 190:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 191:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 192:   mul r2.w, r2.w, r2.w
 193:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 194:   mul r3.w, r3.w, r3.w
 195:   mul r2.w, r2.w, r2.w
 196:   max r3.w, r3.w, l(0.100000)
 197:   mul r2.w, r2.w, r3.w
 198:   mul r2.w, r2.w, l(3.000000)
 199:   div r2.w, l(0.062500), r2.w
 200:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 201:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 202:   iadd r1.w, r1.w, l(1)
 203: endloop 
 204: add o0.xyz, r0.yzwy, r5.xyzx
 205: mov o0.w, l(0.300000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
   9: mul r1.x, r1.y, cb0[12].x
  10: mul r2.w, r1.x, l(0.500000)
  11: add r1.xy, r2.zzzz, r2.xwxx
  12: div r1.xy, r1.xyxx, r1.zzzz
  13: mul r1.z, cb0[10].x, cb4[4].x
  14: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  15: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  16: mul r1.zw, r1.xxxy, r2.xxxy
  17: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  18: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  19: dp3 r1.w, r0.yzwy, r0.yzwy
  20: rsq r1.w, r1.w
  21: mul r0.yzw, r0.yyzw, r1.wwww
  22: dp3 r1.w, v5.xyzx, v5.xyzx
  23: rsq r2.x, r1.w
  24: mul r2.xyz, r2.xxxx, v5.xyzx
  25: dp3_sat r0.y, r0.yzwy, r2.xyzx
  26: add r0.y, -r0.y, l(1.000000)
  27: log r0.y, r0.y
  28: mul r0.y, r0.y, cb4[1].x
  29: exp r0.y, r0.y
  30: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  31: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  32: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  33: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  34: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  35: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  36: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  37: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  38: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  39: rsq r0.x, r0.x
  40: mul r1.xyz, r0.xxxx, v2.xyzx
  41: max r0.x, r1.w, l(0.000000)
  42: rsq r0.x, r0.x
  43: mul r2.xyz, r0.xxxx, v5.xyzx
  44: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  45: mul r1.w, cb2[10].z, cb2[13].x
  46: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  47: round_ni r4.xy, r4.xyxx
  48: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  49: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  50: mul r6.xyzw, r5.xxzz, r5.xxzz
  51: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  52: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  53: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  54: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  56: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  58: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  59: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  60: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  64: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  65: mov r8.z, r7.x
  66: mov r8.w, r4.z
  67: mov r6.z, r9.x
  68: mov r6.w, r5.x
  69: add r10.xyzw, r6.zwxz, r8.zwxz
  70: mov r7.z, r8.y
  71: mov r7.w, r4.w
  72: mov r9.z, r6.y
  73: mov r9.w, r5.z
  74: add r5.xyz, r7.zywz, r9.zywz
  75: div r6.xyz, r6.xzwx, r10.zwyz
  76: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  77: div r7.xyz, r9.zywz, r5.xyzx
  78: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  79: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  80: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  81: mov r6.w, r7.x
  82: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  83: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  84: mov r7.w, r6.y
  85: mov r6.yw, r7.yyyz
  86: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  87: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  88: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  89: mul r11.xyzw, r5.xxxy, r10.zwyz
  90: mul r12.xyzw, r5.yyzz, r10.xyzw
  91: mul r2.w, r5.z, r10.y
  92: sample_c_lz r3.w, r8.xyxx, t1.xxxx, s1, v9.z
  93: sample_c_lz r4.x, r8.zwzz, t1.xxxx, s1, v9.z
  94: mul r4.x, r4.x, r11.y
  95: mad r3.w, r11.x, r3.w, r4.x
  96: sample_c_lz r4.x, r4.zwzz, t1.xxxx, s1, v9.z
  97: mad r3.w, r11.z, r4.x, r3.w
  98: sample_c_lz r4.x, r7.xyxx, t1.xxxx, s1, v9.z
  99: mad r3.w, r11.w, r4.x, r3.w
 100: sample_c_lz r4.x, r9.xyxx, t1.xxxx, s1, v9.z
 101: mad r3.w, r12.x, r4.x, r3.w
 102: sample_c_lz r4.x, r9.zwzz, t1.xxxx, s1, v9.z
 103: mad r3.w, r12.y, r4.x, r3.w
 104: sample_c_lz r4.x, r7.zwzz, t1.xxxx, s1, v9.z
 105: mad r3.w, r12.z, r4.x, r3.w
 106: sample_c_lz r4.x, r6.xyxx, t1.xxxx, s1, v9.z
 107: mad r3.w, r12.w, r4.x, r3.w
 108: sample_c_lz r4.x, r6.zwzz, t1.xxxx, s1, v9.z
 109: mad r2.w, r2.w, r4.x, r3.w
 110: add r3.w, -cb3[29].x, l(1.000000)
 111: mad r2.w, r2.w, cb3[29].x, r3.w
 112: ge r3.w, l(0.000000), v9.z
 113: ge r4.x, v9.z, l(1.000000)
 114: or r3.w, r3.w, r4.x
 115: movc r2.w, r3.w, l(1.000000), r2.w
 116: dp3 r3.w, -r2.xyzx, r1.xyzx
 117: add r3.w, r3.w, r3.w
 118: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 119: dp3_sat r3.w, r1.xyzx, r2.xyzx
 120: add r3.w, -r3.w, l(1.000000)
 121: mul r3.w, r3.w, r3.w
 122: mul r3.w, r3.w, r3.w
 123: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 124: add r4.w, r4.w, l(-1.000000)
 125: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 126: max r4.w, r4.w, l(0.000000)
 127: log r4.w, r4.w
 128: mul r4.w, r4.w, cb2[14].y
 129: exp r4.w, r4.w
 130: mul r4.w, r4.w, cb2[14].x
 131: mul r4.xyz, r4.xyzx, r4.wwww
 132: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 133: mad r3.w, r3.w, l(0.500000), l(0.040000)
 134: mul r4.xyz, r3.wwww, r4.xyzx
 135: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 136: mul r1.w, r1.w, r2.w
 137: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 138: mul r1.w, r1.w, r2.w
 139: mul r5.xyz, r1.wwww, cb0[4].xyzx
 140: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 141: dp3 r0.x, r6.xyzx, r6.xyzx
 142: max r0.x, r0.x, l(0.000000)
 143: rsq r0.x, r0.x
 144: mul r6.xyz, r0.xxxx, r6.xyzx
 145: dp3_sat r0.x, r1.xyzx, r6.xyzx
 146: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 147: mul r0.x, r0.x, r0.x
 148: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 149: mul r1.w, r1.w, r1.w
 150: mul r0.x, r0.x, r0.x
 151: max r1.w, r1.w, l(0.100000)
 152: mul r0.x, r0.x, r1.w
 153: mul r0.x, r0.x, l(3.000000)
 154: div r0.x, l(0.062500), r0.x
 155: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 156: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 157: min r0.x, cb0[5].x, cb2[10].y
 158: ftoi r0.x, r0.x
 159: mov r5.xyz, r4.xyzx
 160: mov r1.w, l(0)
 161: loop 
 162:   uge r2.w, r1.w, r0.x
 163:   breakc_nz r2.w
 164:   and r2.w, r1.w, l(3)
 165:   ushr r3.w, r1.w, l(2)
 166:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 167:   ftoi r2.w, r2.w
 168:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 169:   dp3 r3.w, r6.xyzx, r6.xyzx
 170:   max r3.w, r3.w, l(0.000061)
 171:   rsq r4.w, r3.w
 172:   mul r7.xyz, r4.wwww, r6.xyzx
 173:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 174:   mul r3.w, r3.w, cb1[r2.w + 512].x
 175:   mad r3.w, -r3.w, r3.w, l(1.000000)
 176:   max r3.w, r3.w, l(0.000000)
 177:   mul r3.w, r3.w, r3.w
 178:   mul r3.w, r3.w, r5.w
 179:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 180:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 181:   mul r5.w, r5.w, r5.w
 182:   mul r3.w, r3.w, r5.w
 183:   ftoi r5.w, cb1[r2.w + 1024].x
 184:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 185:   max r5.w, r5.w, cb1[r2.w + 1024].y
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: sample_c_lz r1.w, v9.xyxx, t1.xxxx, s1, v9.z
  45: add r2.w, -cb3[29].x, l(1.000000)
  46: mad r1.w, r1.w, cb3[29].x, r2.w
  47: ge r2.w, l(0.000000), v9.z
  48: ge r3.w, v9.z, l(1.000000)
  49: or r2.w, r2.w, r3.w
  50: movc r1.w, r2.w, l(1.000000), r1.w
  51: dp3 r2.w, -r2.xyzx, r1.xyzx
  52: add r2.w, r2.w, r2.w
  53: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  54: dp3_sat r2.w, r1.xyzx, r2.xyzx
  55: add r2.w, -r2.w, l(1.000000)
  56: mul r2.w, r2.w, r2.w
  57: mul r2.w, r2.w, r2.w
  58: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  59: add r3.w, r4.w, l(-1.000000)
  60: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  61: max r3.w, r3.w, l(0.000000)
  62: log r3.w, r3.w
  63: mul r3.w, r3.w, cb2[14].y
  64: exp r3.w, r3.w
  65: mul r3.w, r3.w, cb2[14].x
  66: mul r4.xyz, r4.xyzx, r3.wwww
  67: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  68: mad r2.w, r2.w, l(0.500000), l(0.040000)
  69: mul r4.xyz, r2.wwww, r4.xyzx
  70: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  71: mul r1.w, r1.w, cb2[10].z
  72: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  73: mul r1.w, r1.w, r2.w
  74: mul r5.xyz, r1.wwww, cb0[4].xyzx
  75: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  76: dp3 r0.x, r6.xyzx, r6.xyzx
  77: max r0.x, r0.x, l(0.000000)
  78: rsq r0.x, r0.x
  79: mul r6.xyz, r0.xxxx, r6.xyzx
  80: dp3_sat r0.x, r1.xyzx, r6.xyzx
  81: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  82: mul r0.x, r0.x, r0.x
  83: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  84: mul r1.w, r1.w, r1.w
  85: mul r0.x, r0.x, r0.x
  86: max r1.w, r1.w, l(0.100000)
  87: mul r0.x, r0.x, r1.w
  88: mul r0.x, r0.x, l(3.000000)
  89: div r0.x, l(0.062500), r0.x
  90: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  91: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  92: min r0.x, cb0[5].x, cb2[10].y
  93: ftoi r0.x, r0.x
  94: mov r5.xyz, r4.xyzx
  95: mov r1.w, l(0)
  96: loop 
  97:   uge r2.w, r1.w, r0.x
  98:   breakc_nz r2.w
  99:   and r2.w, r1.w, l(3)
 100:   ushr r3.w, r1.w, l(2)
 101:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 102:   ftoi r2.w, r2.w
 103:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 104:   dp3 r3.w, r6.xyzx, r6.xyzx
 105:   max r3.w, r3.w, l(0.000061)
 106:   rsq r4.w, r3.w
 107:   mul r7.xyz, r4.wwww, r6.xyzx
 108:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 109:   mul r3.w, r3.w, cb1[r2.w + 512].x
 110:   mad r3.w, -r3.w, r3.w, l(1.000000)
 111:   max r3.w, r3.w, l(0.000000)
 112:   mul r3.w, r3.w, r3.w
 113:   mul r3.w, r3.w, r5.w
 114:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 115:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 116:   mul r5.w, r5.w, r5.w
 117:   mul r3.w, r3.w, r5.w
 118:   ishl r5.w, r2.w, l(2)
 119:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 120:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 121:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 122:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 123:   div r8.xyz, r8.xyzx, r8.wwww
 124:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 125:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 126:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 127:   ge r6.w, l(0.000000), r8.z
 128:   ge r7.w, r8.z, l(1.000000)
 129:   or r6.w, r6.w, r7.w
 130:   movc r5.w, r6.w, l(1.000000), r5.w
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: sample_c_lz r2.w, v9.xyxx, t1.xxxx, s1, v9.z
  46: add r3.w, -cb3[29].x, l(1.000000)
  47: mad r2.w, r2.w, cb3[29].x, r3.w
  48: ge r3.w, l(0.000000), v9.z
  49: ge r4.x, v9.z, l(1.000000)
  50: or r3.w, r3.w, r4.x
  51: movc r2.w, r3.w, l(1.000000), r2.w
  52: dp3 r3.w, -r2.xyzx, r1.xyzx
  53: add r3.w, r3.w, r3.w
  54: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  55: dp3_sat r3.w, r1.xyzx, r2.xyzx
  56: add r3.w, -r3.w, l(1.000000)
  57: mul r3.w, r3.w, r3.w
  58: mul r3.w, r3.w, r3.w
  59: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  60: add r4.w, r4.w, l(-1.000000)
  61: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  62: max r4.w, r4.w, l(0.000000)
  63: log r4.w, r4.w
  64: mul r4.w, r4.w, cb2[14].y
  65: exp r4.w, r4.w
  66: mul r4.w, r4.w, cb2[14].x
  67: mul r4.xyz, r4.xyzx, r4.wwww
  68: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  69: mad r3.w, r3.w, l(0.500000), l(0.040000)
  70: mul r4.xyz, r3.wwww, r4.xyzx
  71: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  72: mul r1.w, r1.w, r2.w
  73: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  74: mul r1.w, r1.w, r2.w
  75: mul r5.xyz, r1.wwww, cb0[4].xyzx
  76: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  77: dp3 r0.x, r6.xyzx, r6.xyzx
  78: max r0.x, r0.x, l(0.000000)
  79: rsq r0.x, r0.x
  80: mul r6.xyz, r0.xxxx, r6.xyzx
  81: dp3_sat r0.x, r1.xyzx, r6.xyzx
  82: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  83: mul r0.x, r0.x, r0.x
  84: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  85: mul r1.w, r1.w, r1.w
  86: mul r0.x, r0.x, r0.x
  87: max r1.w, r1.w, l(0.100000)
  88: mul r0.x, r0.x, r1.w
  89: mul r0.x, r0.x, l(3.000000)
  90: div r0.x, l(0.062500), r0.x
  91: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  92: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  93: min r0.x, cb0[5].x, cb2[10].y
  94: ftoi r0.x, r0.x
  95: mov r5.xyz, r4.xyzx
  96: mov r1.w, l(0)
  97: loop 
  98:   uge r2.w, r1.w, r0.x
  99:   breakc_nz r2.w
 100:   and r2.w, r1.w, l(3)
 101:   ushr r3.w, r1.w, l(2)
 102:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 103:   ftoi r2.w, r2.w
 104:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 105:   dp3 r3.w, r6.xyzx, r6.xyzx
 106:   max r3.w, r3.w, l(0.000061)
 107:   rsq r4.w, r3.w
 108:   mul r7.xyz, r4.wwww, r6.xyzx
 109:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 110:   mul r3.w, r3.w, cb1[r2.w + 512].x
 111:   mad r3.w, -r3.w, r3.w, l(1.000000)
 112:   max r3.w, r3.w, l(0.000000)
 113:   mul r3.w, r3.w, r3.w
 114:   mul r3.w, r3.w, r5.w
 115:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 116:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 117:   mul r5.w, r5.w, r5.w
 118:   mul r3.w, r3.w, r5.w
 119:   ishl r5.w, r2.w, l(2)
 120:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 121:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 122:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 123:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 124:   div r8.xyz, r8.xyzx, r8.wwww
 125:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 126:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 127:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 128:   ge r6.w, l(0.000000), r8.z
 129:   ge r7.w, r8.z, l(1.000000)
 130:   or r6.w, r6.w, r7.w
 131:   movc r5.w, r6.w, l(1.000000), r5.w
 132:   ftoi r6.w, cb1[r2.w + 1024].x
 133:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 134:   max r6.w, r6.w, cb1[r2.w + 1024].y
 135:   mul r3.w, r3.w, r6.w
 136:   mul r3.w, r5.w, r3.w
 137:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 138:   mul r3.w, r3.w, r5.w
 139:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 140:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 141:   dp3 r2.w, r6.xyzx, r6.xyzx
 142:   max r2.w, r2.w, l(0.000000)
 143:   rsq r2.w, r2.w
 144:   mul r6.xyz, r2.wwww, r6.xyzx
 145:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 146:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 147:   mul r2.w, r2.w, r2.w
 148:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 149:   mul r3.w, r3.w, r3.w
 150:   mul r2.w, r2.w, r2.w
 151:   max r3.w, r3.w, l(0.100000)
 152:   mul r2.w, r2.w, r3.w
 153:   mul r2.w, r2.w, l(3.000000)
 154:   div r2.w, l(0.062500), r2.w
 155:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 156:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 157:   iadd r1.w, r1.w, l(1)
 158: endloop 
 159: add o0.xyz, r0.yzwy, r5.xyzx
 160: mov o0.w, l(0.300000)
 161: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 228 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  45: round_ni r4.xy, r4.xyxx
  46: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  47: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  48: mul r6.xyzw, r5.xxzz, r5.xxzz
  49: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  50: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  51: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  52: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  54: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  56: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  57: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  58: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  59: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  63: mov r8.z, r7.x
  64: mov r8.w, r4.z
  65: mov r6.z, r9.x
  66: mov r6.w, r5.x
  67: add r10.xyzw, r6.zwxz, r8.zwxz
  68: mov r7.z, r8.y
  69: mov r7.w, r4.w
  70: mov r9.z, r6.y
  71: mov r9.w, r5.z
  72: add r5.xyz, r7.zywz, r9.zywz
  73: div r6.xyz, r6.xzwx, r10.zwyz
  74: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  75: div r7.xyz, r9.zywz, r5.xyzx
  76: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  77: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  78: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  79: mov r6.w, r7.x
  80: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  81: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  82: mov r7.w, r6.y
  83: mov r6.yw, r7.yyyz
  84: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  85: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  86: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  87: mul r11.xyzw, r5.xxxy, r10.zwyz
  88: mul r12.xyzw, r5.yyzz, r10.xyzw
  89: mul r1.w, r5.z, r10.y
  90: sample_c_lz r2.w, r8.xyxx, t1.xxxx, s1, v9.z
  91: sample_c_lz r3.w, r8.zwzz, t1.xxxx, s1, v9.z
  92: mul r3.w, r3.w, r11.y
  93: mad r2.w, r11.x, r2.w, r3.w
  94: sample_c_lz r3.w, r4.zwzz, t1.xxxx, s1, v9.z
  95: mad r2.w, r11.z, r3.w, r2.w
  96: sample_c_lz r3.w, r7.xyxx, t1.xxxx, s1, v9.z
  97: mad r2.w, r11.w, r3.w, r2.w
  98: sample_c_lz r3.w, r9.xyxx, t1.xxxx, s1, v9.z
  99: mad r2.w, r12.x, r3.w, r2.w
 100: sample_c_lz r3.w, r9.zwzz, t1.xxxx, s1, v9.z
 101: mad r2.w, r12.y, r3.w, r2.w
 102: sample_c_lz r3.w, r7.zwzz, t1.xxxx, s1, v9.z
 103: mad r2.w, r12.z, r3.w, r2.w
 104: sample_c_lz r3.w, r6.xyxx, t1.xxxx, s1, v9.z
 105: mad r2.w, r12.w, r3.w, r2.w
 106: sample_c_lz r3.w, r6.zwzz, t1.xxxx, s1, v9.z
 107: mad r1.w, r1.w, r3.w, r2.w
 108: add r2.w, -cb3[29].x, l(1.000000)
 109: mad r1.w, r1.w, cb3[29].x, r2.w
 110: ge r2.w, l(0.000000), v9.z
 111: ge r3.w, v9.z, l(1.000000)
 112: or r2.w, r2.w, r3.w
 113: movc r1.w, r2.w, l(1.000000), r1.w
 114: dp3 r2.w, -r2.xyzx, r1.xyzx
 115: add r2.w, r2.w, r2.w
 116: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 117: dp3_sat r2.w, r1.xyzx, r2.xyzx
 118: add r2.w, -r2.w, l(1.000000)
 119: mul r2.w, r2.w, r2.w
 120: mul r2.w, r2.w, r2.w
 121: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 122: add r3.w, r4.w, l(-1.000000)
 123: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 124: max r3.w, r3.w, l(0.000000)
 125: log r3.w, r3.w
 126: mul r3.w, r3.w, cb2[14].y
 127: exp r3.w, r3.w
 128: mul r3.w, r3.w, cb2[14].x
 129: mul r4.xyz, r4.xyzx, r3.wwww
 130: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 131: mad r2.w, r2.w, l(0.500000), l(0.040000)
 132: mul r4.xyz, r2.wwww, r4.xyzx
 133: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 134: mul r1.w, r1.w, cb2[10].z
 135: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 136: mul r1.w, r1.w, r2.w
 137: mul r5.xyz, r1.wwww, cb0[4].xyzx
 138: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 139: dp3 r0.x, r6.xyzx, r6.xyzx
 140: max r0.x, r0.x, l(0.000000)
 141: rsq r0.x, r0.x
 142: mul r6.xyz, r0.xxxx, r6.xyzx
 143: dp3_sat r0.x, r1.xyzx, r6.xyzx
 144: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 145: mul r0.x, r0.x, r0.x
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r1.w, r1.w, r1.w
 148: mul r0.x, r0.x, r0.x
 149: max r1.w, r1.w, l(0.100000)
 150: mul r0.x, r0.x, r1.w
 151: mul r0.x, r0.x, l(3.000000)
 152: div r0.x, l(0.062500), r0.x
 153: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 154: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 155: min r0.x, cb0[5].x, cb2[10].y
 156: ftoi r0.x, r0.x
 157: mov r5.xyz, r4.xyzx
 158: mov r1.w, l(0)
 159: loop 
 160:   uge r2.w, r1.w, r0.x
 161:   breakc_nz r2.w
 162:   and r2.w, r1.w, l(3)
 163:   ushr r3.w, r1.w, l(2)
 164:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 165:   ftoi r2.w, r2.w
 166:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 167:   dp3 r3.w, r6.xyzx, r6.xyzx
 168:   max r3.w, r3.w, l(0.000061)
 169:   rsq r4.w, r3.w
 170:   mul r7.xyz, r4.wwww, r6.xyzx
 171:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 172:   mul r3.w, r3.w, cb1[r2.w + 512].x
 173:   mad r3.w, -r3.w, r3.w, l(1.000000)
 174:   max r3.w, r3.w, l(0.000000)
 175:   mul r3.w, r3.w, r3.w
 176:   mul r3.w, r3.w, r5.w
 177:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 178:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 179:   mul r5.w, r5.w, r5.w
 180:   mul r3.w, r3.w, r5.w
 181:   ishl r5.w, r2.w, l(2)
 182:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 183:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 184:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 185:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 186:   div r8.xyz, r8.xyzx, r8.wwww
 187:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 188:   round_ni r9.xy, r9.xyxx
 189:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 190:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 191:   mul r11.xyzw, r10.xxzz, r10.xxzz
 192:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 193:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 194:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 195:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 196:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 197:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 198:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 199:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 200:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 201:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 202:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 203:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 204:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 205:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 206:   mov r12.z, r11.x
 207:   mov r12.w, r8.x
 208:   mov r13.z, r14.x
 209:   mov r13.w, r9.z
 210:   add r10.xyzw, r12.zwxz, r13.zwxz
 211:   mov r11.z, r12.y
 212:   mov r11.w, r8.y
 213:   mov r14.z, r13.y
 214:   mov r14.w, r9.w
 215:   add r8.xyw, r11.zyzw, r14.zyzw
 216:   div r11.xyz, r13.xzwx, r10.zwyz
 217:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 218:   div r12.xyz, r14.zywz, r8.xywx
 219:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 220:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 221:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 222:   mov r11.w, r12.x
 223:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 224:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 225:   mov r12.w, r11.y
 226:   mov r11.yw, r12.yyyz
 227:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 228:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 229:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 230:   mul r15.xyzw, r8.xxxy, r10.zwyz
 231:   mul r16.xyzw, r8.yyww, r10.xyzw
 232:   mul r5.w, r8.w, r10.y
 233:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 234:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 235:   mul r7.w, r7.w, r15.y
 236:   mad r6.w, r15.x, r6.w, r7.w
 237:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 238:   mad r6.w, r15.z, r7.w, r6.w
 239:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 240:   mad r6.w, r15.w, r7.w, r6.w
 241:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 242:   mad r6.w, r16.x, r7.w, r6.w
 243:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 244:   mad r6.w, r16.y, r7.w, r6.w
 245:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 246:   mad r6.w, r16.z, r7.w, r6.w
 247:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 248:   mad r6.w, r16.w, r7.w, r6.w
 249:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 250:   mad r5.w, r5.w, r7.w, r6.w
 251:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 252:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 253:   ge r6.w, l(0.000000), r8.z
 254:   ge r7.w, r8.z, l(1.000000)
 255:   or r6.w, r6.w, r7.w
 256:   movc r5.w, r6.w, l(1.000000), r5.w
 257:   mul r3.w, r3.w, r5.w
 258:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 259:   mul r3.w, r3.w, r5.w
 260:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 261:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 262:   dp3 r2.w, r6.xyzx, r6.xyzx
 263:   max r2.w, r2.w, l(0.000000)
 264:   rsq r2.w, r2.w
 265:   mul r6.xyz, r2.wwww, r6.xyzx
 266:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 267:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 268:   mul r2.w, r2.w, r2.w
 269:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 270:   mul r3.w, r3.w, r3.w
 271:   mul r2.w, r2.w, r2.w
 272:   max r3.w, r3.w, l(0.100000)
 273:   mul r2.w, r2.w, r3.w
 274:   mul r2.w, r2.w, l(3.000000)
 275:   div r2.w, l(0.062500), r2.w
 276:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 277:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 278:   iadd r1.w, r1.w, l(1)
 279: endloop 
 280: add o0.xyz, r0.yzwy, r5.xyzx
 281: mov o0.w, l(0.300000)
 282: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 232 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  46: round_ni r4.xy, r4.xyxx
  47: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  48: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  49: mul r6.xyzw, r5.xxzz, r5.xxzz
  50: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  51: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  52: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  53: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  55: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  57: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  58: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  59: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  64: mov r8.z, r7.x
  65: mov r8.w, r4.z
  66: mov r6.z, r9.x
  67: mov r6.w, r5.x
  68: add r10.xyzw, r6.zwxz, r8.zwxz
  69: mov r7.z, r8.y
  70: mov r7.w, r4.w
  71: mov r9.z, r6.y
  72: mov r9.w, r5.z
  73: add r5.xyz, r7.zywz, r9.zywz
  74: div r6.xyz, r6.xzwx, r10.zwyz
  75: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  76: div r7.xyz, r9.zywz, r5.xyzx
  77: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  78: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  79: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  80: mov r6.w, r7.x
  81: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  82: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  83: mov r7.w, r6.y
  84: mov r6.yw, r7.yyyz
  85: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  86: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  87: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  88: mul r11.xyzw, r5.xxxy, r10.zwyz
  89: mul r12.xyzw, r5.yyzz, r10.xyzw
  90: mul r2.w, r5.z, r10.y
  91: sample_c_lz r3.w, r8.xyxx, t1.xxxx, s1, v9.z
  92: sample_c_lz r4.x, r8.zwzz, t1.xxxx, s1, v9.z
  93: mul r4.x, r4.x, r11.y
  94: mad r3.w, r11.x, r3.w, r4.x
  95: sample_c_lz r4.x, r4.zwzz, t1.xxxx, s1, v9.z
  96: mad r3.w, r11.z, r4.x, r3.w
  97: sample_c_lz r4.x, r7.xyxx, t1.xxxx, s1, v9.z
  98: mad r3.w, r11.w, r4.x, r3.w
  99: sample_c_lz r4.x, r9.xyxx, t1.xxxx, s1, v9.z
 100: mad r3.w, r12.x, r4.x, r3.w
 101: sample_c_lz r4.x, r9.zwzz, t1.xxxx, s1, v9.z
 102: mad r3.w, r12.y, r4.x, r3.w
 103: sample_c_lz r4.x, r7.zwzz, t1.xxxx, s1, v9.z
 104: mad r3.w, r12.z, r4.x, r3.w
 105: sample_c_lz r4.x, r6.xyxx, t1.xxxx, s1, v9.z
 106: mad r3.w, r12.w, r4.x, r3.w
 107: sample_c_lz r4.x, r6.zwzz, t1.xxxx, s1, v9.z
 108: mad r2.w, r2.w, r4.x, r3.w
 109: add r3.w, -cb3[29].x, l(1.000000)
 110: mad r2.w, r2.w, cb3[29].x, r3.w
 111: ge r3.w, l(0.000000), v9.z
 112: ge r4.x, v9.z, l(1.000000)
 113: or r3.w, r3.w, r4.x
 114: movc r2.w, r3.w, l(1.000000), r2.w
 115: dp3 r3.w, -r2.xyzx, r1.xyzx
 116: add r3.w, r3.w, r3.w
 117: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 118: dp3_sat r3.w, r1.xyzx, r2.xyzx
 119: add r3.w, -r3.w, l(1.000000)
 120: mul r3.w, r3.w, r3.w
 121: mul r3.w, r3.w, r3.w
 122: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 123: add r4.w, r4.w, l(-1.000000)
 124: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 125: max r4.w, r4.w, l(0.000000)
 126: log r4.w, r4.w
 127: mul r4.w, r4.w, cb2[14].y
 128: exp r4.w, r4.w
 129: mul r4.w, r4.w, cb2[14].x
 130: mul r4.xyz, r4.xyzx, r4.wwww
 131: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 132: mad r3.w, r3.w, l(0.500000), l(0.040000)
 133: mul r4.xyz, r3.wwww, r4.xyzx
 134: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 135: mul r1.w, r1.w, r2.w
 136: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 137: mul r1.w, r1.w, r2.w
 138: mul r5.xyz, r1.wwww, cb0[4].xyzx
 139: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 140: dp3 r0.x, r6.xyzx, r6.xyzx
 141: max r0.x, r0.x, l(0.000000)
 142: rsq r0.x, r0.x
 143: mul r6.xyz, r0.xxxx, r6.xyzx
 144: dp3_sat r0.x, r1.xyzx, r6.xyzx
 145: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 146: mul r0.x, r0.x, r0.x
 147: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 148: mul r1.w, r1.w, r1.w
 149: mul r0.x, r0.x, r0.x
 150: max r1.w, r1.w, l(0.100000)
 151: mul r0.x, r0.x, r1.w
 152: mul r0.x, r0.x, l(3.000000)
 153: div r0.x, l(0.062500), r0.x
 154: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 155: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 156: min r0.x, cb0[5].x, cb2[10].y
 157: ftoi r0.x, r0.x
 158: mov r5.xyz, r4.xyzx
 159: mov r1.w, l(0)
 160: loop 
 161:   uge r2.w, r1.w, r0.x
 162:   breakc_nz r2.w
 163:   and r2.w, r1.w, l(3)
 164:   ushr r3.w, r1.w, l(2)
 165:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 166:   ftoi r2.w, r2.w
 167:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 168:   dp3 r3.w, r6.xyzx, r6.xyzx
 169:   max r3.w, r3.w, l(0.000061)
 170:   rsq r4.w, r3.w
 171:   mul r7.xyz, r4.wwww, r6.xyzx
 172:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 173:   mul r3.w, r3.w, cb1[r2.w + 512].x
 174:   mad r3.w, -r3.w, r3.w, l(1.000000)
 175:   max r3.w, r3.w, l(0.000000)
 176:   mul r3.w, r3.w, r3.w
 177:   mul r3.w, r3.w, r5.w
 178:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 179:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 180:   mul r5.w, r5.w, r5.w
 181:   mul r3.w, r3.w, r5.w
 182:   ishl r5.w, r2.w, l(2)
 183:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 184:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 185:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 186:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 187:   div r8.xyz, r8.xyzx, r8.wwww
 188:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 189:   round_ni r9.xy, r9.xyxx
 190:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 191:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 192:   mul r11.xyzw, r10.xxzz, r10.xxzz
 193:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 194:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 195:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 196:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 197:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 198:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 199:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 200:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 201:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 202:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 203:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 204:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 205:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 206:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 207:   mov r12.z, r11.x
 208:   mov r12.w, r8.x
 209:   mov r13.z, r14.x
 210:   mov r13.w, r9.z
 211:   add r10.xyzw, r12.zwxz, r13.zwxz
 212:   mov r11.z, r12.y
 213:   mov r11.w, r8.y
 214:   mov r14.z, r13.y
 215:   mov r14.w, r9.w
 216:   add r8.xyw, r11.zyzw, r14.zyzw
 217:   div r11.xyz, r13.xzwx, r10.zwyz
 218:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 219:   div r12.xyz, r14.zywz, r8.xywx
 220:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 221:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 222:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 223:   mov r11.w, r12.x
 224:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 225:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 226:   mov r12.w, r11.y
 227:   mov r11.yw, r12.yyyz
 228:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 229:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 230:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 231:   mul r15.xyzw, r8.xxxy, r10.zwyz
 232:   mul r16.xyzw, r8.yyww, r10.xyzw
 233:   mul r5.w, r8.w, r10.y
 234:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 235:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 236:   mul r7.w, r7.w, r15.y
 237:   mad r6.w, r15.x, r6.w, r7.w
 238:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 239:   mad r6.w, r15.z, r7.w, r6.w
 240:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 241:   mad r6.w, r15.w, r7.w, r6.w
 242:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 243:   mad r6.w, r16.x, r7.w, r6.w
 244:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 245:   mad r6.w, r16.y, r7.w, r6.w
 246:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 247:   mad r6.w, r16.z, r7.w, r6.w
 248:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 249:   mad r6.w, r16.w, r7.w, r6.w
 250:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 251:   mad r5.w, r5.w, r7.w, r6.w
 252:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 253:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 254:   ge r6.w, l(0.000000), r8.z
 255:   ge r7.w, r8.z, l(1.000000)
 256:   or r6.w, r6.w, r7.w
 257:   movc r5.w, r6.w, l(1.000000), r5.w
 258:   ftoi r6.w, cb1[r2.w + 1024].x
 259:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 260:   max r6.w, r6.w, cb1[r2.w + 1024].y
 261:   mul r3.w, r3.w, r6.w
 262:   mul r3.w, r5.w, r3.w
 263:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 264:   mul r3.w, r3.w, r5.w
 265:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 266:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 267:   dp3 r2.w, r6.xyzx, r6.xyzx
 268:   max r2.w, r2.w, l(0.000000)
 269:   rsq r2.w, r2.w
 270:   mul r6.xyz, r2.wwww, r6.xyzx
 271:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 272:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 273:   mul r2.w, r2.w, r2.w
 274:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 275:   mul r3.w, r3.w, r3.w
 276:   mul r2.w, r2.w, r2.w
 277:   max r3.w, r3.w, l(0.100000)
 278:   mul r2.w, r2.w, r3.w
 279:   mul r2.w, r2.w, l(3.000000)
 280:   div r2.w, l(0.062500), r2.w
 281:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 282:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 283:   iadd r1.w, r1.w, l(1)
 284: endloop 
 285: add o0.xyz, r0.yzwy, r5.xyzx
 286: mov o0.w, l(0.300000)
 287: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r2.xyz, r0.wwww, cb0[4].xyzx
  91: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  92: add o0.xyz, r0.xyzx, r1.xyzx
  93: mov o0.w, l(0.300000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r2.xyz, r0.wwww, cb0[4].xyzx
  92: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 130 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: add o0.xyz, r1.xyzx, r0.xyzx
 153: mov o0.w, l(0.300000)
 154: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r2.xyz, r0.wwww, cb0[4].xyzx
  91: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  92: add o0.xyz, r0.xyzx, r1.xyzx
  93: mov o0.w, l(0.300000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r2.xyz, r0.wwww, cb0[4].xyzx
  92: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 130 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: add o0.xyz, r1.xyzx, r0.xyzx
 153: mov o0.w, l(0.300000)
 154: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r4.xyz, r0.wwww, cb0[4].xyzx
 113: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 114: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 115: add o0.xyz, r0.xyzx, r1.xyzx
 116: mov o0.w, l(0.300000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r1.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r4.xyz, r0.wwww, cb0[4].xyzx
 113: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 114: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 115: add o0.xyz, r0.xyzx, r1.xyzx
 116: mov o0.w, l(0.300000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r1.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 147 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: sample_c_lz r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  66: add r2.w, -cb3[29].x, l(1.000000)
  67: mad r1.w, r1.w, cb3[29].x, r2.w
  68: ge r2.w, l(0.000000), r3.z
  69: ge r3.x, r3.z, l(1.000000)
  70: or r2.w, r2.w, r3.x
  71: movc r1.w, r2.w, l(1.000000), r1.w
  72: dp3 r2.w, -r2.xyzx, r1.xyzx
  73: add r2.w, r2.w, r2.w
  74: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  75: dp3_sat r2.w, r1.xyzx, r2.xyzx
  76: add r2.w, -r2.w, l(1.000000)
  77: mul r2.w, r2.w, r2.w
  78: mul r2.w, r2.w, r2.w
  79: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  80: add r3.w, r3.w, l(-1.000000)
  81: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  82: max r3.w, r3.w, l(0.000000)
  83: log r3.w, r3.w
  84: mul r3.w, r3.w, cb2[14].y
  85: exp r3.w, r3.w
  86: mul r3.w, r3.w, cb2[14].x
  87: mul r3.xyz, r3.xyzx, r3.wwww
  88: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  89: mad r2.w, r2.w, l(0.500000), l(0.040000)
  90: mul r3.xyz, r2.wwww, r3.xyzx
  91: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  92: mul r1.w, r1.w, cb2[10].z
  93: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  94: mul r1.w, r1.w, r2.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 140:   mul r3.w, r3.w, r5.w
 141:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 142:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 143:   dp3 r2.w, r6.xyzx, r6.xyzx
 144:   max r2.w, r2.w, l(0.000000)
 145:   rsq r2.w, r2.w
 146:   mul r6.xyz, r2.wwww, r6.xyzx
 147:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 148:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 149:   mul r2.w, r2.w, r2.w
 150:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 151:   mul r3.w, r3.w, r3.w
 152:   mul r2.w, r2.w, r2.w
 153:   max r3.w, r3.w, l(0.100000)
 154:   mul r2.w, r2.w, r3.w
 155:   mul r2.w, r2.w, l(3.000000)
 156:   div r2.w, l(0.062500), r2.w
 157:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 158:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 159:   iadd r1.w, r1.w, l(1)
 160: endloop 
 161: add o0.xyz, r0.yzwy, r5.xyzx
 162: mov o0.w, l(0.300000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: sample_c_lz r2.w, r3.xyxx, t1.xxxx, s1, r3.z
  67: add r3.x, -cb3[29].x, l(1.000000)
  68: mad r2.w, r2.w, cb3[29].x, r3.x
  69: ge r3.x, l(0.000000), r3.z
  70: ge r3.y, r3.z, l(1.000000)
  71: or r3.x, r3.y, r3.x
  72: movc r2.w, r3.x, l(1.000000), r2.w
  73: dp3 r3.x, -r2.xyzx, r1.xyzx
  74: add r3.x, r3.x, r3.x
  75: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  76: dp3_sat r3.w, r1.xyzx, r2.xyzx
  77: add r3.w, -r3.w, l(1.000000)
  78: mul r3.w, r3.w, r3.w
  79: mul r3.w, r3.w, r3.w
  80: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r3.x, r5.w, l(-1.000000)
  82: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  83: max r3.x, r3.x, l(0.000000)
  84: log r3.x, r3.x
  85: mul r3.x, r3.x, cb2[14].y
  86: exp r3.x, r3.x
  87: mul r3.x, r3.x, cb2[14].x
  88: mul r3.xyz, r5.xyzx, r3.xxxx
  89: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r3.w, r3.w, l(0.500000), l(0.040000)
  91: mul r3.xyz, r3.wwww, r3.xyzx
  92: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  93: mul r1.w, r1.w, r2.w
  94: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  95: mul r1.w, r1.w, r2.w
  96: mul r5.xyz, r1.wwww, cb0[4].xyzx
  97: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  98: dp3 r0.x, r6.xyzx, r6.xyzx
  99: max r0.x, r0.x, l(0.000000)
 100: rsq r0.x, r0.x
 101: mul r6.xyz, r0.xxxx, r6.xyzx
 102: dp3_sat r0.x, r1.xyzx, r6.xyzx
 103: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 104: mul r0.x, r0.x, r0.x
 105: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 106: mul r1.w, r1.w, r1.w
 107: mul r0.x, r0.x, r0.x
 108: max r1.w, r1.w, l(0.100000)
 109: mul r0.x, r0.x, r1.w
 110: mul r0.x, r0.x, l(3.000000)
 111: div r0.x, l(0.062500), r0.x
 112: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 113: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 114: min r0.x, cb0[5].x, cb2[10].y
 115: ftoi r0.x, r0.x
 116: mov r5.xyz, r3.xyzx
 117: mov r1.w, l(0)
 118: loop 
 119:   uge r2.w, r1.w, r0.x
 120:   breakc_nz r2.w
 121:   and r2.w, r1.w, l(3)
 122:   ushr r3.w, r1.w, l(2)
 123:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 124:   ftoi r2.w, r2.w
 125:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 126:   dp3 r3.w, r6.xyzx, r6.xyzx
 127:   max r3.w, r3.w, l(0.000061)
 128:   rsq r4.w, r3.w
 129:   mul r7.xyz, r4.wwww, r6.xyzx
 130:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 131:   mul r3.w, r3.w, cb1[r2.w + 512].x
 132:   mad r3.w, -r3.w, r3.w, l(1.000000)
 133:   max r3.w, r3.w, l(0.000000)
 134:   mul r3.w, r3.w, r3.w
 135:   mul r3.w, r3.w, r5.w
 136:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 137:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 138:   mul r5.w, r5.w, r5.w
 139:   mul r3.w, r3.w, r5.w
 140:   ftoi r5.w, cb1[r2.w + 1024].x
 141:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 142:   max r5.w, r5.w, cb1[r2.w + 1024].y
 143:   mul r3.w, r3.w, r5.w
 144:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 145:   mul r3.w, r3.w, r5.w
 146:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 147:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 148:   dp3 r2.w, r6.xyzx, r6.xyzx
 149:   max r2.w, r2.w, l(0.000000)
 150:   rsq r2.w, r2.w
 151:   mul r6.xyz, r2.wwww, r6.xyzx
 152:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 153:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 154:   mul r2.w, r2.w, r2.w
 155:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 156:   mul r3.w, r3.w, r3.w
 157:   mul r2.w, r2.w, r2.w
 158:   max r3.w, r3.w, l(0.100000)
 159:   mul r2.w, r2.w, r3.w
 160:   mul r2.w, r2.w, l(3.000000)
 161:   div r2.w, l(0.062500), r2.w
 162:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 163:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 164:   iadd r1.w, r1.w, l(1)
 165: endloop 
 166: add o0.xyz, r0.yzwy, r5.xyzx
 167: mov o0.w, l(0.300000)
 168: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 191 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  66: round_ni r5.xy, r5.xyxx
  67: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  68: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  69: mul r7.xyzw, r6.xxzz, r6.xxzz
  70: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  71: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  72: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  73: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  74: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  75: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  77: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  78: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  79: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  80: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mov r8.z, r7.x
  85: mov r8.w, r3.x
  86: mov r9.z, r10.x
  87: mov r9.w, r5.z
  88: add r6.xyzw, r8.zwxz, r9.zwxz
  89: mov r7.z, r8.y
  90: mov r7.w, r3.y
  91: mov r10.z, r9.y
  92: mov r10.w, r5.w
  93: add r3.xyw, r7.zyzw, r10.zyzw
  94: div r7.xyz, r9.xzwx, r6.zwyz
  95: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  96: div r8.xyz, r10.zywz, r3.xywx
  97: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  98: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  99: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 100: mov r7.w, r8.x
 101: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 102: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 103: mov r8.w, r7.y
 104: mov r7.yw, r8.yyyz
 105: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 106: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 107: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 108: mul r11.xyzw, r3.xxxy, r6.zwyz
 109: mul r12.xyzw, r3.yyww, r6.xyzw
 110: mul r1.w, r3.w, r6.y
 111: sample_c_lz r2.w, r9.xyxx, t1.xxxx, s1, r3.z
 112: sample_c_lz r3.x, r9.zwzz, t1.xxxx, s1, r3.z
 113: mul r3.x, r3.x, r11.y
 114: mad r2.w, r11.x, r2.w, r3.x
 115: sample_c_lz r3.x, r5.zwzz, t1.xxxx, s1, r3.z
 116: mad r2.w, r11.z, r3.x, r2.w
 117: sample_c_lz r3.x, r8.xyxx, t1.xxxx, s1, r3.z
 118: mad r2.w, r11.w, r3.x, r2.w
 119: sample_c_lz r3.x, r10.xyxx, t1.xxxx, s1, r3.z
 120: mad r2.w, r12.x, r3.x, r2.w
 121: sample_c_lz r3.x, r10.zwzz, t1.xxxx, s1, r3.z
 122: mad r2.w, r12.y, r3.x, r2.w
 123: sample_c_lz r3.x, r8.zwzz, t1.xxxx, s1, r3.z
 124: mad r2.w, r12.z, r3.x, r2.w
 125: sample_c_lz r3.x, r7.xyxx, t1.xxxx, s1, r3.z
 126: mad r2.w, r12.w, r3.x, r2.w
 127: sample_c_lz r3.x, r7.zwzz, t1.xxxx, s1, r3.z
 128: mad r1.w, r1.w, r3.x, r2.w
 129: add r2.w, -cb3[29].x, l(1.000000)
 130: mad r1.w, r1.w, cb3[29].x, r2.w
 131: ge r2.w, l(0.000000), r3.z
 132: ge r3.x, r3.z, l(1.000000)
 133: or r2.w, r2.w, r3.x
 134: movc r1.w, r2.w, l(1.000000), r1.w
 135: dp3 r2.w, -r2.xyzx, r1.xyzx
 136: add r2.w, r2.w, r2.w
 137: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 138: dp3_sat r2.w, r1.xyzx, r2.xyzx
 139: add r2.w, -r2.w, l(1.000000)
 140: mul r2.w, r2.w, r2.w
 141: mul r2.w, r2.w, r2.w
 142: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r3.w, r3.w, l(-1.000000)
 144: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 145: max r3.w, r3.w, l(0.000000)
 146: log r3.w, r3.w
 147: mul r3.w, r3.w, cb2[14].y
 148: exp r3.w, r3.w
 149: mul r3.w, r3.w, cb2[14].x
 150: mul r3.xyz, r3.xyzx, r3.wwww
 151: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mad r2.w, r2.w, l(0.500000), l(0.040000)
 153: mul r3.xyz, r2.wwww, r3.xyzx
 154: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 155: mul r1.w, r1.w, cb2[10].z
 156: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 157: mul r1.w, r1.w, r2.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 203:   mul r3.w, r3.w, r5.w
 204:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 205:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 206:   dp3 r2.w, r6.xyzx, r6.xyzx
 207:   max r2.w, r2.w, l(0.000000)
 208:   rsq r2.w, r2.w
 209:   mul r6.xyz, r2.wwww, r6.xyzx
 210:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 211:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 212:   mul r2.w, r2.w, r2.w
 213:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 214:   mul r3.w, r3.w, r3.w
 215:   mul r2.w, r2.w, r2.w
 216:   max r3.w, r3.w, l(0.100000)
 217:   mul r2.w, r2.w, r3.w
 218:   mul r2.w, r2.w, l(3.000000)
 219:   div r2.w, l(0.062500), r2.w
 220:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 221:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 222:   iadd r1.w, r1.w, l(1)
 223: endloop 
 224: add o0.xyz, r0.yzwy, r5.xyzx
 225: mov o0.w, l(0.300000)
 226: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 195 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  67: round_ni r5.xy, r5.xyxx
  68: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  69: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  70: mul r7.xyzw, r6.xxzz, r6.xxzz
  71: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  72: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  73: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  74: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  76: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  78: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  79: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: mov r8.z, r7.x
  86: mov r8.w, r3.x
  87: mov r9.z, r10.x
  88: mov r9.w, r5.z
  89: add r6.xyzw, r8.zwxz, r9.zwxz
  90: mov r7.z, r8.y
  91: mov r7.w, r3.y
  92: mov r10.z, r9.y
  93: mov r10.w, r5.w
  94: add r3.xyw, r7.zyzw, r10.zyzw
  95: div r7.xyz, r9.xzwx, r6.zwyz
  96: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  97: div r8.xyz, r10.zywz, r3.xywx
  98: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  99: mul r7.xyz, r7.yxzy, cb3[30].xxxx
 100: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 101: mov r7.w, r8.x
 102: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 103: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 104: mov r8.w, r7.y
 105: mov r7.yw, r8.yyyz
 106: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 107: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 108: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 109: mul r11.xyzw, r3.xxxy, r6.zwyz
 110: mul r12.xyzw, r3.yyww, r6.xyzw
 111: mul r2.w, r3.w, r6.y
 112: sample_c_lz r3.x, r9.xyxx, t1.xxxx, s1, r3.z
 113: sample_c_lz r3.y, r9.zwzz, t1.xxxx, s1, r3.z
 114: mul r3.y, r3.y, r11.y
 115: mad r3.x, r11.x, r3.x, r3.y
 116: sample_c_lz r3.y, r5.zwzz, t1.xxxx, s1, r3.z
 117: mad r3.x, r11.z, r3.y, r3.x
 118: sample_c_lz r3.y, r8.xyxx, t1.xxxx, s1, r3.z
 119: mad r3.x, r11.w, r3.y, r3.x
 120: sample_c_lz r3.y, r10.xyxx, t1.xxxx, s1, r3.z
 121: mad r3.x, r12.x, r3.y, r3.x
 122: sample_c_lz r3.y, r10.zwzz, t1.xxxx, s1, r3.z
 123: mad r3.x, r12.y, r3.y, r3.x
 124: sample_c_lz r3.y, r8.zwzz, t1.xxxx, s1, r3.z
 125: mad r3.x, r12.z, r3.y, r3.x
 126: sample_c_lz r3.y, r7.xyxx, t1.xxxx, s1, r3.z
 127: mad r3.x, r12.w, r3.y, r3.x
 128: sample_c_lz r3.y, r7.zwzz, t1.xxxx, s1, r3.z
 129: mad r2.w, r2.w, r3.y, r3.x
 130: add r3.x, -cb3[29].x, l(1.000000)
 131: mad r2.w, r2.w, cb3[29].x, r3.x
 132: ge r3.x, l(0.000000), r3.z
 133: ge r3.y, r3.z, l(1.000000)
 134: or r3.x, r3.y, r3.x
 135: movc r2.w, r3.x, l(1.000000), r2.w
 136: dp3 r3.x, -r2.xyzx, r1.xyzx
 137: add r3.x, r3.x, r3.x
 138: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 139: dp3_sat r3.w, r1.xyzx, r2.xyzx
 140: add r3.w, -r3.w, l(1.000000)
 141: mul r3.w, r3.w, r3.w
 142: mul r3.w, r3.w, r3.w
 143: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r3.x, r5.w, l(-1.000000)
 145: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 146: max r3.x, r3.x, l(0.000000)
 147: log r3.x, r3.x
 148: mul r3.x, r3.x, cb2[14].y
 149: exp r3.x, r3.x
 150: mul r3.x, r3.x, cb2[14].x
 151: mul r3.xyz, r5.xyzx, r3.xxxx
 152: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r3.w, r3.w, l(0.500000), l(0.040000)
 154: mul r3.xyz, r3.wwww, r3.xyzx
 155: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 156: mul r1.w, r1.w, r2.w
 157: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 158: mul r1.w, r1.w, r2.w
 159: mul r5.xyz, r1.wwww, cb0[4].xyzx
 160: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 161: dp3 r0.x, r6.xyzx, r6.xyzx
 162: max r0.x, r0.x, l(0.000000)
 163: rsq r0.x, r0.x
 164: mul r6.xyz, r0.xxxx, r6.xyzx
 165: dp3_sat r0.x, r1.xyzx, r6.xyzx
 166: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 167: mul r0.x, r0.x, r0.x
 168: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 169: mul r1.w, r1.w, r1.w
 170: mul r0.x, r0.x, r0.x
 171: max r1.w, r1.w, l(0.100000)
 172: mul r0.x, r0.x, r1.w
 173: mul r0.x, r0.x, l(3.000000)
 174: div r0.x, l(0.062500), r0.x
 175: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 176: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 177: min r0.x, cb0[5].x, cb2[10].y
 178: ftoi r0.x, r0.x
 179: mov r5.xyz, r3.xyzx
 180: mov r1.w, l(0)
 181: loop 
 182:   uge r2.w, r1.w, r0.x
 183:   breakc_nz r2.w
 184:   and r2.w, r1.w, l(3)
 185:   ushr r3.w, r1.w, l(2)
 186:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 187:   ftoi r2.w, r2.w
 188:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 189:   dp3 r3.w, r6.xyzx, r6.xyzx
 190:   max r3.w, r3.w, l(0.000061)
 191:   rsq r4.w, r3.w
 192:   mul r7.xyz, r4.wwww, r6.xyzx
 193:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 194:   mul r3.w, r3.w, cb1[r2.w + 512].x
 195:   mad r3.w, -r3.w, r3.w, l(1.000000)
 196:   max r3.w, r3.w, l(0.000000)
 197:   mul r3.w, r3.w, r3.w
 198:   mul r3.w, r3.w, r5.w
 199:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 200:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 201:   mul r5.w, r5.w, r5.w
 202:   mul r3.w, r3.w, r5.w
 203:   ftoi r5.w, cb1[r2.w + 1024].x
 204:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 205:   max r5.w, r5.w, cb1[r2.w + 1024].y
 206:   mul r3.w, r3.w, r5.w
 207:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 208:   mul r3.w, r3.w, r5.w
 209:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 210:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 211:   dp3 r2.w, r6.xyzx, r6.xyzx
 212:   max r2.w, r2.w, l(0.000000)
 213:   rsq r2.w, r2.w
 214:   mul r6.xyz, r2.wwww, r6.xyzx
 215:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 216:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 217:   mul r2.w, r2.w, r2.w
 218:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 219:   mul r3.w, r3.w, r3.w
 220:   mul r2.w, r2.w, r2.w
 221:   max r3.w, r3.w, l(0.100000)
 222:   mul r2.w, r2.w, r3.w
 223:   mul r2.w, r2.w, l(3.000000)
 224:   div r2.w, l(0.062500), r2.w
 225:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 226:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 227:   iadd r1.w, r1.w, l(1)
 228: endloop 
 229: add o0.xyz, r0.yzwy, r5.xyzx
 230: mov o0.w, l(0.300000)
 231: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 159 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: sample_c_lz r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  66: add r2.w, -cb3[29].x, l(1.000000)
  67: mad r1.w, r1.w, cb3[29].x, r2.w
  68: ge r2.w, l(0.000000), r3.z
  69: ge r3.x, r3.z, l(1.000000)
  70: or r2.w, r2.w, r3.x
  71: movc r1.w, r2.w, l(1.000000), r1.w
  72: dp3 r2.w, -r2.xyzx, r1.xyzx
  73: add r2.w, r2.w, r2.w
  74: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  75: dp3_sat r2.w, r1.xyzx, r2.xyzx
  76: add r2.w, -r2.w, l(1.000000)
  77: mul r2.w, r2.w, r2.w
  78: mul r2.w, r2.w, r2.w
  79: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  80: add r3.w, r3.w, l(-1.000000)
  81: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  82: max r3.w, r3.w, l(0.000000)
  83: log r3.w, r3.w
  84: mul r3.w, r3.w, cb2[14].y
  85: exp r3.w, r3.w
  86: mul r3.w, r3.w, cb2[14].x
  87: mul r3.xyz, r3.xyzx, r3.wwww
  88: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  89: mad r2.w, r2.w, l(0.500000), l(0.040000)
  90: mul r3.xyz, r2.wwww, r3.xyzx
  91: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  92: mul r1.w, r1.w, cb2[10].z
  93: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  94: mul r1.w, r1.w, r2.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   ishl r5.w, r2.w, l(2)
 140:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 141:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 142:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 143:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 144:   div r8.xyz, r8.xyzx, r8.wwww
 145:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 146:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 147:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 148:   ge r6.w, l(0.000000), r8.z
 149:   ge r7.w, r8.z, l(1.000000)
 150:   or r6.w, r6.w, r7.w
 151:   movc r5.w, r6.w, l(1.000000), r5.w
 152:   mul r3.w, r3.w, r5.w
 153:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 154:   mul r3.w, r3.w, r5.w
 155:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 156:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 157:   dp3 r2.w, r6.xyzx, r6.xyzx
 158:   max r2.w, r2.w, l(0.000000)
 159:   rsq r2.w, r2.w
 160:   mul r6.xyz, r2.wwww, r6.xyzx
 161:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 162:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 163:   mul r2.w, r2.w, r2.w
 164:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 165:   mul r3.w, r3.w, r3.w
 166:   mul r2.w, r2.w, r2.w
 167:   max r3.w, r3.w, l(0.100000)
 168:   mul r2.w, r2.w, r3.w
 169:   mul r2.w, r2.w, l(3.000000)
 170:   div r2.w, l(0.062500), r2.w
 171:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 172:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 173:   iadd r1.w, r1.w, l(1)
 174: endloop 
 175: add o0.xyz, r0.yzwy, r5.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 163 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: sample_c_lz r2.w, r3.xyxx, t1.xxxx, s1, r3.z
  67: add r3.x, -cb3[29].x, l(1.000000)
  68: mad r2.w, r2.w, cb3[29].x, r3.x
  69: ge r3.x, l(0.000000), r3.z
  70: ge r3.y, r3.z, l(1.000000)
  71: or r3.x, r3.y, r3.x
  72: movc r2.w, r3.x, l(1.000000), r2.w
  73: dp3 r3.x, -r2.xyzx, r1.xyzx
  74: add r3.x, r3.x, r3.x
  75: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  76: dp3_sat r3.w, r1.xyzx, r2.xyzx
  77: add r3.w, -r3.w, l(1.000000)
  78: mul r3.w, r3.w, r3.w
  79: mul r3.w, r3.w, r3.w
  80: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r3.x, r5.w, l(-1.000000)
  82: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  83: max r3.x, r3.x, l(0.000000)
  84: log r3.x, r3.x
  85: mul r3.x, r3.x, cb2[14].y
  86: exp r3.x, r3.x
  87: mul r3.x, r3.x, cb2[14].x
  88: mul r3.xyz, r5.xyzx, r3.xxxx
  89: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r3.w, r3.w, l(0.500000), l(0.040000)
  91: mul r3.xyz, r3.wwww, r3.xyzx
  92: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  93: mul r1.w, r1.w, r2.w
  94: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  95: mul r1.w, r1.w, r2.w
  96: mul r5.xyz, r1.wwww, cb0[4].xyzx
  97: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  98: dp3 r0.x, r6.xyzx, r6.xyzx
  99: max r0.x, r0.x, l(0.000000)
 100: rsq r0.x, r0.x
 101: mul r6.xyz, r0.xxxx, r6.xyzx
 102: dp3_sat r0.x, r1.xyzx, r6.xyzx
 103: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 104: mul r0.x, r0.x, r0.x
 105: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 106: mul r1.w, r1.w, r1.w
 107: mul r0.x, r0.x, r0.x
 108: max r1.w, r1.w, l(0.100000)
 109: mul r0.x, r0.x, r1.w
 110: mul r0.x, r0.x, l(3.000000)
 111: div r0.x, l(0.062500), r0.x
 112: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 113: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 114: min r0.x, cb0[5].x, cb2[10].y
 115: ftoi r0.x, r0.x
 116: mov r5.xyz, r3.xyzx
 117: mov r1.w, l(0)
 118: loop 
 119:   uge r2.w, r1.w, r0.x
 120:   breakc_nz r2.w
 121:   and r2.w, r1.w, l(3)
 122:   ushr r3.w, r1.w, l(2)
 123:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 124:   ftoi r2.w, r2.w
 125:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 126:   dp3 r3.w, r6.xyzx, r6.xyzx
 127:   max r3.w, r3.w, l(0.000061)
 128:   rsq r4.w, r3.w
 129:   mul r7.xyz, r4.wwww, r6.xyzx
 130:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 131:   mul r3.w, r3.w, cb1[r2.w + 512].x
 132:   mad r3.w, -r3.w, r3.w, l(1.000000)
 133:   max r3.w, r3.w, l(0.000000)
 134:   mul r3.w, r3.w, r3.w
 135:   mul r3.w, r3.w, r5.w
 136:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 137:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 138:   mul r5.w, r5.w, r5.w
 139:   mul r3.w, r3.w, r5.w
 140:   ishl r5.w, r2.w, l(2)
 141:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 142:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 143:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 144:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 145:   div r8.xyz, r8.xyzx, r8.wwww
 146:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 147:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 148:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 149:   ge r6.w, l(0.000000), r8.z
 150:   ge r7.w, r8.z, l(1.000000)
 151:   or r6.w, r6.w, r7.w
 152:   movc r5.w, r6.w, l(1.000000), r5.w
 153:   ftoi r6.w, cb1[r2.w + 1024].x
 154:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 155:   max r6.w, r6.w, cb1[r2.w + 1024].y
 156:   mul r3.w, r3.w, r6.w
 157:   mul r3.w, r5.w, r3.w
 158:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 159:   mul r3.w, r3.w, r5.w
 160:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 161:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 162:   dp3 r2.w, r6.xyzx, r6.xyzx
 163:   max r2.w, r2.w, l(0.000000)
 164:   rsq r2.w, r2.w
 165:   mul r6.xyz, r2.wwww, r6.xyzx
 166:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 167:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 168:   mul r2.w, r2.w, r2.w
 169:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 170:   mul r3.w, r3.w, r3.w
 171:   mul r2.w, r2.w, r2.w
 172:   max r3.w, r3.w, l(0.100000)
 173:   mul r2.w, r2.w, r3.w
 174:   mul r2.w, r2.w, l(3.000000)
 175:   div r2.w, l(0.062500), r2.w
 176:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 177:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 178:   iadd r1.w, r1.w, l(1)
 179: endloop 
 180: add o0.xyz, r0.yzwy, r5.xyzx
 181: mov o0.w, l(0.300000)
 182: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 247 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  66: round_ni r5.xy, r5.xyxx
  67: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  68: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  69: mul r7.xyzw, r6.xxzz, r6.xxzz
  70: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  71: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  72: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  73: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  74: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  75: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  77: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  78: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  79: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  80: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mov r8.z, r7.x
  85: mov r8.w, r3.x
  86: mov r9.z, r10.x
  87: mov r9.w, r5.z
  88: add r6.xyzw, r8.zwxz, r9.zwxz
  89: mov r7.z, r8.y
  90: mov r7.w, r3.y
  91: mov r10.z, r9.y
  92: mov r10.w, r5.w
  93: add r3.xyw, r7.zyzw, r10.zyzw
  94: div r7.xyz, r9.xzwx, r6.zwyz
  95: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  96: div r8.xyz, r10.zywz, r3.xywx
  97: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  98: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  99: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 100: mov r7.w, r8.x
 101: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 102: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 103: mov r8.w, r7.y
 104: mov r7.yw, r8.yyyz
 105: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 106: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 107: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 108: mul r11.xyzw, r3.xxxy, r6.zwyz
 109: mul r12.xyzw, r3.yyww, r6.xyzw
 110: mul r1.w, r3.w, r6.y
 111: sample_c_lz r2.w, r9.xyxx, t1.xxxx, s1, r3.z
 112: sample_c_lz r3.x, r9.zwzz, t1.xxxx, s1, r3.z
 113: mul r3.x, r3.x, r11.y
 114: mad r2.w, r11.x, r2.w, r3.x
 115: sample_c_lz r3.x, r5.zwzz, t1.xxxx, s1, r3.z
 116: mad r2.w, r11.z, r3.x, r2.w
 117: sample_c_lz r3.x, r8.xyxx, t1.xxxx, s1, r3.z
 118: mad r2.w, r11.w, r3.x, r2.w
 119: sample_c_lz r3.x, r10.xyxx, t1.xxxx, s1, r3.z
 120: mad r2.w, r12.x, r3.x, r2.w
 121: sample_c_lz r3.x, r10.zwzz, t1.xxxx, s1, r3.z
 122: mad r2.w, r12.y, r3.x, r2.w
 123: sample_c_lz r3.x, r8.zwzz, t1.xxxx, s1, r3.z
 124: mad r2.w, r12.z, r3.x, r2.w
 125: sample_c_lz r3.x, r7.xyxx, t1.xxxx, s1, r3.z
 126: mad r2.w, r12.w, r3.x, r2.w
 127: sample_c_lz r3.x, r7.zwzz, t1.xxxx, s1, r3.z
 128: mad r1.w, r1.w, r3.x, r2.w
 129: add r2.w, -cb3[29].x, l(1.000000)
 130: mad r1.w, r1.w, cb3[29].x, r2.w
 131: ge r2.w, l(0.000000), r3.z
 132: ge r3.x, r3.z, l(1.000000)
 133: or r2.w, r2.w, r3.x
 134: movc r1.w, r2.w, l(1.000000), r1.w
 135: dp3 r2.w, -r2.xyzx, r1.xyzx
 136: add r2.w, r2.w, r2.w
 137: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 138: dp3_sat r2.w, r1.xyzx, r2.xyzx
 139: add r2.w, -r2.w, l(1.000000)
 140: mul r2.w, r2.w, r2.w
 141: mul r2.w, r2.w, r2.w
 142: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r3.w, r3.w, l(-1.000000)
 144: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 145: max r3.w, r3.w, l(0.000000)
 146: log r3.w, r3.w
 147: mul r3.w, r3.w, cb2[14].y
 148: exp r3.w, r3.w
 149: mul r3.w, r3.w, cb2[14].x
 150: mul r3.xyz, r3.xyzx, r3.wwww
 151: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mad r2.w, r2.w, l(0.500000), l(0.040000)
 153: mul r3.xyz, r2.wwww, r3.xyzx
 154: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 155: mul r1.w, r1.w, cb2[10].z
 156: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 157: mul r1.w, r1.w, r2.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   ishl r5.w, r2.w, l(2)
 203:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 204:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 205:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 206:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 207:   div r8.xyz, r8.xyzx, r8.wwww
 208:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 209:   round_ni r9.xy, r9.xyxx
 210:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 211:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 212:   mul r11.xyzw, r10.xxzz, r10.xxzz
 213:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 214:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 215:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 216:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 217:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 218:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 219:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 220:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 221:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 222:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 223:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 224:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 225:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 226:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 227:   mov r12.z, r11.x
 228:   mov r12.w, r8.x
 229:   mov r13.z, r14.x
 230:   mov r13.w, r9.z
 231:   add r10.xyzw, r12.zwxz, r13.zwxz
 232:   mov r11.z, r12.y
 233:   mov r11.w, r8.y
 234:   mov r14.z, r13.y
 235:   mov r14.w, r9.w
 236:   add r8.xyw, r11.zyzw, r14.zyzw
 237:   div r11.xyz, r13.xzwx, r10.zwyz
 238:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 239:   div r12.xyz, r14.zywz, r8.xywx
 240:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 241:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 242:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 243:   mov r11.w, r12.x
 244:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 245:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 246:   mov r12.w, r11.y
 247:   mov r11.yw, r12.yyyz
 248:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 249:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 250:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 251:   mul r15.xyzw, r8.xxxy, r10.zwyz
 252:   mul r16.xyzw, r8.yyww, r10.xyzw
 253:   mul r5.w, r8.w, r10.y
 254:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 255:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 256:   mul r7.w, r7.w, r15.y
 257:   mad r6.w, r15.x, r6.w, r7.w
 258:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 259:   mad r6.w, r15.z, r7.w, r6.w
 260:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 261:   mad r6.w, r15.w, r7.w, r6.w
 262:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 263:   mad r6.w, r16.x, r7.w, r6.w
 264:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 265:   mad r6.w, r16.y, r7.w, r6.w
 266:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 267:   mad r6.w, r16.z, r7.w, r6.w
 268:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 269:   mad r6.w, r16.w, r7.w, r6.w
 270:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 271:   mad r5.w, r5.w, r7.w, r6.w
 272:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 273:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 274:   ge r6.w, l(0.000000), r8.z
 275:   ge r7.w, r8.z, l(1.000000)
 276:   or r6.w, r6.w, r7.w
 277:   movc r5.w, r6.w, l(1.000000), r5.w
 278:   mul r3.w, r3.w, r5.w
 279:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 280:   mul r3.w, r3.w, r5.w
 281:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 282:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 283:   dp3 r2.w, r6.xyzx, r6.xyzx
 284:   max r2.w, r2.w, l(0.000000)
 285:   rsq r2.w, r2.w
 286:   mul r6.xyz, r2.wwww, r6.xyzx
 287:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 288:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 289:   mul r2.w, r2.w, r2.w
 290:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 291:   mul r3.w, r3.w, r3.w
 292:   mul r2.w, r2.w, r2.w
 293:   max r3.w, r3.w, l(0.100000)
 294:   mul r2.w, r2.w, r3.w
 295:   mul r2.w, r2.w, l(3.000000)
 296:   div r2.w, l(0.062500), r2.w
 297:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 298:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 299:   iadd r1.w, r1.w, l(1)
 300: endloop 
 301: add o0.xyz, r0.yzwy, r5.xyzx
 302: mov o0.w, l(0.300000)
 303: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 251 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  67: round_ni r5.xy, r5.xyxx
  68: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  69: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  70: mul r7.xyzw, r6.xxzz, r6.xxzz
  71: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  72: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  73: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  74: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  76: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  78: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  79: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: mov r8.z, r7.x
  86: mov r8.w, r3.x
  87: mov r9.z, r10.x
  88: mov r9.w, r5.z
  89: add r6.xyzw, r8.zwxz, r9.zwxz
  90: mov r7.z, r8.y
  91: mov r7.w, r3.y
  92: mov r10.z, r9.y
  93: mov r10.w, r5.w
  94: add r3.xyw, r7.zyzw, r10.zyzw
  95: div r7.xyz, r9.xzwx, r6.zwyz
  96: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  97: div r8.xyz, r10.zywz, r3.xywx
  98: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  99: mul r7.xyz, r7.yxzy, cb3[30].xxxx
 100: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 101: mov r7.w, r8.x
 102: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 103: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 104: mov r8.w, r7.y
 105: mov r7.yw, r8.yyyz
 106: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 107: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 108: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 109: mul r11.xyzw, r3.xxxy, r6.zwyz
 110: mul r12.xyzw, r3.yyww, r6.xyzw
 111: mul r2.w, r3.w, r6.y
 112: sample_c_lz r3.x, r9.xyxx, t1.xxxx, s1, r3.z
 113: sample_c_lz r3.y, r9.zwzz, t1.xxxx, s1, r3.z
 114: mul r3.y, r3.y, r11.y
 115: mad r3.x, r11.x, r3.x, r3.y
 116: sample_c_lz r3.y, r5.zwzz, t1.xxxx, s1, r3.z
 117: mad r3.x, r11.z, r3.y, r3.x
 118: sample_c_lz r3.y, r8.xyxx, t1.xxxx, s1, r3.z
 119: mad r3.x, r11.w, r3.y, r3.x
 120: sample_c_lz r3.y, r10.xyxx, t1.xxxx, s1, r3.z
 121: mad r3.x, r12.x, r3.y, r3.x
 122: sample_c_lz r3.y, r10.zwzz, t1.xxxx, s1, r3.z
 123: mad r3.x, r12.y, r3.y, r3.x
 124: sample_c_lz r3.y, r8.zwzz, t1.xxxx, s1, r3.z
 125: mad r3.x, r12.z, r3.y, r3.x
 126: sample_c_lz r3.y, r7.xyxx, t1.xxxx, s1, r3.z
 127: mad r3.x, r12.w, r3.y, r3.x
 128: sample_c_lz r3.y, r7.zwzz, t1.xxxx, s1, r3.z
 129: mad r2.w, r2.w, r3.y, r3.x
 130: add r3.x, -cb3[29].x, l(1.000000)
 131: mad r2.w, r2.w, cb3[29].x, r3.x
 132: ge r3.x, l(0.000000), r3.z
 133: ge r3.y, r3.z, l(1.000000)
 134: or r3.x, r3.y, r3.x
 135: movc r2.w, r3.x, l(1.000000), r2.w
 136: dp3 r3.x, -r2.xyzx, r1.xyzx
 137: add r3.x, r3.x, r3.x
 138: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 139: dp3_sat r3.w, r1.xyzx, r2.xyzx
 140: add r3.w, -r3.w, l(1.000000)
 141: mul r3.w, r3.w, r3.w
 142: mul r3.w, r3.w, r3.w
 143: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r3.x, r5.w, l(-1.000000)
 145: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 146: max r3.x, r3.x, l(0.000000)
 147: log r3.x, r3.x
 148: mul r3.x, r3.x, cb2[14].y
 149: exp r3.x, r3.x
 150: mul r3.x, r3.x, cb2[14].x
 151: mul r3.xyz, r5.xyzx, r3.xxxx
 152: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r3.w, r3.w, l(0.500000), l(0.040000)
 154: mul r3.xyz, r3.wwww, r3.xyzx
 155: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 156: mul r1.w, r1.w, r2.w
 157: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 158: mul r1.w, r1.w, r2.w
 159: mul r5.xyz, r1.wwww, cb0[4].xyzx
 160: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 161: dp3 r0.x, r6.xyzx, r6.xyzx
 162: max r0.x, r0.x, l(0.000000)
 163: rsq r0.x, r0.x
 164: mul r6.xyz, r0.xxxx, r6.xyzx
 165: dp3_sat r0.x, r1.xyzx, r6.xyzx
 166: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 167: mul r0.x, r0.x, r0.x
 168: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 169: mul r1.w, r1.w, r1.w
 170: mul r0.x, r0.x, r0.x
 171: max r1.w, r1.w, l(0.100000)
 172: mul r0.x, r0.x, r1.w
 173: mul r0.x, r0.x, l(3.000000)
 174: div r0.x, l(0.062500), r0.x
 175: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 176: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 177: min r0.x, cb0[5].x, cb2[10].y
 178: ftoi r0.x, r0.x
 179: mov r5.xyz, r3.xyzx
 180: mov r1.w, l(0)
 181: loop 
 182:   uge r2.w, r1.w, r0.x
 183:   breakc_nz r2.w
 184:   and r2.w, r1.w, l(3)
 185:   ushr r3.w, r1.w, l(2)
 186:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 187:   ftoi r2.w, r2.w
 188:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 189:   dp3 r3.w, r6.xyzx, r6.xyzx
 190:   max r3.w, r3.w, l(0.000061)
 191:   rsq r4.w, r3.w
 192:   mul r7.xyz, r4.wwww, r6.xyzx
 193:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 194:   mul r3.w, r3.w, cb1[r2.w + 512].x
 195:   mad r3.w, -r3.w, r3.w, l(1.000000)
 196:   max r3.w, r3.w, l(0.000000)
 197:   mul r3.w, r3.w, r3.w
 198:   mul r3.w, r3.w, r5.w
 199:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 200:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 201:   mul r5.w, r5.w, r5.w
 202:   mul r3.w, r3.w, r5.w
 203:   ishl r5.w, r2.w, l(2)
 204:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 205:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 206:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 207:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 208:   div r8.xyz, r8.xyzx, r8.wwww
 209:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 210:   round_ni r9.xy, r9.xyxx
 211:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 212:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 213:   mul r11.xyzw, r10.xxzz, r10.xxzz
 214:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 215:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 216:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 217:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 218:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 219:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 220:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 221:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 222:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 223:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 224:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 225:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 226:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 227:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 228:   mov r12.z, r11.x
 229:   mov r12.w, r8.x
 230:   mov r13.z, r14.x
 231:   mov r13.w, r9.z
 232:   add r10.xyzw, r12.zwxz, r13.zwxz
 233:   mov r11.z, r12.y
 234:   mov r11.w, r8.y
 235:   mov r14.z, r13.y
 236:   mov r14.w, r9.w
 237:   add r8.xyw, r11.zyzw, r14.zyzw
 238:   div r11.xyz, r13.xzwx, r10.zwyz
 239:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 240:   div r12.xyz, r14.zywz, r8.xywx
 241:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 242:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 243:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 244:   mov r11.w, r12.x
 245:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 246:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 247:   mov r12.w, r11.y
 248:   mov r11.yw, r12.yyyz
 249:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 250:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 251:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 252:   mul r15.xyzw, r8.xxxy, r10.zwyz
 253:   mul r16.xyzw, r8.yyww, r10.xyzw
 254:   mul r5.w, r8.w, r10.y
 255:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 256:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 257:   mul r7.w, r7.w, r15.y
 258:   mad r6.w, r15.x, r6.w, r7.w
 259:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 260:   mad r6.w, r15.z, r7.w, r6.w
 261:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 262:   mad r6.w, r15.w, r7.w, r6.w
 263:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 264:   mad r6.w, r16.x, r7.w, r6.w
 265:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 266:   mad r6.w, r16.y, r7.w, r6.w
 267:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 268:   mad r6.w, r16.z, r7.w, r6.w
 269:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 270:   mad r6.w, r16.w, r7.w, r6.w
 271:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 272:   mad r5.w, r5.w, r7.w, r6.w
 273:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 274:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 275:   ge r6.w, l(0.000000), r8.z
 276:   ge r7.w, r8.z, l(1.000000)
 277:   or r6.w, r6.w, r7.w
 278:   movc r5.w, r6.w, l(1.000000), r5.w
 279:   ftoi r6.w, cb1[r2.w + 1024].x
 280:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 281:   max r6.w, r6.w, cb1[r2.w + 1024].y
 282:   mul r3.w, r3.w, r6.w
 283:   mul r3.w, r5.w, r3.w
 284:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 285:   mul r3.w, r3.w, r5.w
 286:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 287:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 288:   dp3 r2.w, r6.xyzx, r6.xyzx
 289:   max r2.w, r2.w, l(0.000000)
 290:   rsq r2.w, r2.w
 291:   mul r6.xyz, r2.wwww, r6.xyzx
 292:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 293:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 294:   mul r2.w, r2.w, r2.w
 295:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 296:   mul r3.w, r3.w, r3.w
 297:   mul r2.w, r2.w, r2.w
 298:   max r3.w, r3.w, l(0.100000)
 299:   mul r2.w, r2.w, r3.w
 300:   mul r2.w, r2.w, l(3.000000)
 301:   div r2.w, l(0.062500), r2.w
 302:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 303:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 304:   iadd r1.w, r1.w, l(1)
 305: endloop 
 306: add o0.xyz, r0.yzwy, r5.xyzx
 307: mov o0.w, l(0.300000)
 308: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r2.xyz, r0.wwww, cb0[4].xyzx
 113: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: add o0.xyz, r1.xyzx, r0.xyzx
 174: mov o0.w, l(0.300000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r2.xyz, r0.wwww, cb0[4].xyzx
 113: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: add o0.xyz, r1.xyzx, r0.xyzx
 174: mov o0.w, l(0.300000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 117:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 118:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 119:   ge r6.w, l(0.000000), r8.z
 120:   ge r7.w, r8.z, l(1.000000)
 121:   or r6.w, r6.w, r7.w
 122:   movc r5.w, r6.w, l(1.000000), r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 125:   mul r3.w, r3.w, r5.w
 126:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 127:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 128:   dp3 r2.w, r6.xyzx, r6.xyzx
 129:   max r2.w, r2.w, l(0.000000)
 130:   rsq r2.w, r2.w
 131:   mul r6.xyz, r2.wwww, r6.xyzx
 132:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 133:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 134:   mul r2.w, r2.w, r2.w
 135:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 136:   mul r3.w, r3.w, r3.w
 137:   mul r2.w, r2.w, r2.w
 138:   max r3.w, r3.w, l(0.100000)
 139:   mul r2.w, r2.w, r3.w
 140:   mul r2.w, r2.w, l(3.000000)
 141:   div r2.w, l(0.062500), r2.w
 142:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 143:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 144:   iadd r1.w, r1.w, l(1)
 145: endloop 
 146: add o0.xyz, r0.yzwy, r5.xyzx
 147: mov o0.w, l(0.300000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 118:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 119:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 120:   ge r6.w, l(0.000000), r8.z
 121:   ge r7.w, r8.z, l(1.000000)
 122:   or r6.w, r6.w, r7.w
 123:   movc r5.w, r6.w, l(1.000000), r5.w
 124:   ftoi r6.w, cb1[r2.w + 1024].x
 125:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 126:   max r6.w, r6.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r6.w
 128:   mul r3.w, r5.w, r3.w
 129:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 130:   mul r3.w, r3.w, r5.w
 131:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 132:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 133:   dp3 r2.w, r6.xyzx, r6.xyzx
 134:   max r2.w, r2.w, l(0.000000)
 135:   rsq r2.w, r2.w
 136:   mul r6.xyz, r2.wwww, r6.xyzx
 137:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 138:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 139:   mul r2.w, r2.w, r2.w
 140:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 141:   mul r3.w, r3.w, r3.w
 142:   mul r2.w, r2.w, r2.w
 143:   max r3.w, r3.w, l(0.100000)
 144:   mul r2.w, r2.w, r3.w
 145:   mul r2.w, r2.w, l(3.000000)
 146:   div r2.w, l(0.062500), r2.w
 147:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 148:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 149:   iadd r1.w, r1.w, l(1)
 150: endloop 
 151: add o0.xyz, r0.yzwy, r5.xyzx
 152: mov o0.w, l(0.300000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 117:   round_ni r9.xy, r9.xyxx
 118:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 119:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 120:   mul r11.xyzw, r10.xxzz, r10.xxzz
 121:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 122:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 123:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 124:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 125:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 126:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 127:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 128:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 129:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 130:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 131:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mov r12.z, r11.x
 136:   mov r12.w, r8.x
 137:   mov r13.z, r14.x
 138:   mov r13.w, r9.z
 139:   add r10.xyzw, r12.zwxz, r13.zwxz
 140:   mov r11.z, r12.y
 141:   mov r11.w, r8.y
 142:   mov r14.z, r13.y
 143:   mov r14.w, r9.w
 144:   add r8.xyw, r11.zyzw, r14.zyzw
 145:   div r11.xyz, r13.xzwx, r10.zwyz
 146:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 147:   div r12.xyz, r14.zywz, r8.xywx
 148:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 149:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 150:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 151:   mov r11.w, r12.x
 152:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 153:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 154:   mov r12.w, r11.y
 155:   mov r11.yw, r12.yyyz
 156:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 157:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 158:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 159:   mul r15.xyzw, r8.xxxy, r10.zwyz
 160:   mul r16.xyzw, r8.yyww, r10.xyzw
 161:   mul r5.w, r8.w, r10.y
 162:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 163:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 164:   mul r7.w, r7.w, r15.y
 165:   mad r6.w, r15.x, r6.w, r7.w
 166:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 167:   mad r6.w, r15.z, r7.w, r6.w
 168:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 169:   mad r6.w, r15.w, r7.w, r6.w
 170:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 171:   mad r6.w, r16.x, r7.w, r6.w
 172:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 173:   mad r6.w, r16.y, r7.w, r6.w
 174:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 175:   mad r6.w, r16.z, r7.w, r6.w
 176:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 177:   mad r6.w, r16.w, r7.w, r6.w
 178:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 179:   mad r5.w, r5.w, r7.w, r6.w
 180:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 181:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 182:   ge r6.w, l(0.000000), r8.z
 183:   ge r7.w, r8.z, l(1.000000)
 184:   or r6.w, r6.w, r7.w
 185:   movc r5.w, r6.w, l(1.000000), r5.w
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 118:   round_ni r9.xy, r9.xyxx
 119:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 120:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 121:   mul r11.xyzw, r10.xxzz, r10.xxzz
 122:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 123:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 124:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 125:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 126:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 127:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 128:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 129:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 130:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 131:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 136:   mov r12.z, r11.x
 137:   mov r12.w, r8.x
 138:   mov r13.z, r14.x
 139:   mov r13.w, r9.z
 140:   add r10.xyzw, r12.zwxz, r13.zwxz
 141:   mov r11.z, r12.y
 142:   mov r11.w, r8.y
 143:   mov r14.z, r13.y
 144:   mov r14.w, r9.w
 145:   add r8.xyw, r11.zyzw, r14.zyzw
 146:   div r11.xyz, r13.xzwx, r10.zwyz
 147:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 148:   div r12.xyz, r14.zywz, r8.xywx
 149:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 150:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 151:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 152:   mov r11.w, r12.x
 153:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 154:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 155:   mov r12.w, r11.y
 156:   mov r11.yw, r12.yyyz
 157:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 158:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 159:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 160:   mul r15.xyzw, r8.xxxy, r10.zwyz
 161:   mul r16.xyzw, r8.yyww, r10.xyzw
 162:   mul r5.w, r8.w, r10.y
 163:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 164:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 165:   mul r7.w, r7.w, r15.y
 166:   mad r6.w, r15.x, r6.w, r7.w
 167:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 168:   mad r6.w, r15.z, r7.w, r6.w
 169:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 170:   mad r6.w, r15.w, r7.w, r6.w
 171:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 172:   mad r6.w, r16.x, r7.w, r6.w
 173:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 174:   mad r6.w, r16.y, r7.w, r6.w
 175:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 176:   mad r6.w, r16.z, r7.w, r6.w
 177:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 178:   mad r6.w, r16.w, r7.w, r6.w
 179:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 180:   mad r5.w, r5.w, r7.w, r6.w
 181:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 182:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 183:   ge r6.w, l(0.000000), r8.z
 184:   ge r7.w, r8.z, l(1.000000)
 185:   or r6.w, r6.w, r7.w
 186:   movc r5.w, r6.w, l(1.000000), r5.w
 187:   ftoi r6.w, cb1[r2.w + 1024].x
 188:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 189:   max r6.w, r6.w, cb1[r2.w + 1024].y
 190:   mul r3.w, r3.w, r6.w
 191:   mul r3.w, r5.w, r3.w
 192:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 193:   mul r3.w, r3.w, r5.w
 194:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 195:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 196:   dp3 r2.w, r6.xyzx, r6.xyzx
 197:   max r2.w, r2.w, l(0.000000)
 198:   rsq r2.w, r2.w
 199:   mul r6.xyz, r2.wwww, r6.xyzx
 200:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 201:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 202:   mul r2.w, r2.w, r2.w
 203:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 204:   mul r3.w, r3.w, r3.w
 205:   mul r2.w, r2.w, r2.w
 206:   max r3.w, r3.w, l(0.100000)
 207:   mul r2.w, r2.w, r3.w
 208:   mul r2.w, r2.w, l(3.000000)
 209:   div r2.w, l(0.062500), r2.w
 210:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 211:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 212:   iadd r1.w, r1.w, l(1)
 213: endloop 
 214: add o0.xyz, r0.yzwy, r5.xyzx
 215: mov o0.w, l(0.300000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r2.xyz, r4.xyzx, r2.xyzx, r3.xyzx
  84: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 83 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r4.xyz, r0.wwww, cb0[4].xyzx
  84: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  85: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  86: add o0.xyz, r0.xyzx, r1.xyzx
  87: mov o0.w, l(0.300000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 111:   mul r3.w, r3.w, r5.w
 112:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 113:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 114:   dp3 r2.w, r6.xyzx, r6.xyzx
 115:   max r2.w, r2.w, l(0.000000)
 116:   rsq r2.w, r2.w
 117:   mul r6.xyz, r2.wwww, r6.xyzx
 118:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 119:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 120:   mul r2.w, r2.w, r2.w
 121:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r2.w, r2.w, r2.w
 124:   max r3.w, r3.w, l(0.100000)
 125:   mul r2.w, r2.w, r3.w
 126:   mul r2.w, r2.w, l(3.000000)
 127:   div r2.w, l(0.062500), r2.w
 128:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 129:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 130:   iadd r1.w, r1.w, l(1)
 131: endloop 
 132: add o0.xyz, r0.yzwy, r5.xyzx
 133: mov o0.w, l(0.300000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 126 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t3.xyzw, s3
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t2.xyzw, s2
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ftoi r5.w, cb1[r2.w + 1024].x
 112:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 113:   max r5.w, r5.w, cb1[r2.w + 1024].y
 114:   mul r3.w, r3.w, r5.w
 115:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 116:   mul r3.w, r3.w, r5.w
 117:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 118:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 119:   dp3 r2.w, r6.xyzx, r6.xyzx
 120:   max r2.w, r2.w, l(0.000000)
 121:   rsq r2.w, r2.w
 122:   mul r6.xyz, r2.wwww, r6.xyzx
 123:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 124:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 125:   mul r2.w, r2.w, r2.w
 126:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 127:   mul r3.w, r3.w, r3.w
 128:   mul r2.w, r2.w, r2.w
 129:   max r3.w, r3.w, l(0.100000)
 130:   mul r2.w, r2.w, r3.w
 131:   mul r2.w, r2.w, l(3.000000)
 132:   div r2.w, l(0.062500), r2.w
 133:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 134:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 135:   iadd r1.w, r1.w, l(1)
 136: endloop 
 137: add o0.xyz, r0.yzwy, r5.xyzx
 138: mov o0.w, l(0.300000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 134 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 117:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 118:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 119:   ge r6.w, l(0.000000), r8.z
 120:   ge r7.w, r8.z, l(1.000000)
 121:   or r6.w, r6.w, r7.w
 122:   movc r5.w, r6.w, l(1.000000), r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 125:   mul r3.w, r3.w, r5.w
 126:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 127:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 128:   dp3 r2.w, r6.xyzx, r6.xyzx
 129:   max r2.w, r2.w, l(0.000000)
 130:   rsq r2.w, r2.w
 131:   mul r6.xyz, r2.wwww, r6.xyzx
 132:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 133:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 134:   mul r2.w, r2.w, r2.w
 135:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 136:   mul r3.w, r3.w, r3.w
 137:   mul r2.w, r2.w, r2.w
 138:   max r3.w, r3.w, l(0.100000)
 139:   mul r2.w, r2.w, r3.w
 140:   mul r2.w, r2.w, l(3.000000)
 141:   div r2.w, l(0.062500), r2.w
 142:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 143:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 144:   iadd r1.w, r1.w, l(1)
 145: endloop 
 146: add o0.xyz, r0.yzwy, r5.xyzx
 147: mov o0.w, l(0.300000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   sample_c_lz r5.w, r8.xyxx, t1.xxxx, s1, r8.z
 118:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 119:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 120:   ge r6.w, l(0.000000), r8.z
 121:   ge r7.w, r8.z, l(1.000000)
 122:   or r6.w, r6.w, r7.w
 123:   movc r5.w, r6.w, l(1.000000), r5.w
 124:   ftoi r6.w, cb1[r2.w + 1024].x
 125:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 126:   max r6.w, r6.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r6.w
 128:   mul r3.w, r5.w, r3.w
 129:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 130:   mul r3.w, r3.w, r5.w
 131:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 132:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 133:   dp3 r2.w, r6.xyzx, r6.xyzx
 134:   max r2.w, r2.w, l(0.000000)
 135:   rsq r2.w, r2.w
 136:   mul r6.xyz, r2.wwww, r6.xyzx
 137:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 138:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 139:   mul r2.w, r2.w, r2.w
 140:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 141:   mul r3.w, r3.w, r3.w
 142:   mul r2.w, r2.w, r2.w
 143:   max r3.w, r3.w, l(0.100000)
 144:   mul r2.w, r2.w, r3.w
 145:   mul r2.w, r2.w, l(3.000000)
 146:   div r2.w, l(0.062500), r2.w
 147:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 148:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 149:   iadd r1.w, r1.w, l(1)
 150: endloop 
 151: add o0.xyz, r0.yzwy, r5.xyzx
 152: mov o0.w, l(0.300000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: dp3 r1.w, -r2.xyzx, r1.xyzx
  45: add r1.w, r1.w, r1.w
  46: mad r4.xyz, r1.xyzx, -r1.wwww, -r2.xyzx
  47: dp3_sat r1.w, r1.xyzx, r2.xyzx
  48: add r1.w, -r1.w, l(1.000000)
  49: mul r1.w, r1.w, r1.w
  50: mul r1.w, r1.w, r1.w
  51: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  52: add r2.w, r4.w, l(-1.000000)
  53: mad r2.w, cb2[14].w, r2.w, l(1.000000)
  54: max r2.w, r2.w, l(0.000000)
  55: log r2.w, r2.w
  56: mul r2.w, r2.w, cb2[14].y
  57: exp r2.w, r2.w
  58: mul r2.w, r2.w, cb2[14].x
  59: mul r4.xyz, r4.xyzx, r2.wwww
  60: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  61: mad r1.w, r1.w, l(0.500000), l(0.040000)
  62: mul r4.xyz, r1.wwww, r4.xyzx
  63: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  64: dp3_sat r1.w, r1.xyzx, cb0[3].xyzx
  65: mul r1.w, r1.w, cb2[10].z
  66: mul r5.xyz, r1.wwww, cb0[4].xyzx
  67: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  68: dp3 r0.x, r6.xyzx, r6.xyzx
  69: max r0.x, r0.x, l(0.000000)
  70: rsq r0.x, r0.x
  71: mul r6.xyz, r0.xxxx, r6.xyzx
  72: dp3_sat r0.x, r1.xyzx, r6.xyzx
  73: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  74: mul r0.x, r0.x, r0.x
  75: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  76: mul r1.w, r1.w, r1.w
  77: mul r0.x, r0.x, r0.x
  78: max r1.w, r1.w, l(0.100000)
  79: mul r0.x, r0.x, r1.w
  80: mul r0.x, r0.x, l(3.000000)
  81: div r0.x, l(0.062500), r0.x
  82: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  83: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  84: min r0.x, cb0[5].x, cb2[10].y
  85: ftoi r0.x, r0.x
  86: mov r5.xyz, r4.xyzx
  87: mov r1.w, l(0)
  88: loop 
  89:   uge r2.w, r1.w, r0.x
  90:   breakc_nz r2.w
  91:   and r2.w, r1.w, l(3)
  92:   ushr r3.w, r1.w, l(2)
  93:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  94:   ftoi r2.w, r2.w
  95:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  96:   dp3 r3.w, r6.xyzx, r6.xyzx
  97:   max r3.w, r3.w, l(0.000061)
  98:   rsq r4.w, r3.w
  99:   mul r7.xyz, r4.wwww, r6.xyzx
 100:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 101:   mul r3.w, r3.w, cb1[r2.w + 512].x
 102:   mad r3.w, -r3.w, r3.w, l(1.000000)
 103:   max r3.w, r3.w, l(0.000000)
 104:   mul r3.w, r3.w, r3.w
 105:   mul r3.w, r3.w, r5.w
 106:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 107:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 108:   mul r5.w, r5.w, r5.w
 109:   mul r3.w, r3.w, r5.w
 110:   ishl r5.w, r2.w, l(2)
 111:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 112:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 113:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 114:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 115:   div r8.xyz, r8.xyzx, r8.wwww
 116:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 117:   round_ni r9.xy, r9.xyxx
 118:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 119:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 120:   mul r11.xyzw, r10.xxzz, r10.xxzz
 121:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 122:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 123:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 124:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 125:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 126:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 127:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 128:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 129:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 130:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 131:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mov r12.z, r11.x
 136:   mov r12.w, r8.x
 137:   mov r13.z, r14.x
 138:   mov r13.w, r9.z
 139:   add r10.xyzw, r12.zwxz, r13.zwxz
 140:   mov r11.z, r12.y
 141:   mov r11.w, r8.y
 142:   mov r14.z, r13.y
 143:   mov r14.w, r9.w
 144:   add r8.xyw, r11.zyzw, r14.zyzw
 145:   div r11.xyz, r13.xzwx, r10.zwyz
 146:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 147:   div r12.xyz, r14.zywz, r8.xywx
 148:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 149:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 150:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 151:   mov r11.w, r12.x
 152:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 153:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 154:   mov r12.w, r11.y
 155:   mov r11.yw, r12.yyyz
 156:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 157:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 158:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 159:   mul r15.xyzw, r8.xxxy, r10.zwyz
 160:   mul r16.xyzw, r8.yyww, r10.xyzw
 161:   mul r5.w, r8.w, r10.y
 162:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 163:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 164:   mul r7.w, r7.w, r15.y
 165:   mad r6.w, r15.x, r6.w, r7.w
 166:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 167:   mad r6.w, r15.z, r7.w, r6.w
 168:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 169:   mad r6.w, r15.w, r7.w, r6.w
 170:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 171:   mad r6.w, r16.x, r7.w, r6.w
 172:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 173:   mad r6.w, r16.y, r7.w, r6.w
 174:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 175:   mad r6.w, r16.z, r7.w, r6.w
 176:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 177:   mad r6.w, r16.w, r7.w, r6.w
 178:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 179:   mad r5.w, r5.w, r7.w, r6.w
 180:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 181:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 182:   ge r6.w, l(0.000000), r8.z
 183:   ge r7.w, r8.z, l(1.000000)
 184:   or r6.w, r6.w, r7.w
 185:   movc r5.w, r6.w, l(1.000000), r5.w
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: dp3 r2.w, -r2.xyzx, r1.xyzx
  46: add r2.w, r2.w, r2.w
  47: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  48: dp3_sat r2.w, r1.xyzx, r2.xyzx
  49: add r2.w, -r2.w, l(1.000000)
  50: mul r2.w, r2.w, r2.w
  51: mul r2.w, r2.w, r2.w
  52: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  53: add r3.w, r4.w, l(-1.000000)
  54: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  55: max r3.w, r3.w, l(0.000000)
  56: log r3.w, r3.w
  57: mul r3.w, r3.w, cb2[14].y
  58: exp r3.w, r3.w
  59: mul r3.w, r3.w, cb2[14].x
  60: mul r4.xyz, r4.xyzx, r3.wwww
  61: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  62: mad r2.w, r2.w, l(0.500000), l(0.040000)
  63: mul r4.xyz, r2.wwww, r4.xyzx
  64: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  65: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  66: mul r1.w, r1.w, r2.w
  67: mul r5.xyz, r1.wwww, cb0[4].xyzx
  68: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  69: dp3 r0.x, r6.xyzx, r6.xyzx
  70: max r0.x, r0.x, l(0.000000)
  71: rsq r0.x, r0.x
  72: mul r6.xyz, r0.xxxx, r6.xyzx
  73: dp3_sat r0.x, r1.xyzx, r6.xyzx
  74: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  75: mul r0.x, r0.x, r0.x
  76: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  77: mul r1.w, r1.w, r1.w
  78: mul r0.x, r0.x, r0.x
  79: max r1.w, r1.w, l(0.100000)
  80: mul r0.x, r0.x, r1.w
  81: mul r0.x, r0.x, l(3.000000)
  82: div r0.x, l(0.062500), r0.x
  83: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  84: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  85: min r0.x, cb0[5].x, cb2[10].y
  86: ftoi r0.x, r0.x
  87: mov r5.xyz, r4.xyzx
  88: mov r1.w, l(0)
  89: loop 
  90:   uge r2.w, r1.w, r0.x
  91:   breakc_nz r2.w
  92:   and r2.w, r1.w, l(3)
  93:   ushr r3.w, r1.w, l(2)
  94:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
  95:   ftoi r2.w, r2.w
  96:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  97:   dp3 r3.w, r6.xyzx, r6.xyzx
  98:   max r3.w, r3.w, l(0.000061)
  99:   rsq r4.w, r3.w
 100:   mul r7.xyz, r4.wwww, r6.xyzx
 101:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 102:   mul r3.w, r3.w, cb1[r2.w + 512].x
 103:   mad r3.w, -r3.w, r3.w, l(1.000000)
 104:   max r3.w, r3.w, l(0.000000)
 105:   mul r3.w, r3.w, r3.w
 106:   mul r3.w, r3.w, r5.w
 107:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 108:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 109:   mul r5.w, r5.w, r5.w
 110:   mul r3.w, r3.w, r5.w
 111:   ishl r5.w, r2.w, l(2)
 112:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 113:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 114:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 115:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 116:   div r8.xyz, r8.xyzx, r8.wwww
 117:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 118:   round_ni r9.xy, r9.xyxx
 119:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 120:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 121:   mul r11.xyzw, r10.xxzz, r10.xxzz
 122:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 123:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 124:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 125:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 126:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 127:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 128:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 129:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 130:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 131:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 132:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 133:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 134:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 135:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 136:   mov r12.z, r11.x
 137:   mov r12.w, r8.x
 138:   mov r13.z, r14.x
 139:   mov r13.w, r9.z
 140:   add r10.xyzw, r12.zwxz, r13.zwxz
 141:   mov r11.z, r12.y
 142:   mov r11.w, r8.y
 143:   mov r14.z, r13.y
 144:   mov r14.w, r9.w
 145:   add r8.xyw, r11.zyzw, r14.zyzw
 146:   div r11.xyz, r13.xzwx, r10.zwyz
 147:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 148:   div r12.xyz, r14.zywz, r8.xywx
 149:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 150:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 151:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 152:   mov r11.w, r12.x
 153:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 154:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 155:   mov r12.w, r11.y
 156:   mov r11.yw, r12.yyyz
 157:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 158:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 159:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 160:   mul r15.xyzw, r8.xxxy, r10.zwyz
 161:   mul r16.xyzw, r8.yyww, r10.xyzw
 162:   mul r5.w, r8.w, r10.y
 163:   sample_c_lz r6.w, r13.xyxx, t1.xxxx, s1, r8.z
 164:   sample_c_lz r7.w, r13.zwzz, t1.xxxx, s1, r8.z
 165:   mul r7.w, r7.w, r15.y
 166:   mad r6.w, r15.x, r6.w, r7.w
 167:   sample_c_lz r7.w, r9.zwzz, t1.xxxx, s1, r8.z
 168:   mad r6.w, r15.z, r7.w, r6.w
 169:   sample_c_lz r7.w, r12.xyxx, t1.xxxx, s1, r8.z
 170:   mad r6.w, r15.w, r7.w, r6.w
 171:   sample_c_lz r7.w, r14.xyxx, t1.xxxx, s1, r8.z
 172:   mad r6.w, r16.x, r7.w, r6.w
 173:   sample_c_lz r7.w, r14.zwzz, t1.xxxx, s1, r8.z
 174:   mad r6.w, r16.y, r7.w, r6.w
 175:   sample_c_lz r7.w, r12.zwzz, t1.xxxx, s1, r8.z
 176:   mad r6.w, r16.z, r7.w, r6.w
 177:   sample_c_lz r7.w, r11.xyxx, t1.xxxx, s1, r8.z
 178:   mad r6.w, r16.w, r7.w, r6.w
 179:   sample_c_lz r7.w, r11.zwzz, t1.xxxx, s1, r8.z
 180:   mad r5.w, r5.w, r7.w, r6.w
 181:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 182:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 183:   ge r6.w, l(0.000000), r8.z
 184:   ge r7.w, r8.z, l(1.000000)
 185:   or r6.w, r6.w, r7.w
 186:   movc r5.w, r6.w, l(1.000000), r5.w
 187:   ftoi r6.w, cb1[r2.w + 1024].x
 188:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 189:   max r6.w, r6.w, cb1[r2.w + 1024].y
 190:   mul r3.w, r3.w, r6.w
 191:   mul r3.w, r5.w, r3.w
 192:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 193:   mul r3.w, r3.w, r5.w
 194:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 195:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 196:   dp3 r2.w, r6.xyzx, r6.xyzx
 197:   max r2.w, r2.w, l(0.000000)
 198:   rsq r2.w, r2.w
 199:   mul r6.xyz, r2.wwww, r6.xyzx
 200:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 201:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 202:   mul r2.w, r2.w, r2.w
 203:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 204:   mul r3.w, r3.w, r3.w
 205:   mul r2.w, r2.w, r2.w
 206:   max r3.w, r3.w, l(0.100000)
 207:   mul r2.w, r2.w, r3.w
 208:   mul r2.w, r2.w, l(3.000000)
 209:   div r2.w, l(0.062500), r2.w
 210:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 211:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 212:   iadd r1.w, r1.w, l(1)
 213: endloop 
 214: add o0.xyz, r0.yzwy, r5.xyzx
 215: mov o0.w, l(0.300000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 81 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r2.x, r2.x, cb1[10].z
  75: mul r2.xyz, r2.xxxx, cb0[4].xyzx
  76: mul r0.w, r0.w, r0.w
  77: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r1.w, r0.w
  80: mul r0.w, r0.w, l(3.000000)
  81: div r0.w, l(0.062500), r0.w
  82: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  83: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  84: add o0.xyz, r0.xyzx, r1.xyzx
  85: mov o0.w, l(0.300000)
  86: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_CameraOpaqueTexture" to slot 1
Set 2D Texture "Texture2D_FE0BAE36" to slot 2
Set 2D Texture "Texture2D_E192FBFC" to slot 3

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t3.xyzw, s3
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: mul r0.w, cb1[10].z, cb1[13].x
  82: mul r0.w, r2.x, r0.w
  83: mul r2.xyz, r0.wwww, cb0[4].xyzx
  84: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  85: add o0.xyz, r0.xyzx, r1.xyzx
  86: mov o0.w, l(0.300000)
  87: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r4.xyz, r0.wwww, cb0[4].xyzx
  91: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  92: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 89 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r4.xyz, r0.wwww, cb0[4].xyzx
  92: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  93: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  94: add o0.xyz, r0.xyzx, r1.xyzx
  95: mov o0.w, l(0.300000)
  96: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 154: add o0.xyz, r1.xyzx, r0.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r4.xyz, r0.wwww, cb0[4].xyzx
  91: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  92: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 89 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r3.w, v9.z, l(1.000000)
  86: or r1.w, r1.w, r3.w
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r4.xyz, r0.wwww, cb0[4].xyzx
  92: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  93: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  94: add o0.xyz, r0.xyzx, r1.xyzx
  95: mov o0.w, l(0.300000)
  96: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  69: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  70: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  71: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o1.xyz, r0.xyzx
  76: mov o2.xyz, r1.xyzx
  77: mov o6.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  73: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  74: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  75: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  76: mov o3.w, v2.w
  77: mov o4.xyzw, v3.xyzw
  78: mov o8.x, l(0)
  79: mov o1.xyz, r0.xyzx
  80: mov o2.xyz, r1.xyzx
  81: mov o6.xy, l(0,0,0,0)
  82: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 154: add o0.xyz, r1.xyzx, r0.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: sample_c_lz r1.w, v9.xyxx, t1.xxxx, s1, v9.z
  45: add r2.w, -cb3[29].x, l(1.000000)
  46: mad r1.w, r1.w, cb3[29].x, r2.w
  47: ge r2.w, l(0.000000), v9.z
  48: ge r3.w, v9.z, l(1.000000)
  49: or r2.w, r2.w, r3.w
  50: movc r1.w, r2.w, l(1.000000), r1.w
  51: dp3 r2.w, -r2.xyzx, r1.xyzx
  52: add r2.w, r2.w, r2.w
  53: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  54: dp3_sat r2.w, r1.xyzx, r2.xyzx
  55: add r2.w, -r2.w, l(1.000000)
  56: mul r2.w, r2.w, r2.w
  57: mul r2.w, r2.w, r2.w
  58: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  59: add r3.w, r4.w, l(-1.000000)
  60: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  61: max r3.w, r3.w, l(0.000000)
  62: log r3.w, r3.w
  63: mul r3.w, r3.w, cb2[14].y
  64: exp r3.w, r3.w
  65: mul r3.w, r3.w, cb2[14].x
  66: mul r4.xyz, r4.xyzx, r3.wwww
  67: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  68: mad r2.w, r2.w, l(0.500000), l(0.040000)
  69: mul r4.xyz, r2.wwww, r4.xyzx
  70: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  71: mul r1.w, r1.w, cb2[10].z
  72: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  73: mul r1.w, r1.w, r2.w
  74: mul r5.xyz, r1.wwww, cb0[4].xyzx
  75: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  76: dp3 r0.x, r6.xyzx, r6.xyzx
  77: max r0.x, r0.x, l(0.000000)
  78: rsq r0.x, r0.x
  79: mul r6.xyz, r0.xxxx, r6.xyzx
  80: dp3_sat r0.x, r1.xyzx, r6.xyzx
  81: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  82: mul r0.x, r0.x, r0.x
  83: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  84: mul r1.w, r1.w, r1.w
  85: mul r0.x, r0.x, r0.x
  86: max r1.w, r1.w, l(0.100000)
  87: mul r0.x, r0.x, r1.w
  88: mul r0.x, r0.x, l(3.000000)
  89: div r0.x, l(0.062500), r0.x
  90: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  91: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  92: min r0.x, cb0[5].x, cb2[10].y
  93: ftoi r0.x, r0.x
  94: mov r5.xyz, r4.xyzx
  95: mov r1.w, l(0)
  96: loop 
  97:   uge r2.w, r1.w, r0.x
  98:   breakc_nz r2.w
  99:   and r2.w, r1.w, l(3)
 100:   ushr r3.w, r1.w, l(2)
 101:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 102:   ftoi r2.w, r2.w
 103:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 104:   dp3 r3.w, r6.xyzx, r6.xyzx
 105:   max r3.w, r3.w, l(0.000061)
 106:   rsq r4.w, r3.w
 107:   mul r7.xyz, r4.wwww, r6.xyzx
 108:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 109:   mul r3.w, r3.w, cb1[r2.w + 512].x
 110:   mad r3.w, -r3.w, r3.w, l(1.000000)
 111:   max r3.w, r3.w, l(0.000000)
 112:   mul r3.w, r3.w, r3.w
 113:   mul r3.w, r3.w, r5.w
 114:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 115:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 116:   mul r5.w, r5.w, r5.w
 117:   mul r3.w, r3.w, r5.w
 118:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 119:   mul r3.w, r3.w, r5.w
 120:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 121:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 122:   dp3 r2.w, r6.xyzx, r6.xyzx
 123:   max r2.w, r2.w, l(0.000000)
 124:   rsq r2.w, r2.w
 125:   mul r6.xyz, r2.wwww, r6.xyzx
 126:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 127:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 128:   mul r2.w, r2.w, r2.w
 129:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 130:   mul r3.w, r3.w, r3.w
 131:   mul r2.w, r2.w, r2.w
 132:   max r3.w, r3.w, l(0.100000)
 133:   mul r2.w, r2.w, r3.w
 134:   mul r2.w, r2.w, l(3.000000)
 135:   div r2.w, l(0.062500), r2.w
 136:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 137:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 138:   iadd r1.w, r1.w, l(1)
 139: endloop 
 140: add o0.xyz, r0.yzwy, r5.xyzx
 141: mov o0.w, l(0.300000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 132 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: sample_c_lz r2.w, v9.xyxx, t1.xxxx, s1, v9.z
  46: add r3.w, -cb3[29].x, l(1.000000)
  47: mad r2.w, r2.w, cb3[29].x, r3.w
  48: ge r3.w, l(0.000000), v9.z
  49: ge r4.x, v9.z, l(1.000000)
  50: or r3.w, r3.w, r4.x
  51: movc r2.w, r3.w, l(1.000000), r2.w
  52: dp3 r3.w, -r2.xyzx, r1.xyzx
  53: add r3.w, r3.w, r3.w
  54: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  55: dp3_sat r3.w, r1.xyzx, r2.xyzx
  56: add r3.w, -r3.w, l(1.000000)
  57: mul r3.w, r3.w, r3.w
  58: mul r3.w, r3.w, r3.w
  59: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  60: add r4.w, r4.w, l(-1.000000)
  61: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  62: max r4.w, r4.w, l(0.000000)
  63: log r4.w, r4.w
  64: mul r4.w, r4.w, cb2[14].y
  65: exp r4.w, r4.w
  66: mul r4.w, r4.w, cb2[14].x
  67: mul r4.xyz, r4.xyzx, r4.wwww
  68: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  69: mad r3.w, r3.w, l(0.500000), l(0.040000)
  70: mul r4.xyz, r3.wwww, r4.xyzx
  71: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  72: mul r1.w, r1.w, r2.w
  73: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  74: mul r1.w, r1.w, r2.w
  75: mul r5.xyz, r1.wwww, cb0[4].xyzx
  76: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  77: dp3 r0.x, r6.xyzx, r6.xyzx
  78: max r0.x, r0.x, l(0.000000)
  79: rsq r0.x, r0.x
  80: mul r6.xyz, r0.xxxx, r6.xyzx
  81: dp3_sat r0.x, r1.xyzx, r6.xyzx
  82: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  83: mul r0.x, r0.x, r0.x
  84: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  85: mul r1.w, r1.w, r1.w
  86: mul r0.x, r0.x, r0.x
  87: max r1.w, r1.w, l(0.100000)
  88: mul r0.x, r0.x, r1.w
  89: mul r0.x, r0.x, l(3.000000)
  90: div r0.x, l(0.062500), r0.x
  91: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  92: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  93: min r0.x, cb0[5].x, cb2[10].y
  94: ftoi r0.x, r0.x
  95: mov r5.xyz, r4.xyzx
  96: mov r1.w, l(0)
  97: loop 
  98:   uge r2.w, r1.w, r0.x
  99:   breakc_nz r2.w
 100:   and r2.w, r1.w, l(3)
 101:   ushr r3.w, r1.w, l(2)
 102:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 103:   ftoi r2.w, r2.w
 104:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 105:   dp3 r3.w, r6.xyzx, r6.xyzx
 106:   max r3.w, r3.w, l(0.000061)
 107:   rsq r4.w, r3.w
 108:   mul r7.xyz, r4.wwww, r6.xyzx
 109:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 110:   mul r3.w, r3.w, cb1[r2.w + 512].x
 111:   mad r3.w, -r3.w, r3.w, l(1.000000)
 112:   max r3.w, r3.w, l(0.000000)
 113:   mul r3.w, r3.w, r3.w
 114:   mul r3.w, r3.w, r5.w
 115:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 116:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 117:   mul r5.w, r5.w, r5.w
 118:   mul r3.w, r3.w, r5.w
 119:   ftoi r5.w, cb1[r2.w + 1024].x
 120:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 121:   max r5.w, r5.w, cb1[r2.w + 1024].y
 122:   mul r3.w, r3.w, r5.w
 123:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 124:   mul r3.w, r3.w, r5.w
 125:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 126:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 127:   dp3 r2.w, r6.xyzx, r6.xyzx
 128:   max r2.w, r2.w, l(0.000000)
 129:   rsq r2.w, r2.w
 130:   mul r6.xyz, r2.wwww, r6.xyzx
 131:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 132:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 133:   mul r2.w, r2.w, r2.w
 134:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 135:   mul r3.w, r3.w, r3.w
 136:   mul r2.w, r2.w, r2.w
 137:   max r3.w, r3.w, l(0.100000)
 138:   mul r2.w, r2.w, r3.w
 139:   mul r2.w, r2.w, l(3.000000)
 140:   div r2.w, l(0.062500), r2.w
 141:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 142:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 143:   iadd r1.w, r1.w, l(1)
 144: endloop 
 145: add o0.xyz, r0.yzwy, r5.xyzx
 146: mov o0.w, l(0.300000)
 147: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
   9: mul r1.x, r1.y, cb0[12].x
  10: mul r2.w, r1.x, l(0.500000)
  11: add r1.xy, r2.zzzz, r2.xwxx
  12: div r1.xy, r1.xyxx, r1.zzzz
  13: mul r1.z, cb0[10].x, cb4[4].x
  14: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  15: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  16: mul r1.zw, r1.xxxy, r2.xxxy
  17: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  18: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  19: dp3 r1.w, r0.yzwy, r0.yzwy
  20: rsq r1.w, r1.w
  21: mul r0.yzw, r0.yyzw, r1.wwww
  22: dp3 r1.w, v5.xyzx, v5.xyzx
  23: rsq r2.x, r1.w
  24: mul r2.xyz, r2.xxxx, v5.xyzx
  25: dp3_sat r0.y, r0.yzwy, r2.xyzx
  26: add r0.y, -r0.y, l(1.000000)
  27: log r0.y, r0.y
  28: mul r0.y, r0.y, cb4[1].x
  29: exp r0.y, r0.y
  30: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  31: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  32: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  33: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  34: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  35: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  36: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  37: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  38: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  39: rsq r0.x, r0.x
  40: mul r1.xyz, r0.xxxx, v2.xyzx
  41: max r0.x, r1.w, l(0.000000)
  42: rsq r0.x, r0.x
  43: mul r2.xyz, r0.xxxx, v5.xyzx
  44: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  45: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  46: round_ni r4.xy, r4.xyxx
  47: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  48: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  49: mul r6.xyzw, r5.xxzz, r5.xxzz
  50: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  51: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  52: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  53: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  55: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  57: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  58: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  59: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  64: mov r8.z, r7.x
  65: mov r8.w, r4.z
  66: mov r6.z, r9.x
  67: mov r6.w, r5.x
  68: add r10.xyzw, r6.zwxz, r8.zwxz
  69: mov r7.z, r8.y
  70: mov r7.w, r4.w
  71: mov r9.z, r6.y
  72: mov r9.w, r5.z
  73: add r5.xyz, r7.zywz, r9.zywz
  74: div r6.xyz, r6.xzwx, r10.zwyz
  75: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  76: div r7.xyz, r9.zywz, r5.xyzx
  77: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  78: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  79: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  80: mov r6.w, r7.x
  81: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  82: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  83: mov r7.w, r6.y
  84: mov r6.yw, r7.yyyz
  85: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  86: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  87: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  88: mul r11.xyzw, r5.xxxy, r10.zwyz
  89: mul r12.xyzw, r5.yyzz, r10.xyzw
  90: mul r1.w, r5.z, r10.y
  91: sample_c_lz r2.w, r8.xyxx, t1.xxxx, s1, v9.z
  92: sample_c_lz r3.w, r8.zwzz, t1.xxxx, s1, v9.z
  93: mul r3.w, r3.w, r11.y
  94: mad r2.w, r11.x, r2.w, r3.w
  95: sample_c_lz r3.w, r4.zwzz, t1.xxxx, s1, v9.z
  96: mad r2.w, r11.z, r3.w, r2.w
  97: sample_c_lz r3.w, r7.xyxx, t1.xxxx, s1, v9.z
  98: mad r2.w, r11.w, r3.w, r2.w
  99: sample_c_lz r3.w, r9.xyxx, t1.xxxx, s1, v9.z
 100: mad r2.w, r12.x, r3.w, r2.w
 101: sample_c_lz r3.w, r9.zwzz, t1.xxxx, s1, v9.z
 102: mad r2.w, r12.y, r3.w, r2.w
 103: sample_c_lz r3.w, r7.zwzz, t1.xxxx, s1, v9.z
 104: mad r2.w, r12.z, r3.w, r2.w
 105: sample_c_lz r3.w, r6.xyxx, t1.xxxx, s1, v9.z
 106: mad r2.w, r12.w, r3.w, r2.w
 107: sample_c_lz r3.w, r6.zwzz, t1.xxxx, s1, v9.z
 108: mad r1.w, r1.w, r3.w, r2.w
 109: add r2.w, -cb3[29].x, l(1.000000)
 110: mad r1.w, r1.w, cb3[29].x, r2.w
 111: ge r2.w, l(0.000000), v9.z
 112: ge r3.w, v9.z, l(1.000000)
 113: or r2.w, r2.w, r3.w
 114: movc r1.w, r2.w, l(1.000000), r1.w
 115: dp3 r2.w, -r2.xyzx, r1.xyzx
 116: add r2.w, r2.w, r2.w
 117: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 118: dp3_sat r2.w, r1.xyzx, r2.xyzx
 119: add r2.w, -r2.w, l(1.000000)
 120: mul r2.w, r2.w, r2.w
 121: mul r2.w, r2.w, r2.w
 122: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 123: add r3.w, r4.w, l(-1.000000)
 124: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 125: max r3.w, r3.w, l(0.000000)
 126: log r3.w, r3.w
 127: mul r3.w, r3.w, cb2[14].y
 128: exp r3.w, r3.w
 129: mul r3.w, r3.w, cb2[14].x
 130: mul r4.xyz, r4.xyzx, r3.wwww
 131: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 132: mad r2.w, r2.w, l(0.500000), l(0.040000)
 133: mul r4.xyz, r2.wwww, r4.xyzx
 134: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 135: mul r1.w, r1.w, cb2[10].z
 136: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 137: mul r1.w, r1.w, r2.w
 138: mul r5.xyz, r1.wwww, cb0[4].xyzx
 139: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 140: dp3 r0.x, r6.xyzx, r6.xyzx
 141: max r0.x, r0.x, l(0.000000)
 142: rsq r0.x, r0.x
 143: mul r6.xyz, r0.xxxx, r6.xyzx
 144: dp3_sat r0.x, r1.xyzx, r6.xyzx
 145: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 146: mul r0.x, r0.x, r0.x
 147: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 148: mul r1.w, r1.w, r1.w
 149: mul r0.x, r0.x, r0.x
 150: max r1.w, r1.w, l(0.100000)
 151: mul r0.x, r0.x, r1.w
 152: mul r0.x, r0.x, l(3.000000)
 153: div r0.x, l(0.062500), r0.x
 154: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 155: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 156: min r0.x, cb0[5].x, cb2[10].y
 157: ftoi r0.x, r0.x
 158: mov r5.xyz, r4.xyzx
 159: mov r1.w, l(0)
 160: loop 
 161:   uge r2.w, r1.w, r0.x
 162:   breakc_nz r2.w
 163:   and r2.w, r1.w, l(3)
 164:   ushr r3.w, r1.w, l(2)
 165:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 166:   ftoi r2.w, r2.w
 167:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 168:   dp3 r3.w, r6.xyzx, r6.xyzx
 169:   max r3.w, r3.w, l(0.000061)
 170:   rsq r4.w, r3.w
 171:   mul r7.xyz, r4.wwww, r6.xyzx
 172:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 173:   mul r3.w, r3.w, cb1[r2.w + 512].x
 174:   mad r3.w, -r3.w, r3.w, l(1.000000)
 175:   max r3.w, r3.w, l(0.000000)
 176:   mul r3.w, r3.w, r3.w
 177:   mul r3.w, r3.w, r5.w
 178:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 179:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 180:   mul r5.w, r5.w, r5.w
 181:   mul r3.w, r3.w, r5.w
 182:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 183:   mul r3.w, r3.w, r5.w
 184:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 185:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 186:   dp3 r2.w, r6.xyzx, r6.xyzx
 187:   max r2.w, r2.w, l(0.000000)
 188:   rsq r2.w, r2.w
 189:   mul r6.xyz, r2.wwww, r6.xyzx
 190:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 191:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 192:   mul r2.w, r2.w, r2.w
 193:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 194:   mul r3.w, r3.w, r3.w
 195:   mul r2.w, r2.w, r2.w
 196:   max r3.w, r3.w, l(0.100000)
 197:   mul r2.w, r2.w, r3.w
 198:   mul r2.w, r2.w, l(3.000000)
 199:   div r2.w, l(0.062500), r2.w
 200:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 201:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 202:   iadd r1.w, r1.w, l(1)
 203: endloop 
 204: add o0.xyz, r0.yzwy, r5.xyzx
 205: mov o0.w, l(0.300000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
   9: mul r1.x, r1.y, cb0[12].x
  10: mul r2.w, r1.x, l(0.500000)
  11: add r1.xy, r2.zzzz, r2.xwxx
  12: div r1.xy, r1.xyxx, r1.zzzz
  13: mul r1.z, cb0[10].x, cb4[4].x
  14: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  15: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  16: mul r1.zw, r1.xxxy, r2.xxxy
  17: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  18: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  19: dp3 r1.w, r0.yzwy, r0.yzwy
  20: rsq r1.w, r1.w
  21: mul r0.yzw, r0.yyzw, r1.wwww
  22: dp3 r1.w, v5.xyzx, v5.xyzx
  23: rsq r2.x, r1.w
  24: mul r2.xyz, r2.xxxx, v5.xyzx
  25: dp3_sat r0.y, r0.yzwy, r2.xyzx
  26: add r0.y, -r0.y, l(1.000000)
  27: log r0.y, r0.y
  28: mul r0.y, r0.y, cb4[1].x
  29: exp r0.y, r0.y
  30: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  31: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  32: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  33: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  34: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  35: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  36: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  37: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  38: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  39: rsq r0.x, r0.x
  40: mul r1.xyz, r0.xxxx, v2.xyzx
  41: max r0.x, r1.w, l(0.000000)
  42: rsq r0.x, r0.x
  43: mul r2.xyz, r0.xxxx, v5.xyzx
  44: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  45: mul r1.w, cb2[10].z, cb2[13].x
  46: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  47: round_ni r4.xy, r4.xyxx
  48: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  49: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  50: mul r6.xyzw, r5.xxzz, r5.xxzz
  51: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  52: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  53: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  54: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  56: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  58: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  59: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  60: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  64: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  65: mov r8.z, r7.x
  66: mov r8.w, r4.z
  67: mov r6.z, r9.x
  68: mov r6.w, r5.x
  69: add r10.xyzw, r6.zwxz, r8.zwxz
  70: mov r7.z, r8.y
  71: mov r7.w, r4.w
  72: mov r9.z, r6.y
  73: mov r9.w, r5.z
  74: add r5.xyz, r7.zywz, r9.zywz
  75: div r6.xyz, r6.xzwx, r10.zwyz
  76: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  77: div r7.xyz, r9.zywz, r5.xyzx
  78: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  79: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  80: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  81: mov r6.w, r7.x
  82: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  83: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  84: mov r7.w, r6.y
  85: mov r6.yw, r7.yyyz
  86: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  87: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  88: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  89: mul r11.xyzw, r5.xxxy, r10.zwyz
  90: mul r12.xyzw, r5.yyzz, r10.xyzw
  91: mul r2.w, r5.z, r10.y
  92: sample_c_lz r3.w, r8.xyxx, t1.xxxx, s1, v9.z
  93: sample_c_lz r4.x, r8.zwzz, t1.xxxx, s1, v9.z
  94: mul r4.x, r4.x, r11.y
  95: mad r3.w, r11.x, r3.w, r4.x
  96: sample_c_lz r4.x, r4.zwzz, t1.xxxx, s1, v9.z
  97: mad r3.w, r11.z, r4.x, r3.w
  98: sample_c_lz r4.x, r7.xyxx, t1.xxxx, s1, v9.z
  99: mad r3.w, r11.w, r4.x, r3.w
 100: sample_c_lz r4.x, r9.xyxx, t1.xxxx, s1, v9.z
 101: mad r3.w, r12.x, r4.x, r3.w
 102: sample_c_lz r4.x, r9.zwzz, t1.xxxx, s1, v9.z
 103: mad r3.w, r12.y, r4.x, r3.w
 104: sample_c_lz r4.x, r7.zwzz, t1.xxxx, s1, v9.z
 105: mad r3.w, r12.z, r4.x, r3.w
 106: sample_c_lz r4.x, r6.xyxx, t1.xxxx, s1, v9.z
 107: mad r3.w, r12.w, r4.x, r3.w
 108: sample_c_lz r4.x, r6.zwzz, t1.xxxx, s1, v9.z
 109: mad r2.w, r2.w, r4.x, r3.w
 110: add r3.w, -cb3[29].x, l(1.000000)
 111: mad r2.w, r2.w, cb3[29].x, r3.w
 112: ge r3.w, l(0.000000), v9.z
 113: ge r4.x, v9.z, l(1.000000)
 114: or r3.w, r3.w, r4.x
 115: movc r2.w, r3.w, l(1.000000), r2.w
 116: dp3 r3.w, -r2.xyzx, r1.xyzx
 117: add r3.w, r3.w, r3.w
 118: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 119: dp3_sat r3.w, r1.xyzx, r2.xyzx
 120: add r3.w, -r3.w, l(1.000000)
 121: mul r3.w, r3.w, r3.w
 122: mul r3.w, r3.w, r3.w
 123: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 124: add r4.w, r4.w, l(-1.000000)
 125: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 126: max r4.w, r4.w, l(0.000000)
 127: log r4.w, r4.w
 128: mul r4.w, r4.w, cb2[14].y
 129: exp r4.w, r4.w
 130: mul r4.w, r4.w, cb2[14].x
 131: mul r4.xyz, r4.xyzx, r4.wwww
 132: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 133: mad r3.w, r3.w, l(0.500000), l(0.040000)
 134: mul r4.xyz, r3.wwww, r4.xyzx
 135: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 136: mul r1.w, r1.w, r2.w
 137: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 138: mul r1.w, r1.w, r2.w
 139: mul r5.xyz, r1.wwww, cb0[4].xyzx
 140: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 141: dp3 r0.x, r6.xyzx, r6.xyzx
 142: max r0.x, r0.x, l(0.000000)
 143: rsq r0.x, r0.x
 144: mul r6.xyz, r0.xxxx, r6.xyzx
 145: dp3_sat r0.x, r1.xyzx, r6.xyzx
 146: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 147: mul r0.x, r0.x, r0.x
 148: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 149: mul r1.w, r1.w, r1.w
 150: mul r0.x, r0.x, r0.x
 151: max r1.w, r1.w, l(0.100000)
 152: mul r0.x, r0.x, r1.w
 153: mul r0.x, r0.x, l(3.000000)
 154: div r0.x, l(0.062500), r0.x
 155: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 156: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 157: min r0.x, cb0[5].x, cb2[10].y
 158: ftoi r0.x, r0.x
 159: mov r5.xyz, r4.xyzx
 160: mov r1.w, l(0)
 161: loop 
 162:   uge r2.w, r1.w, r0.x
 163:   breakc_nz r2.w
 164:   and r2.w, r1.w, l(3)
 165:   ushr r3.w, r1.w, l(2)
 166:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 167:   ftoi r2.w, r2.w
 168:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 169:   dp3 r3.w, r6.xyzx, r6.xyzx
 170:   max r3.w, r3.w, l(0.000061)
 171:   rsq r4.w, r3.w
 172:   mul r7.xyz, r4.wwww, r6.xyzx
 173:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 174:   mul r3.w, r3.w, cb1[r2.w + 512].x
 175:   mad r3.w, -r3.w, r3.w, l(1.000000)
 176:   max r3.w, r3.w, l(0.000000)
 177:   mul r3.w, r3.w, r3.w
 178:   mul r3.w, r3.w, r5.w
 179:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 180:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 181:   mul r5.w, r5.w, r5.w
 182:   mul r3.w, r3.w, r5.w
 183:   ftoi r5.w, cb1[r2.w + 1024].x
 184:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 185:   max r5.w, r5.w, cb1[r2.w + 1024].y
 186:   mul r3.w, r3.w, r5.w
 187:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 188:   mul r3.w, r3.w, r5.w
 189:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 190:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 191:   dp3 r2.w, r6.xyzx, r6.xyzx
 192:   max r2.w, r2.w, l(0.000000)
 193:   rsq r2.w, r2.w
 194:   mul r6.xyz, r2.wwww, r6.xyzx
 195:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 196:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 197:   mul r2.w, r2.w, r2.w
 198:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 199:   mul r3.w, r3.w, r3.w
 200:   mul r2.w, r2.w, r2.w
 201:   max r3.w, r3.w, l(0.100000)
 202:   mul r2.w, r2.w, r3.w
 203:   mul r2.w, r2.w, l(3.000000)
 204:   div r2.w, l(0.062500), r2.w
 205:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 206:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 207:   iadd r1.w, r1.w, l(1)
 208: endloop 
 209: add o0.xyz, r0.yzwy, r5.xyzx
 210: mov o0.w, l(0.300000)
 211: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 140 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: sample_c_lz r1.w, v9.xyxx, t1.xxxx, s1, v9.z
  45: add r2.w, -cb3[29].x, l(1.000000)
  46: mad r1.w, r1.w, cb3[29].x, r2.w
  47: ge r2.w, l(0.000000), v9.z
  48: ge r3.w, v9.z, l(1.000000)
  49: or r2.w, r2.w, r3.w
  50: movc r1.w, r2.w, l(1.000000), r1.w
  51: dp3 r2.w, -r2.xyzx, r1.xyzx
  52: add r2.w, r2.w, r2.w
  53: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  54: dp3_sat r2.w, r1.xyzx, r2.xyzx
  55: add r2.w, -r2.w, l(1.000000)
  56: mul r2.w, r2.w, r2.w
  57: mul r2.w, r2.w, r2.w
  58: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  59: add r3.w, r4.w, l(-1.000000)
  60: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  61: max r3.w, r3.w, l(0.000000)
  62: log r3.w, r3.w
  63: mul r3.w, r3.w, cb2[14].y
  64: exp r3.w, r3.w
  65: mul r3.w, r3.w, cb2[14].x
  66: mul r4.xyz, r4.xyzx, r3.wwww
  67: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  68: mad r2.w, r2.w, l(0.500000), l(0.040000)
  69: mul r4.xyz, r2.wwww, r4.xyzx
  70: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  71: mul r1.w, r1.w, cb2[10].z
  72: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  73: mul r1.w, r1.w, r2.w
  74: mul r5.xyz, r1.wwww, cb0[4].xyzx
  75: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  76: dp3 r0.x, r6.xyzx, r6.xyzx
  77: max r0.x, r0.x, l(0.000000)
  78: rsq r0.x, r0.x
  79: mul r6.xyz, r0.xxxx, r6.xyzx
  80: dp3_sat r0.x, r1.xyzx, r6.xyzx
  81: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  82: mul r0.x, r0.x, r0.x
  83: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  84: mul r1.w, r1.w, r1.w
  85: mul r0.x, r0.x, r0.x
  86: max r1.w, r1.w, l(0.100000)
  87: mul r0.x, r0.x, r1.w
  88: mul r0.x, r0.x, l(3.000000)
  89: div r0.x, l(0.062500), r0.x
  90: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  91: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  92: min r0.x, cb0[5].x, cb2[10].y
  93: ftoi r0.x, r0.x
  94: mov r5.xyz, r4.xyzx
  95: mov r1.w, l(0)
  96: loop 
  97:   uge r2.w, r1.w, r0.x
  98:   breakc_nz r2.w
  99:   and r2.w, r1.w, l(3)
 100:   ushr r3.w, r1.w, l(2)
 101:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 102:   ftoi r2.w, r2.w
 103:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 104:   dp3 r3.w, r6.xyzx, r6.xyzx
 105:   max r3.w, r3.w, l(0.000061)
 106:   rsq r4.w, r3.w
 107:   mul r7.xyz, r4.wwww, r6.xyzx
 108:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 109:   mul r3.w, r3.w, cb1[r2.w + 512].x
 110:   mad r3.w, -r3.w, r3.w, l(1.000000)
 111:   max r3.w, r3.w, l(0.000000)
 112:   mul r3.w, r3.w, r3.w
 113:   mul r3.w, r3.w, r5.w
 114:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 115:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 116:   mul r5.w, r5.w, r5.w
 117:   mul r3.w, r3.w, r5.w
 118:   ishl r5.w, r2.w, l(2)
 119:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 120:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 121:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 122:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 123:   div r8.xyz, r8.xyzx, r8.wwww
 124:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 125:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 126:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 127:   ge r6.w, l(0.000000), r8.z
 128:   ge r7.w, r8.z, l(1.000000)
 129:   or r6.w, r6.w, r7.w
 130:   movc r5.w, r6.w, l(1.000000), r5.w
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: sample_c_lz r2.w, v9.xyxx, t1.xxxx, s1, v9.z
  46: add r3.w, -cb3[29].x, l(1.000000)
  47: mad r2.w, r2.w, cb3[29].x, r3.w
  48: ge r3.w, l(0.000000), v9.z
  49: ge r4.x, v9.z, l(1.000000)
  50: or r3.w, r3.w, r4.x
  51: movc r2.w, r3.w, l(1.000000), r2.w
  52: dp3 r3.w, -r2.xyzx, r1.xyzx
  53: add r3.w, r3.w, r3.w
  54: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  55: dp3_sat r3.w, r1.xyzx, r2.xyzx
  56: add r3.w, -r3.w, l(1.000000)
  57: mul r3.w, r3.w, r3.w
  58: mul r3.w, r3.w, r3.w
  59: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
  60: add r4.w, r4.w, l(-1.000000)
  61: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  62: max r4.w, r4.w, l(0.000000)
  63: log r4.w, r4.w
  64: mul r4.w, r4.w, cb2[14].y
  65: exp r4.w, r4.w
  66: mul r4.w, r4.w, cb2[14].x
  67: mul r4.xyz, r4.xyzx, r4.wwww
  68: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  69: mad r3.w, r3.w, l(0.500000), l(0.040000)
  70: mul r4.xyz, r3.wwww, r4.xyzx
  71: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
  72: mul r1.w, r1.w, r2.w
  73: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  74: mul r1.w, r1.w, r2.w
  75: mul r5.xyz, r1.wwww, cb0[4].xyzx
  76: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  77: dp3 r0.x, r6.xyzx, r6.xyzx
  78: max r0.x, r0.x, l(0.000000)
  79: rsq r0.x, r0.x
  80: mul r6.xyz, r0.xxxx, r6.xyzx
  81: dp3_sat r0.x, r1.xyzx, r6.xyzx
  82: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  83: mul r0.x, r0.x, r0.x
  84: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  85: mul r1.w, r1.w, r1.w
  86: mul r0.x, r0.x, r0.x
  87: max r1.w, r1.w, l(0.100000)
  88: mul r0.x, r0.x, r1.w
  89: mul r0.x, r0.x, l(3.000000)
  90: div r0.x, l(0.062500), r0.x
  91: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
  92: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
  93: min r0.x, cb0[5].x, cb2[10].y
  94: ftoi r0.x, r0.x
  95: mov r5.xyz, r4.xyzx
  96: mov r1.w, l(0)
  97: loop 
  98:   uge r2.w, r1.w, r0.x
  99:   breakc_nz r2.w
 100:   and r2.w, r1.w, l(3)
 101:   ushr r3.w, r1.w, l(2)
 102:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 103:   ftoi r2.w, r2.w
 104:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 105:   dp3 r3.w, r6.xyzx, r6.xyzx
 106:   max r3.w, r3.w, l(0.000061)
 107:   rsq r4.w, r3.w
 108:   mul r7.xyz, r4.wwww, r6.xyzx
 109:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 110:   mul r3.w, r3.w, cb1[r2.w + 512].x
 111:   mad r3.w, -r3.w, r3.w, l(1.000000)
 112:   max r3.w, r3.w, l(0.000000)
 113:   mul r3.w, r3.w, r3.w
 114:   mul r3.w, r3.w, r5.w
 115:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 116:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 117:   mul r5.w, r5.w, r5.w
 118:   mul r3.w, r3.w, r5.w
 119:   ishl r5.w, r2.w, l(2)
 120:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 121:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 122:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 123:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 124:   div r8.xyz, r8.xyzx, r8.wwww
 125:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 126:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 127:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 128:   ge r6.w, l(0.000000), r8.z
 129:   ge r7.w, r8.z, l(1.000000)
 130:   or r6.w, r6.w, r7.w
 131:   movc r5.w, r6.w, l(1.000000), r5.w
 132:   ftoi r6.w, cb1[r2.w + 1024].x
 133:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 134:   max r6.w, r6.w, cb1[r2.w + 1024].y
 135:   mul r3.w, r3.w, r6.w
 136:   mul r3.w, r5.w, r3.w
 137:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 138:   mul r3.w, r3.w, r5.w
 139:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 140:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 141:   dp3 r2.w, r6.xyzx, r6.xyzx
 142:   max r2.w, r2.w, l(0.000000)
 143:   rsq r2.w, r2.w
 144:   mul r6.xyz, r2.wwww, r6.xyzx
 145:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 146:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 147:   mul r2.w, r2.w, r2.w
 148:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 149:   mul r3.w, r3.w, r3.w
 150:   mul r2.w, r2.w, r2.w
 151:   max r3.w, r3.w, l(0.100000)
 152:   mul r2.w, r2.w, r3.w
 153:   mul r2.w, r2.w, l(3.000000)
 154:   div r2.w, l(0.062500), r2.w
 155:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 156:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 157:   iadd r1.w, r1.w, l(1)
 158: endloop 
 159: add o0.xyz, r0.yzwy, r5.xyzx
 160: mov o0.w, l(0.300000)
 161: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 228 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  45: round_ni r4.xy, r4.xyxx
  46: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  47: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  48: mul r6.xyzw, r5.xxzz, r5.xxzz
  49: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  50: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  51: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  52: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  54: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  56: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  57: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  58: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  59: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  63: mov r8.z, r7.x
  64: mov r8.w, r4.z
  65: mov r6.z, r9.x
  66: mov r6.w, r5.x
  67: add r10.xyzw, r6.zwxz, r8.zwxz
  68: mov r7.z, r8.y
  69: mov r7.w, r4.w
  70: mov r9.z, r6.y
  71: mov r9.w, r5.z
  72: add r5.xyz, r7.zywz, r9.zywz
  73: div r6.xyz, r6.xzwx, r10.zwyz
  74: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  75: div r7.xyz, r9.zywz, r5.xyzx
  76: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  77: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  78: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  79: mov r6.w, r7.x
  80: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  81: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  82: mov r7.w, r6.y
  83: mov r6.yw, r7.yyyz
  84: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  85: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  86: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  87: mul r11.xyzw, r5.xxxy, r10.zwyz
  88: mul r12.xyzw, r5.yyzz, r10.xyzw
  89: mul r1.w, r5.z, r10.y
  90: sample_c_lz r2.w, r8.xyxx, t1.xxxx, s1, v9.z
  91: sample_c_lz r3.w, r8.zwzz, t1.xxxx, s1, v9.z
  92: mul r3.w, r3.w, r11.y
  93: mad r2.w, r11.x, r2.w, r3.w
  94: sample_c_lz r3.w, r4.zwzz, t1.xxxx, s1, v9.z
  95: mad r2.w, r11.z, r3.w, r2.w
  96: sample_c_lz r3.w, r7.xyxx, t1.xxxx, s1, v9.z
  97: mad r2.w, r11.w, r3.w, r2.w
  98: sample_c_lz r3.w, r9.xyxx, t1.xxxx, s1, v9.z
  99: mad r2.w, r12.x, r3.w, r2.w
 100: sample_c_lz r3.w, r9.zwzz, t1.xxxx, s1, v9.z
 101: mad r2.w, r12.y, r3.w, r2.w
 102: sample_c_lz r3.w, r7.zwzz, t1.xxxx, s1, v9.z
 103: mad r2.w, r12.z, r3.w, r2.w
 104: sample_c_lz r3.w, r6.xyxx, t1.xxxx, s1, v9.z
 105: mad r2.w, r12.w, r3.w, r2.w
 106: sample_c_lz r3.w, r6.zwzz, t1.xxxx, s1, v9.z
 107: mad r1.w, r1.w, r3.w, r2.w
 108: add r2.w, -cb3[29].x, l(1.000000)
 109: mad r1.w, r1.w, cb3[29].x, r2.w
 110: ge r2.w, l(0.000000), v9.z
 111: ge r3.w, v9.z, l(1.000000)
 112: or r2.w, r2.w, r3.w
 113: movc r1.w, r2.w, l(1.000000), r1.w
 114: dp3 r2.w, -r2.xyzx, r1.xyzx
 115: add r2.w, r2.w, r2.w
 116: mad r4.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 117: dp3_sat r2.w, r1.xyzx, r2.xyzx
 118: add r2.w, -r2.w, l(1.000000)
 119: mul r2.w, r2.w, r2.w
 120: mul r2.w, r2.w, r2.w
 121: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 122: add r3.w, r4.w, l(-1.000000)
 123: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 124: max r3.w, r3.w, l(0.000000)
 125: log r3.w, r3.w
 126: mul r3.w, r3.w, cb2[14].y
 127: exp r3.w, r3.w
 128: mul r3.w, r3.w, cb2[14].x
 129: mul r4.xyz, r4.xyzx, r3.wwww
 130: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 131: mad r2.w, r2.w, l(0.500000), l(0.040000)
 132: mul r4.xyz, r2.wwww, r4.xyzx
 133: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 134: mul r1.w, r1.w, cb2[10].z
 135: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 136: mul r1.w, r1.w, r2.w
 137: mul r5.xyz, r1.wwww, cb0[4].xyzx
 138: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 139: dp3 r0.x, r6.xyzx, r6.xyzx
 140: max r0.x, r0.x, l(0.000000)
 141: rsq r0.x, r0.x
 142: mul r6.xyz, r0.xxxx, r6.xyzx
 143: dp3_sat r0.x, r1.xyzx, r6.xyzx
 144: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 145: mul r0.x, r0.x, r0.x
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r1.w, r1.w, r1.w
 148: mul r0.x, r0.x, r0.x
 149: max r1.w, r1.w, l(0.100000)
 150: mul r0.x, r0.x, r1.w
 151: mul r0.x, r0.x, l(3.000000)
 152: div r0.x, l(0.062500), r0.x
 153: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 154: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 155: min r0.x, cb0[5].x, cb2[10].y
 156: ftoi r0.x, r0.x
 157: mov r5.xyz, r4.xyzx
 158: mov r1.w, l(0)
 159: loop 
 160:   uge r2.w, r1.w, r0.x
 161:   breakc_nz r2.w
 162:   and r2.w, r1.w, l(3)
 163:   ushr r3.w, r1.w, l(2)
 164:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 165:   ftoi r2.w, r2.w
 166:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 167:   dp3 r3.w, r6.xyzx, r6.xyzx
 168:   max r3.w, r3.w, l(0.000061)
 169:   rsq r4.w, r3.w
 170:   mul r7.xyz, r4.wwww, r6.xyzx
 171:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 172:   mul r3.w, r3.w, cb1[r2.w + 512].x
 173:   mad r3.w, -r3.w, r3.w, l(1.000000)
 174:   max r3.w, r3.w, l(0.000000)
 175:   mul r3.w, r3.w, r3.w
 176:   mul r3.w, r3.w, r5.w
 177:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 178:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 179:   mul r5.w, r5.w, r5.w
 180:   mul r3.w, r3.w, r5.w
 181:   ishl r5.w, r2.w, l(2)
 182:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 183:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 184:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 185:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 186:   div r8.xyz, r8.xyzx, r8.wwww
 187:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 188:   round_ni r9.xy, r9.xyxx
 189:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 190:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 191:   mul r11.xyzw, r10.xxzz, r10.xxzz
 192:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 193:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 194:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 195:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 196:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 197:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 198:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 199:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 200:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 201:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 202:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 203:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 204:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 205:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 206:   mov r12.z, r11.x
 207:   mov r12.w, r8.x
 208:   mov r13.z, r14.x
 209:   mov r13.w, r9.z
 210:   add r10.xyzw, r12.zwxz, r13.zwxz
 211:   mov r11.z, r12.y
 212:   mov r11.w, r8.y
 213:   mov r14.z, r13.y
 214:   mov r14.w, r9.w
 215:   add r8.xyw, r11.zyzw, r14.zyzw
 216:   div r11.xyz, r13.xzwx, r10.zwyz
 217:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 218:   div r12.xyz, r14.zywz, r8.xywx
 219:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 220:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 221:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 222:   mov r11.w, r12.x
 223:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 224:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 225:   mov r12.w, r11.y
 226:   mov r11.yw, r12.yyyz
 227:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 228:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 229:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 230:   mul r15.xyzw, r8.xxxy, r10.zwyz
 231:   mul r16.xyzw, r8.yyww, r10.xyzw
 232:   mul r5.w, r8.w, r10.y
 233:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 234:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 235:   mul r7.w, r7.w, r15.y
 236:   mad r6.w, r15.x, r6.w, r7.w
 237:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 238:   mad r6.w, r15.z, r7.w, r6.w
 239:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 240:   mad r6.w, r15.w, r7.w, r6.w
 241:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 242:   mad r6.w, r16.x, r7.w, r6.w
 243:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 244:   mad r6.w, r16.y, r7.w, r6.w
 245:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 246:   mad r6.w, r16.z, r7.w, r6.w
 247:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 248:   mad r6.w, r16.w, r7.w, r6.w
 249:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 250:   mad r5.w, r5.w, r7.w, r6.w
 251:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 252:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 253:   ge r6.w, l(0.000000), r8.z
 254:   ge r7.w, r8.z, l(1.000000)
 255:   or r6.w, r6.w, r7.w
 256:   movc r5.w, r6.w, l(1.000000), r5.w
 257:   mul r3.w, r3.w, r5.w
 258:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 259:   mul r3.w, r3.w, r5.w
 260:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 261:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 262:   dp3 r2.w, r6.xyzx, r6.xyzx
 263:   max r2.w, r2.w, l(0.000000)
 264:   rsq r2.w, r2.w
 265:   mul r6.xyz, r2.wwww, r6.xyzx
 266:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 267:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 268:   mul r2.w, r2.w, r2.w
 269:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 270:   mul r3.w, r3.w, r3.w
 271:   mul r2.w, r2.w, r2.w
 272:   max r3.w, r3.w, l(0.100000)
 273:   mul r2.w, r2.w, r3.w
 274:   mul r2.w, r2.w, l(3.000000)
 275:   div r2.w, l(0.062500), r2.w
 276:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 277:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 278:   iadd r1.w, r1.w, l(1)
 279: endloop 
 280: add o0.xyz, r0.yzwy, r5.xyzx
 281: mov o0.w, l(0.300000)
 282: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 232 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: mul r3.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  44: mul r1.w, cb2[10].z, cb2[13].x
  45: mad r4.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  46: round_ni r4.xy, r4.xyxx
  47: mad r4.zw, v9.xxxy, cb3[30].zzzw, -r4.xxxy
  48: add r5.xyzw, r4.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  49: mul r6.xyzw, r5.xxzz, r5.xxzz
  50: mul r5.xz, r6.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  51: mad r6.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r4.zwzz
  52: add r6.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  53: min r7.xy, r4.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mad r7.xy, -r7.xyxx, r7.xyxx, r6.zwzz
  55: max r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mad r4.zw, -r4.zzzw, r4.zzzw, r5.yyyw
  57: add r7.xy, r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  58: add r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  59: mul r8.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  60: mul r6.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  61: mul r7.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  62: mul r9.xy, r4.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  63: mul r4.zw, r5.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  64: mov r8.z, r7.x
  65: mov r8.w, r4.z
  66: mov r6.z, r9.x
  67: mov r6.w, r5.x
  68: add r10.xyzw, r6.zwxz, r8.zwxz
  69: mov r7.z, r8.y
  70: mov r7.w, r4.w
  71: mov r9.z, r6.y
  72: mov r9.w, r5.z
  73: add r5.xyz, r7.zywz, r9.zywz
  74: div r6.xyz, r6.xzwx, r10.zwyz
  75: add r6.xyz, r6.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  76: div r7.xyz, r9.zywz, r5.xyzx
  77: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  78: mul r6.xyz, r6.yxzy, cb3[30].xxxx
  79: mul r7.xyz, r7.xyzx, cb3[30].yyyy
  80: mov r6.w, r7.x
  81: mad r8.xyzw, r4.xyxy, cb3[30].xyxy, r6.ywxw
  82: mad r4.zw, r4.xxxy, cb3[30].xxxy, r6.zzzw
  83: mov r7.w, r6.y
  84: mov r6.yw, r7.yyyz
  85: mad r9.xyzw, r4.xyxy, cb3[30].xyxy, r6.xyzy
  86: mad r7.xyzw, r4.xyxy, cb3[30].xyxy, r7.wywz
  87: mad r6.xyzw, r4.xyxy, cb3[30].xyxy, r6.xwzw
  88: mul r11.xyzw, r5.xxxy, r10.zwyz
  89: mul r12.xyzw, r5.yyzz, r10.xyzw
  90: mul r2.w, r5.z, r10.y
  91: sample_c_lz r3.w, r8.xyxx, t1.xxxx, s1, v9.z
  92: sample_c_lz r4.x, r8.zwzz, t1.xxxx, s1, v9.z
  93: mul r4.x, r4.x, r11.y
  94: mad r3.w, r11.x, r3.w, r4.x
  95: sample_c_lz r4.x, r4.zwzz, t1.xxxx, s1, v9.z
  96: mad r3.w, r11.z, r4.x, r3.w
  97: sample_c_lz r4.x, r7.xyxx, t1.xxxx, s1, v9.z
  98: mad r3.w, r11.w, r4.x, r3.w
  99: sample_c_lz r4.x, r9.xyxx, t1.xxxx, s1, v9.z
 100: mad r3.w, r12.x, r4.x, r3.w
 101: sample_c_lz r4.x, r9.zwzz, t1.xxxx, s1, v9.z
 102: mad r3.w, r12.y, r4.x, r3.w
 103: sample_c_lz r4.x, r7.zwzz, t1.xxxx, s1, v9.z
 104: mad r3.w, r12.z, r4.x, r3.w
 105: sample_c_lz r4.x, r6.xyxx, t1.xxxx, s1, v9.z
 106: mad r3.w, r12.w, r4.x, r3.w
 107: sample_c_lz r4.x, r6.zwzz, t1.xxxx, s1, v9.z
 108: mad r2.w, r2.w, r4.x, r3.w
 109: add r3.w, -cb3[29].x, l(1.000000)
 110: mad r2.w, r2.w, cb3[29].x, r3.w
 111: ge r3.w, l(0.000000), v9.z
 112: ge r4.x, v9.z, l(1.000000)
 113: or r3.w, r3.w, r4.x
 114: movc r2.w, r3.w, l(1.000000), r2.w
 115: dp3 r3.w, -r2.xyzx, r1.xyzx
 116: add r3.w, r3.w, r3.w
 117: mad r4.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 118: dp3_sat r3.w, r1.xyzx, r2.xyzx
 119: add r3.w, -r3.w, l(1.000000)
 120: mul r3.w, r3.w, r3.w
 121: mul r3.w, r3.w, r3.w
 122: sample_l r4.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 123: add r4.w, r4.w, l(-1.000000)
 124: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 125: max r4.w, r4.w, l(0.000000)
 126: log r4.w, r4.w
 127: mul r4.w, r4.w, cb2[14].y
 128: exp r4.w, r4.w
 129: mul r4.w, r4.w, cb2[14].x
 130: mul r4.xyz, r4.xyzx, r4.wwww
 131: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 132: mad r3.w, r3.w, l(0.500000), l(0.040000)
 133: mul r4.xyz, r3.wwww, r4.xyzx
 134: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 135: mul r1.w, r1.w, r2.w
 136: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 137: mul r1.w, r1.w, r2.w
 138: mul r5.xyz, r1.wwww, cb0[4].xyzx
 139: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 140: dp3 r0.x, r6.xyzx, r6.xyzx
 141: max r0.x, r0.x, l(0.000000)
 142: rsq r0.x, r0.x
 143: mul r6.xyz, r0.xxxx, r6.xyzx
 144: dp3_sat r0.x, r1.xyzx, r6.xyzx
 145: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 146: mul r0.x, r0.x, r0.x
 147: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 148: mul r1.w, r1.w, r1.w
 149: mul r0.x, r0.x, r0.x
 150: max r1.w, r1.w, l(0.100000)
 151: mul r0.x, r0.x, r1.w
 152: mul r0.x, r0.x, l(3.000000)
 153: div r0.x, l(0.062500), r0.x
 154: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 155: mad r4.xyz, r6.xyzx, r5.xyzx, r4.xyzx
 156: min r0.x, cb0[5].x, cb2[10].y
 157: ftoi r0.x, r0.x
 158: mov r5.xyz, r4.xyzx
 159: mov r1.w, l(0)
 160: loop 
 161:   uge r2.w, r1.w, r0.x
 162:   breakc_nz r2.w
 163:   and r2.w, r1.w, l(3)
 164:   ushr r3.w, r1.w, l(2)
 165:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 166:   ftoi r2.w, r2.w
 167:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 168:   dp3 r3.w, r6.xyzx, r6.xyzx
 169:   max r3.w, r3.w, l(0.000061)
 170:   rsq r4.w, r3.w
 171:   mul r7.xyz, r4.wwww, r6.xyzx
 172:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 173:   mul r3.w, r3.w, cb1[r2.w + 512].x
 174:   mad r3.w, -r3.w, r3.w, l(1.000000)
 175:   max r3.w, r3.w, l(0.000000)
 176:   mul r3.w, r3.w, r3.w
 177:   mul r3.w, r3.w, r5.w
 178:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 179:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 180:   mul r5.w, r5.w, r5.w
 181:   mul r3.w, r3.w, r5.w
 182:   ishl r5.w, r2.w, l(2)
 183:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 184:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 185:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 186:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 187:   div r8.xyz, r8.xyzx, r8.wwww
 188:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 189:   round_ni r9.xy, r9.xyxx
 190:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 191:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 192:   mul r11.xyzw, r10.xxzz, r10.xxzz
 193:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 194:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 195:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 196:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 197:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 198:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 199:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 200:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 201:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 202:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 203:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 204:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 205:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 206:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 207:   mov r12.z, r11.x
 208:   mov r12.w, r8.x
 209:   mov r13.z, r14.x
 210:   mov r13.w, r9.z
 211:   add r10.xyzw, r12.zwxz, r13.zwxz
 212:   mov r11.z, r12.y
 213:   mov r11.w, r8.y
 214:   mov r14.z, r13.y
 215:   mov r14.w, r9.w
 216:   add r8.xyw, r11.zyzw, r14.zyzw
 217:   div r11.xyz, r13.xzwx, r10.zwyz
 218:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 219:   div r12.xyz, r14.zywz, r8.xywx
 220:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 221:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 222:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 223:   mov r11.w, r12.x
 224:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 225:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 226:   mov r12.w, r11.y
 227:   mov r11.yw, r12.yyyz
 228:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 229:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 230:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 231:   mul r15.xyzw, r8.xxxy, r10.zwyz
 232:   mul r16.xyzw, r8.yyww, r10.xyzw
 233:   mul r5.w, r8.w, r10.y
 234:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 235:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 236:   mul r7.w, r7.w, r15.y
 237:   mad r6.w, r15.x, r6.w, r7.w
 238:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 239:   mad r6.w, r15.z, r7.w, r6.w
 240:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 241:   mad r6.w, r15.w, r7.w, r6.w
 242:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 243:   mad r6.w, r16.x, r7.w, r6.w
 244:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 245:   mad r6.w, r16.y, r7.w, r6.w
 246:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 247:   mad r6.w, r16.z, r7.w, r6.w
 248:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 249:   mad r6.w, r16.w, r7.w, r6.w
 250:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 251:   mad r5.w, r5.w, r7.w, r6.w
 252:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 253:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 254:   ge r6.w, l(0.000000), r8.z
 255:   ge r7.w, r8.z, l(1.000000)
 256:   or r6.w, r6.w, r7.w
 257:   movc r5.w, r6.w, l(1.000000), r5.w
 258:   ftoi r6.w, cb1[r2.w + 1024].x
 259:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 260:   max r6.w, r6.w, cb1[r2.w + 1024].y
 261:   mul r3.w, r3.w, r6.w
 262:   mul r3.w, r5.w, r3.w
 263:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 264:   mul r3.w, r3.w, r5.w
 265:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 266:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 267:   dp3 r2.w, r6.xyzx, r6.xyzx
 268:   max r2.w, r2.w, l(0.000000)
 269:   rsq r2.w, r2.w
 270:   mul r6.xyz, r2.wwww, r6.xyzx
 271:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 272:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 273:   mul r2.w, r2.w, r2.w
 274:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 275:   mul r3.w, r3.w, r3.w
 276:   mul r2.w, r2.w, r2.w
 277:   max r3.w, r3.w, l(0.100000)
 278:   mul r2.w, r2.w, r3.w
 279:   mul r2.w, r2.w, l(3.000000)
 280:   div r2.w, l(0.062500), r2.w
 281:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 282:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 283:   iadd r1.w, r1.w, l(1)
 284: endloop 
 285: add o0.xyz, r0.yzwy, r5.xyzx
 286: mov o0.w, l(0.300000)
 287: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r2.xyz, r0.wwww, cb0[4].xyzx
  91: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  92: add o0.xyz, r0.xyzx, r1.xyzx
  93: mov o0.w, l(0.300000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r2.xyz, r0.wwww, cb0[4].xyzx
  92: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 130 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: add o0.xyz, r1.xyzx, r0.xyzx
 153: mov o0.w, l(0.300000)
 154: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r0.w, r0.w, cb1[10].z
  89: mul r0.w, r2.x, r0.w
  90: mul r2.xyz, r0.wwww, cb0[4].xyzx
  91: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  92: add o0.xyz, r0.xyzx, r1.xyzx
  93: mov o0.w, l(0.300000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: sample_c_lz r0.w, v9.xyxx, t1.xxxx, s1, v9.z
  82: add r1.w, -cb2[29].x, l(1.000000)
  83: mad r0.w, r0.w, cb2[29].x, r1.w
  84: ge r1.w, l(0.000000), v9.z
  85: ge r2.y, v9.z, l(1.000000)
  86: or r1.w, r1.w, r2.y
  87: movc r0.w, r1.w, l(1.000000), r0.w
  88: mul r1.w, cb1[10].z, cb1[13].x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r2.x, r0.w
  91: mul r2.xyz, r0.wwww, cb0[4].xyzx
  92: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  93: add o0.xyz, r0.xyzx, r1.xyzx
  94: mov o0.w, l(0.300000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 130 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.x, r0.x, cb1[10].z
  69: dp3 r0.y, v2.xyzx, v2.xyzx
  70: rsq r0.z, r0.y
  71: sqrt r0.y, r0.y
  72: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  73: mul r1.xyz, r0.yyyy, v2.xyzx
  74: mul r0.yzw, r0.zzzz, v2.xxyz
  75: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  76: mul r0.x, r0.x, r1.w
  77: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  78: dp3 r0.x, v5.xyzx, v5.xyzx
  79: max r1.w, r0.x, l(0.000000)
  80: rsq r0.x, r0.x
  81: mul r3.xyz, r0.xxxx, v5.xyzx
  82: rsq r0.x, r1.w
  83: mul r4.xyz, r0.xxxx, v5.xyzx
  84: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  85: dp3 r0.x, -r4.xyzx, r0.yzwy
  86: add r0.x, r0.x, r0.x
  87: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  88: dp3_sat r0.x, r0.yzwy, r4.xyzx
  89: add r0.x, -r0.x, l(1.000000)
  90: mul r0.x, r0.x, r0.x
  91: mul r0.x, r0.x, r0.x
  92: mad r0.x, r0.x, l(0.500000), l(0.040000)
  93: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r1.w, r4.w, l(-1.000000)
  95: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  96: max r1.w, r1.w, l(0.000000)
  97: log r1.w, r1.w
  98: mul r1.w, r1.w, cb1[14].y
  99: exp r1.w, r1.w
 100: mul r1.w, r1.w, cb1[14].x
 101: mul r4.xyz, r4.xyzx, r1.wwww
 102: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mul r4.xyz, r0.xxxx, r4.xyzx
 104: dp3 r0.x, r1.xyzx, r1.xyzx
 105: rsq r0.x, r0.x
 106: mul r1.xyz, r0.xxxx, r1.xyzx
 107: dp3_sat r0.x, r1.xyzx, r3.xyzx
 108: add r0.x, -r0.x, l(1.000000)
 109: log r0.x, r0.x
 110: mul r0.x, r0.x, cb3[1].x
 111: exp r0.x, r0.x
 112: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 113: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 114: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 115: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 116: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 117: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 118: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 119: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 120: mul r3.xyz, v1.yyyy, cb0[62].xywx
 121: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 122: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 123: add r3.xyz, r3.xyzx, cb0[64].xywx
 124: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 125: mul r6.w, r6.y, cb0[12].x
 126: add r3.xy, r6.zzzz, r6.xwxx
 127: div r3.xy, r3.xyxx, r3.zzzz
 128: mul r0.x, cb0[10].x, cb3[4].x
 129: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 130: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 131: mul r3.zw, r3.xxxy, r6.xxxy
 132: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 133: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 134: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 135: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 136: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 137: dp3 r0.x, r5.xyzx, r5.xyzx
 138: max r0.x, r0.x, l(0.000000)
 139: rsq r0.x, r0.x
 140: mul r5.xyz, r0.xxxx, r5.xyzx
 141: dp3_sat r0.x, r0.yzwy, r5.xyzx
 142: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 143: mul r0.xy, r0.xyxx, r0.xyxx
 144: max r0.y, r0.y, l(0.100000)
 145: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 146: mul r0.x, r0.x, r0.x
 147: mul r0.x, r0.y, r0.x
 148: mul r0.x, r0.x, l(3.000000)
 149: div r0.x, l(0.062500), r0.x
 150: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 151: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 152: add o0.xyz, r1.xyzx, r0.xyzx
 153: mov o0.w, l(0.300000)
 154: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
  20: dp3 r0.w, r2.xyzx, r2.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r2.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  27: mov o6.xy, l(0,0,0,0)
  28: mul r0.w, r1.y, r1.y
  29: mad r0.w, r1.x, r1.x, -r0.w
  30: mul r2.xyzw, r1.yzzx, r1.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r2.xyz, cb1[23].xyzx, r0.wwww, r3.xyzx
  35: mov r1.w, l(1.000000)
  36: dp4 r3.x, cb1[17].xyzw, r1.xyzw
  37: dp4 r3.y, cb1[18].xyzw, r1.xyzw
  38: dp4 r3.z, cb1[19].xyzw, r1.xyzw
  39: add r1.xyz, r2.xyzx, r3.xyzx
  40: max o7.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  43: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  44: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  45: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 131 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t1.xxxx, s1, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t1.xxxx, s1, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t1.xxxx, s1, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t1.xxxx, s1, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t1.xxxx, s1, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t1.xxxx, s1, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t1.xxxx, s1, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t1.xxxx, s1, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t1.xxxx, s1, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 138: dp3 r0.x, r5.xyzx, r5.xyzx
 139: max r0.x, r0.x, l(0.000000)
 140: rsq r0.x, r0.x
 141: mul r5.xyz, r0.xxxx, r5.xyzx
 142: dp3_sat r0.x, r0.yzwy, r5.xyzx
 143: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 144: mul r0.xy, r0.xyxx, r0.xyxx
 145: max r0.y, r0.y, l(0.100000)
 146: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 147: mul r0.x, r0.x, r0.x
 148: mul r0.x, r0.y, r0.x
 149: mul r0.x, r0.x, l(3.000000)
 150: div r0.x, l(0.062500), r0.x
 151: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 152: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 153: add o0.xyz, r1.xyzx, r0.xyzx
 154: mov o0.w, l(0.300000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r4.xyz, r0.wwww, cb0[4].xyzx
 113: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 114: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 115: add o0.xyz, r0.xyzx, r1.xyzx
 116: mov o0.w, l(0.300000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r1.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  81: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  82: dp3 r4.x, r4.xyzx, r4.xyzx
  83: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  84: dp3 r4.y, r5.xyzx, r5.xyzx
  85: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  86: dp3 r4.z, r5.xyzx, r5.xyzx
  87: add r5.xyz, v1.xyzx, -cb2[23].xyzx
  88: dp3 r4.w, r5.xyzx, r5.xyzx
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r5.xyz, r5.xyzx, r4.yzwy
  93: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
  99: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 100: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 101: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 102: ge r0.w, l(0.000000), r4.z
 103: ge r1.w, r4.z, l(1.000000)
 104: sample_c_lz r3.w, r4.xyxx, t1.xxxx, s1, r4.z
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r3.w, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r4.xyz, r0.wwww, cb0[4].xyzx
 113: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 114: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 115: add o0.xyz, r0.xyzx, r1.xyzx
 116: mov o0.w, l(0.300000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  63:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  64:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  65:   iadd r1.w, r1.w, l(1)
  66: endloop 
  67: mov o8.yzw, r2.xxyz
  68: mov o3.w, v2.w
  69: mov o4.xyzw, v3.xyzw
  70: mov o8.x, l(0)
  71: mov o9.xyzw, l(0,0,0,0)
  72: mov o1.xyz, r0.xyzx
  73: mov o2.xyz, r1.xyzx
  74: mov o6.xy, l(0,0,0,0)
  75: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 62 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[24], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mov r1.w, l(1.000000)
  24: dp4 r2.x, cb2[17].xyzw, r1.xyzw
  25: dp4 r2.y, cb2[18].xyzw, r1.xyzw
  26: dp4 r2.z, cb2[19].xyzw, r1.xyzw
  27: mul r3.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r4.x, cb2[20].xyzw, r3.xyzw
  29: dp4 r4.y, cb2[21].xyzw, r3.xyzw
  30: dp4 r4.z, cb2[22].xyzw, r3.xyzw
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mad r3.xyz, cb2[23].xyzx, r0.wwww, r4.xyzx
  34: add r2.xyz, r2.xyzx, r3.xyzx
  35: max o7.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: min r0.w, cb0[5].x, cb2[10].y
  37: ftoi r0.w, r0.w
  38: mov r2.xyz, l(0,0,0,0)
  39: mov r1.w, l(0)
  40: loop 
  41:   uge r2.w, r1.w, r0.w
  42:   breakc_nz r2.w
  43:   and r2.w, r1.w, l(3)
  44:   ushr r3.x, r1.w, l(2)
  45:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  46:   ftoi r2.w, r2.w
  47:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  48:   dp3 r3.w, r3.xyzx, r3.xyzx
  49:   max r3.w, r3.w, l(0.000061)
  50:   rsq r4.x, r3.w
  51:   mul r3.xyz, r3.xyzx, r4.xxxx
  52:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  53:   mul r3.w, r3.w, cb1[r2.w + 512].x
  54:   mad r3.w, -r3.w, r3.w, l(1.000000)
  55:   max r3.w, r3.w, l(0.000000)
  56:   mul r3.w, r3.w, r3.w
  57:   mul r3.w, r3.w, r4.x
  58:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  59:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  60:   mul r4.x, r4.x, r4.x
  61:   mul r3.w, r3.w, r4.x
  62:   ftoi r4.x, cb1[r2.w + 1024].x
  63:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  64:   max r4.x, r4.x, cb1[r2.w + 1024].y
  65:   mul r3.w, r3.w, r4.x
  66:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  67:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  68:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  69:   iadd r1.w, r1.w, l(1)
  70: endloop 
  71: mov o8.yzw, r2.xxyz
  72: mov o3.w, v2.w
  73: mov o4.xyzw, v3.xyzw
  74: mov o8.x, l(0)
  75: mov o9.xyzw, l(0,0,0,0)
  76: mov o1.xyz, r0.xyzx
  77: mov o2.xyz, r1.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r1.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 147 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: sample_c_lz r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  66: add r2.w, -cb3[29].x, l(1.000000)
  67: mad r1.w, r1.w, cb3[29].x, r2.w
  68: ge r2.w, l(0.000000), r3.z
  69: ge r3.x, r3.z, l(1.000000)
  70: or r2.w, r2.w, r3.x
  71: movc r1.w, r2.w, l(1.000000), r1.w
  72: dp3 r2.w, -r2.xyzx, r1.xyzx
  73: add r2.w, r2.w, r2.w
  74: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  75: dp3_sat r2.w, r1.xyzx, r2.xyzx
  76: add r2.w, -r2.w, l(1.000000)
  77: mul r2.w, r2.w, r2.w
  78: mul r2.w, r2.w, r2.w
  79: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  80: add r3.w, r3.w, l(-1.000000)
  81: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  82: max r3.w, r3.w, l(0.000000)
  83: log r3.w, r3.w
  84: mul r3.w, r3.w, cb2[14].y
  85: exp r3.w, r3.w
  86: mul r3.w, r3.w, cb2[14].x
  87: mul r3.xyz, r3.xyzx, r3.wwww
  88: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  89: mad r2.w, r2.w, l(0.500000), l(0.040000)
  90: mul r3.xyz, r2.wwww, r3.xyzx
  91: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  92: mul r1.w, r1.w, cb2[10].z
  93: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  94: mul r1.w, r1.w, r2.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 140:   mul r3.w, r3.w, r5.w
 141:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 142:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 143:   dp3 r2.w, r6.xyzx, r6.xyzx
 144:   max r2.w, r2.w, l(0.000000)
 145:   rsq r2.w, r2.w
 146:   mul r6.xyz, r2.wwww, r6.xyzx
 147:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 148:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 149:   mul r2.w, r2.w, r2.w
 150:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 151:   mul r3.w, r3.w, r3.w
 152:   mul r2.w, r2.w, r2.w
 153:   max r3.w, r3.w, l(0.100000)
 154:   mul r2.w, r2.w, r3.w
 155:   mul r2.w, r2.w, l(3.000000)
 156:   div r2.w, l(0.062500), r2.w
 157:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 158:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 159:   iadd r1.w, r1.w, l(1)
 160: endloop 
 161: add o0.xyz, r0.yzwy, r5.xyzx
 162: mov o0.w, l(0.300000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: sample_c_lz r2.w, r3.xyxx, t1.xxxx, s1, r3.z
  67: add r3.x, -cb3[29].x, l(1.000000)
  68: mad r2.w, r2.w, cb3[29].x, r3.x
  69: ge r3.x, l(0.000000), r3.z
  70: ge r3.y, r3.z, l(1.000000)
  71: or r3.x, r3.y, r3.x
  72: movc r2.w, r3.x, l(1.000000), r2.w
  73: dp3 r3.x, -r2.xyzx, r1.xyzx
  74: add r3.x, r3.x, r3.x
  75: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  76: dp3_sat r3.w, r1.xyzx, r2.xyzx
  77: add r3.w, -r3.w, l(1.000000)
  78: mul r3.w, r3.w, r3.w
  79: mul r3.w, r3.w, r3.w
  80: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r3.x, r5.w, l(-1.000000)
  82: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  83: max r3.x, r3.x, l(0.000000)
  84: log r3.x, r3.x
  85: mul r3.x, r3.x, cb2[14].y
  86: exp r3.x, r3.x
  87: mul r3.x, r3.x, cb2[14].x
  88: mul r3.xyz, r5.xyzx, r3.xxxx
  89: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r3.w, r3.w, l(0.500000), l(0.040000)
  91: mul r3.xyz, r3.wwww, r3.xyzx
  92: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  93: mul r1.w, r1.w, r2.w
  94: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  95: mul r1.w, r1.w, r2.w
  96: mul r5.xyz, r1.wwww, cb0[4].xyzx
  97: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  98: dp3 r0.x, r6.xyzx, r6.xyzx
  99: max r0.x, r0.x, l(0.000000)
 100: rsq r0.x, r0.x
 101: mul r6.xyz, r0.xxxx, r6.xyzx
 102: dp3_sat r0.x, r1.xyzx, r6.xyzx
 103: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 104: mul r0.x, r0.x, r0.x
 105: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 106: mul r1.w, r1.w, r1.w
 107: mul r0.x, r0.x, r0.x
 108: max r1.w, r1.w, l(0.100000)
 109: mul r0.x, r0.x, r1.w
 110: mul r0.x, r0.x, l(3.000000)
 111: div r0.x, l(0.062500), r0.x
 112: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 113: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 114: min r0.x, cb0[5].x, cb2[10].y
 115: ftoi r0.x, r0.x
 116: mov r5.xyz, r3.xyzx
 117: mov r1.w, l(0)
 118: loop 
 119:   uge r2.w, r1.w, r0.x
 120:   breakc_nz r2.w
 121:   and r2.w, r1.w, l(3)
 122:   ushr r3.w, r1.w, l(2)
 123:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 124:   ftoi r2.w, r2.w
 125:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 126:   dp3 r3.w, r6.xyzx, r6.xyzx
 127:   max r3.w, r3.w, l(0.000061)
 128:   rsq r4.w, r3.w
 129:   mul r7.xyz, r4.wwww, r6.xyzx
 130:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 131:   mul r3.w, r3.w, cb1[r2.w + 512].x
 132:   mad r3.w, -r3.w, r3.w, l(1.000000)
 133:   max r3.w, r3.w, l(0.000000)
 134:   mul r3.w, r3.w, r3.w
 135:   mul r3.w, r3.w, r5.w
 136:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 137:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 138:   mul r5.w, r5.w, r5.w
 139:   mul r3.w, r3.w, r5.w
 140:   ftoi r5.w, cb1[r2.w + 1024].x
 141:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 142:   max r5.w, r5.w, cb1[r2.w + 1024].y
 143:   mul r3.w, r3.w, r5.w
 144:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 145:   mul r3.w, r3.w, r5.w
 146:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 147:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 148:   dp3 r2.w, r6.xyzx, r6.xyzx
 149:   max r2.w, r2.w, l(0.000000)
 150:   rsq r2.w, r2.w
 151:   mul r6.xyz, r2.wwww, r6.xyzx
 152:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 153:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 154:   mul r2.w, r2.w, r2.w
 155:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 156:   mul r3.w, r3.w, r3.w
 157:   mul r2.w, r2.w, r2.w
 158:   max r3.w, r3.w, l(0.100000)
 159:   mul r2.w, r2.w, r3.w
 160:   mul r2.w, r2.w, l(3.000000)
 161:   div r2.w, l(0.062500), r2.w
 162:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 163:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 164:   iadd r1.w, r1.w, l(1)
 165: endloop 
 166: add o0.xyz, r0.yzwy, r5.xyzx
 167: mov o0.w, l(0.300000)
 168: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 191 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  66: round_ni r5.xy, r5.xyxx
  67: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  68: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  69: mul r7.xyzw, r6.xxzz, r6.xxzz
  70: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  71: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  72: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  73: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  74: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  75: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  77: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  78: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  79: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  80: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mov r8.z, r7.x
  85: mov r8.w, r3.x
  86: mov r9.z, r10.x
  87: mov r9.w, r5.z
  88: add r6.xyzw, r8.zwxz, r9.zwxz
  89: mov r7.z, r8.y
  90: mov r7.w, r3.y
  91: mov r10.z, r9.y
  92: mov r10.w, r5.w
  93: add r3.xyw, r7.zyzw, r10.zyzw
  94: div r7.xyz, r9.xzwx, r6.zwyz
  95: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  96: div r8.xyz, r10.zywz, r3.xywx
  97: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  98: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  99: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 100: mov r7.w, r8.x
 101: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 102: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 103: mov r8.w, r7.y
 104: mov r7.yw, r8.yyyz
 105: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 106: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 107: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 108: mul r11.xyzw, r3.xxxy, r6.zwyz
 109: mul r12.xyzw, r3.yyww, r6.xyzw
 110: mul r1.w, r3.w, r6.y
 111: sample_c_lz r2.w, r9.xyxx, t1.xxxx, s1, r3.z
 112: sample_c_lz r3.x, r9.zwzz, t1.xxxx, s1, r3.z
 113: mul r3.x, r3.x, r11.y
 114: mad r2.w, r11.x, r2.w, r3.x
 115: sample_c_lz r3.x, r5.zwzz, t1.xxxx, s1, r3.z
 116: mad r2.w, r11.z, r3.x, r2.w
 117: sample_c_lz r3.x, r8.xyxx, t1.xxxx, s1, r3.z
 118: mad r2.w, r11.w, r3.x, r2.w
 119: sample_c_lz r3.x, r10.xyxx, t1.xxxx, s1, r3.z
 120: mad r2.w, r12.x, r3.x, r2.w
 121: sample_c_lz r3.x, r10.zwzz, t1.xxxx, s1, r3.z
 122: mad r2.w, r12.y, r3.x, r2.w
 123: sample_c_lz r3.x, r8.zwzz, t1.xxxx, s1, r3.z
 124: mad r2.w, r12.z, r3.x, r2.w
 125: sample_c_lz r3.x, r7.xyxx, t1.xxxx, s1, r3.z
 126: mad r2.w, r12.w, r3.x, r2.w
 127: sample_c_lz r3.x, r7.zwzz, t1.xxxx, s1, r3.z
 128: mad r1.w, r1.w, r3.x, r2.w
 129: add r2.w, -cb3[29].x, l(1.000000)
 130: mad r1.w, r1.w, cb3[29].x, r2.w
 131: ge r2.w, l(0.000000), r3.z
 132: ge r3.x, r3.z, l(1.000000)
 133: or r2.w, r2.w, r3.x
 134: movc r1.w, r2.w, l(1.000000), r1.w
 135: dp3 r2.w, -r2.xyzx, r1.xyzx
 136: add r2.w, r2.w, r2.w
 137: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 138: dp3_sat r2.w, r1.xyzx, r2.xyzx
 139: add r2.w, -r2.w, l(1.000000)
 140: mul r2.w, r2.w, r2.w
 141: mul r2.w, r2.w, r2.w
 142: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r3.w, r3.w, l(-1.000000)
 144: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 145: max r3.w, r3.w, l(0.000000)
 146: log r3.w, r3.w
 147: mul r3.w, r3.w, cb2[14].y
 148: exp r3.w, r3.w
 149: mul r3.w, r3.w, cb2[14].x
 150: mul r3.xyz, r3.xyzx, r3.wwww
 151: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mad r2.w, r2.w, l(0.500000), l(0.040000)
 153: mul r3.xyz, r2.wwww, r3.xyzx
 154: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 155: mul r1.w, r1.w, cb2[10].z
 156: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 157: mul r1.w, r1.w, r2.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 203:   mul r3.w, r3.w, r5.w
 204:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 205:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 206:   dp3 r2.w, r6.xyzx, r6.xyzx
 207:   max r2.w, r2.w, l(0.000000)
 208:   rsq r2.w, r2.w
 209:   mul r6.xyz, r2.wwww, r6.xyzx
 210:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 211:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 212:   mul r2.w, r2.w, r2.w
 213:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 214:   mul r3.w, r3.w, r3.w
 215:   mul r2.w, r2.w, r2.w
 216:   max r3.w, r3.w, l(0.100000)
 217:   mul r2.w, r2.w, r3.w
 218:   mul r2.w, r2.w, l(3.000000)
 219:   div r2.w, l(0.062500), r2.w
 220:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 221:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 222:   iadd r1.w, r1.w, l(1)
 223: endloop 
 224: add o0.xyz, r0.yzwy, r5.xyzx
 225: mov o0.w, l(0.300000)
 226: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 195 math, 13 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t4.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t3.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  67: round_ni r5.xy, r5.xyxx
  68: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  69: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  70: mul r7.xyzw, r6.xxzz, r6.xxzz
  71: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  72: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  73: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  74: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  76: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  78: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  79: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: mov r8.z, r7.x
  86: mov r8.w, r3.x
  87: mov r9.z, r10.x
  88: mov r9.w, r5.z
  89: add r6.xyzw, r8.zwxz, r9.zwxz
  90: mov r7.z, r8.y
  91: mov r7.w, r3.y
  92: mov r10.z, r9.y
  93: mov r10.w, r5.w
  94: add r3.xyw, r7.zyzw, r10.zyzw
  95: div r7.xyz, r9.xzwx, r6.zwyz
  96: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  97: div r8.xyz, r10.zywz, r3.xywx
  98: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  99: mul r7.xyz, r7.yxzy, cb3[30].xxxx
 100: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 101: mov r7.w, r8.x
 102: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 103: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 104: mov r8.w, r7.y
 105: mov r7.yw, r8.yyyz
 106: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 107: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 108: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 109: mul r11.xyzw, r3.xxxy, r6.zwyz
 110: mul r12.xyzw, r3.yyww, r6.xyzw
 111: mul r2.w, r3.w, r6.y
 112: sample_c_lz r3.x, r9.xyxx, t1.xxxx, s1, r3.z
 113: sample_c_lz r3.y, r9.zwzz, t1.xxxx, s1, r3.z
 114: mul r3.y, r3.y, r11.y
 115: mad r3.x, r11.x, r3.x, r3.y
 116: sample_c_lz r3.y, r5.zwzz, t1.xxxx, s1, r3.z
 117: mad r3.x, r11.z, r3.y, r3.x
 118: sample_c_lz r3.y, r8.xyxx, t1.xxxx, s1, r3.z
 119: mad r3.x, r11.w, r3.y, r3.x
 120: sample_c_lz r3.y, r10.xyxx, t1.xxxx, s1, r3.z
 121: mad r3.x, r12.x, r3.y, r3.x
 122: sample_c_lz r3.y, r10.zwzz, t1.xxxx, s1, r3.z
 123: mad r3.x, r12.y, r3.y, r3.x
 124: sample_c_lz r3.y, r8.zwzz, t1.xxxx, s1, r3.z
 125: mad r3.x, r12.z, r3.y, r3.x
 126: sample_c_lz r3.y, r7.xyxx, t1.xxxx, s1, r3.z
 127: mad r3.x, r12.w, r3.y, r3.x
 128: sample_c_lz r3.y, r7.zwzz, t1.xxxx, s1, r3.z
 129: mad r2.w, r2.w, r3.y, r3.x
 130: add r3.x, -cb3[29].x, l(1.000000)
 131: mad r2.w, r2.w, cb3[29].x, r3.x
 132: ge r3.x, l(0.000000), r3.z
 133: ge r3.y, r3.z, l(1.000000)
 134: or r3.x, r3.y, r3.x
 135: movc r2.w, r3.x, l(1.000000), r2.w
 136: dp3 r3.x, -r2.xyzx, r1.xyzx
 137: add r3.x, r3.x, r3.x
 138: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 139: dp3_sat r3.w, r1.xyzx, r2.xyzx
 140: add r3.w, -r3.w, l(1.000000)
 141: mul r3.w, r3.w, r3.w
 142: mul r3.w, r3.w, r3.w
 143: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r3.x, r5.w, l(-1.000000)
 145: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 146: max r3.x, r3.x, l(0.000000)
 147: log r3.x, r3.x
 148: mul r3.x, r3.x, cb2[14].y
 149: exp r3.x, r3.x
 150: mul r3.x, r3.x, cb2[14].x
 151: mul r3.xyz, r5.xyzx, r3.xxxx
 152: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r3.w, r3.w, l(0.500000), l(0.040000)
 154: mul r3.xyz, r3.wwww, r3.xyzx
 155: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 156: mul r1.w, r1.w, r2.w
 157: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 158: mul r1.w, r1.w, r2.w
 159: mul r5.xyz, r1.wwww, cb0[4].xyzx
 160: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 161: dp3 r0.x, r6.xyzx, r6.xyzx
 162: max r0.x, r0.x, l(0.000000)
 163: rsq r0.x, r0.x
 164: mul r6.xyz, r0.xxxx, r6.xyzx
 165: dp3_sat r0.x, r1.xyzx, r6.xyzx
 166: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 167: mul r0.x, r0.x, r0.x
 168: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 169: mul r1.w, r1.w, r1.w
 170: mul r0.x, r0.x, r0.x
 171: max r1.w, r1.w, l(0.100000)
 172: mul r0.x, r0.x, r1.w
 173: mul r0.x, r0.x, l(3.000000)
 174: div r0.x, l(0.062500), r0.x
 175: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 176: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 177: min r0.x, cb0[5].x, cb2[10].y
 178: ftoi r0.x, r0.x
 179: mov r5.xyz, r3.xyzx
 180: mov r1.w, l(0)
 181: loop 
 182:   uge r2.w, r1.w, r0.x
 183:   breakc_nz r2.w
 184:   and r2.w, r1.w, l(3)
 185:   ushr r3.w, r1.w, l(2)
 186:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 187:   ftoi r2.w, r2.w
 188:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 189:   dp3 r3.w, r6.xyzx, r6.xyzx
 190:   max r3.w, r3.w, l(0.000061)
 191:   rsq r4.w, r3.w
 192:   mul r7.xyz, r4.wwww, r6.xyzx
 193:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 194:   mul r3.w, r3.w, cb1[r2.w + 512].x
 195:   mad r3.w, -r3.w, r3.w, l(1.000000)
 196:   max r3.w, r3.w, l(0.000000)
 197:   mul r3.w, r3.w, r3.w
 198:   mul r3.w, r3.w, r5.w
 199:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 200:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 201:   mul r5.w, r5.w, r5.w
 202:   mul r3.w, r3.w, r5.w
 203:   ftoi r5.w, cb1[r2.w + 1024].x
 204:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 205:   max r5.w, r5.w, cb1[r2.w + 1024].y
 206:   mul r3.w, r3.w, r5.w
 207:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 208:   mul r3.w, r3.w, r5.w
 209:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 210:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 211:   dp3 r2.w, r6.xyzx, r6.xyzx
 212:   max r2.w, r2.w, l(0.000000)
 213:   rsq r2.w, r2.w
 214:   mul r6.xyz, r2.wwww, r6.xyzx
 215:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 216:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 217:   mul r2.w, r2.w, r2.w
 218:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 219:   mul r3.w, r3.w, r3.w
 220:   mul r2.w, r2.w, r2.w
 221:   max r3.w, r3.w, l(0.100000)
 222:   mul r2.w, r2.w, r3.w
 223:   mul r2.w, r2.w, l(3.000000)
 224:   div r2.w, l(0.062500), r2.w
 225:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 226:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 227:   iadd r1.w, r1.w, l(1)
 228: endloop 
 229: add o0.xyz, r0.yzwy, r5.xyzx
 230: mov o0.w, l(0.300000)
 231: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 159 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: sample_c_lz r1.w, r3.xyxx, t1.xxxx, s1, r3.z
  66: add r2.w, -cb3[29].x, l(1.000000)
  67: mad r1.w, r1.w, cb3[29].x, r2.w
  68: ge r2.w, l(0.000000), r3.z
  69: ge r3.x, r3.z, l(1.000000)
  70: or r2.w, r2.w, r3.x
  71: movc r1.w, r2.w, l(1.000000), r1.w
  72: dp3 r2.w, -r2.xyzx, r1.xyzx
  73: add r2.w, r2.w, r2.w
  74: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  75: dp3_sat r2.w, r1.xyzx, r2.xyzx
  76: add r2.w, -r2.w, l(1.000000)
  77: mul r2.w, r2.w, r2.w
  78: mul r2.w, r2.w, r2.w
  79: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  80: add r3.w, r3.w, l(-1.000000)
  81: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  82: max r3.w, r3.w, l(0.000000)
  83: log r3.w, r3.w
  84: mul r3.w, r3.w, cb2[14].y
  85: exp r3.w, r3.w
  86: mul r3.w, r3.w, cb2[14].x
  87: mul r3.xyz, r3.xyzx, r3.wwww
  88: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  89: mad r2.w, r2.w, l(0.500000), l(0.040000)
  90: mul r3.xyz, r2.wwww, r3.xyzx
  91: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  92: mul r1.w, r1.w, cb2[10].z
  93: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  94: mul r1.w, r1.w, r2.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   ishl r5.w, r2.w, l(2)
 140:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 141:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 142:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 143:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 144:   div r8.xyz, r8.xyzx, r8.wwww
 145:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 146:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 147:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 148:   ge r6.w, l(0.000000), r8.z
 149:   ge r7.w, r8.z, l(1.000000)
 150:   or r6.w, r6.w, r7.w
 151:   movc r5.w, r6.w, l(1.000000), r5.w
 152:   mul r3.w, r3.w, r5.w
 153:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 154:   mul r3.w, r3.w, r5.w
 155:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 156:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 157:   dp3 r2.w, r6.xyzx, r6.xyzx
 158:   max r2.w, r2.w, l(0.000000)
 159:   rsq r2.w, r2.w
 160:   mul r6.xyz, r2.wwww, r6.xyzx
 161:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 162:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 163:   mul r2.w, r2.w, r2.w
 164:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 165:   mul r3.w, r3.w, r3.w
 166:   mul r2.w, r2.w, r2.w
 167:   max r3.w, r3.w, l(0.100000)
 168:   mul r2.w, r2.w, r3.w
 169:   mul r2.w, r2.w, l(3.000000)
 170:   div r2.w, l(0.062500), r2.w
 171:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 172:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 173:   iadd r1.w, r1.w, l(1)
 174: endloop 
 175: add o0.xyz, r0.yzwy, r5.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 163 math, 9 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: sample_c_lz r2.w, r3.xyxx, t1.xxxx, s1, r3.z
  67: add r3.x, -cb3[29].x, l(1.000000)
  68: mad r2.w, r2.w, cb3[29].x, r3.x
  69: ge r3.x, l(0.000000), r3.z
  70: ge r3.y, r3.z, l(1.000000)
  71: or r3.x, r3.y, r3.x
  72: movc r2.w, r3.x, l(1.000000), r2.w
  73: dp3 r3.x, -r2.xyzx, r1.xyzx
  74: add r3.x, r3.x, r3.x
  75: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  76: dp3_sat r3.w, r1.xyzx, r2.xyzx
  77: add r3.w, -r3.w, l(1.000000)
  78: mul r3.w, r3.w, r3.w
  79: mul r3.w, r3.w, r3.w
  80: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r3.x, r5.w, l(-1.000000)
  82: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  83: max r3.x, r3.x, l(0.000000)
  84: log r3.x, r3.x
  85: mul r3.x, r3.x, cb2[14].y
  86: exp r3.x, r3.x
  87: mul r3.x, r3.x, cb2[14].x
  88: mul r3.xyz, r5.xyzx, r3.xxxx
  89: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r3.w, r3.w, l(0.500000), l(0.040000)
  91: mul r3.xyz, r3.wwww, r3.xyzx
  92: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
  93: mul r1.w, r1.w, r2.w
  94: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  95: mul r1.w, r1.w, r2.w
  96: mul r5.xyz, r1.wwww, cb0[4].xyzx
  97: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  98: dp3 r0.x, r6.xyzx, r6.xyzx
  99: max r0.x, r0.x, l(0.000000)
 100: rsq r0.x, r0.x
 101: mul r6.xyz, r0.xxxx, r6.xyzx
 102: dp3_sat r0.x, r1.xyzx, r6.xyzx
 103: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 104: mul r0.x, r0.x, r0.x
 105: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 106: mul r1.w, r1.w, r1.w
 107: mul r0.x, r0.x, r0.x
 108: max r1.w, r1.w, l(0.100000)
 109: mul r0.x, r0.x, r1.w
 110: mul r0.x, r0.x, l(3.000000)
 111: div r0.x, l(0.062500), r0.x
 112: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 113: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 114: min r0.x, cb0[5].x, cb2[10].y
 115: ftoi r0.x, r0.x
 116: mov r5.xyz, r3.xyzx
 117: mov r1.w, l(0)
 118: loop 
 119:   uge r2.w, r1.w, r0.x
 120:   breakc_nz r2.w
 121:   and r2.w, r1.w, l(3)
 122:   ushr r3.w, r1.w, l(2)
 123:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 124:   ftoi r2.w, r2.w
 125:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 126:   dp3 r3.w, r6.xyzx, r6.xyzx
 127:   max r3.w, r3.w, l(0.000061)
 128:   rsq r4.w, r3.w
 129:   mul r7.xyz, r4.wwww, r6.xyzx
 130:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 131:   mul r3.w, r3.w, cb1[r2.w + 512].x
 132:   mad r3.w, -r3.w, r3.w, l(1.000000)
 133:   max r3.w, r3.w, l(0.000000)
 134:   mul r3.w, r3.w, r3.w
 135:   mul r3.w, r3.w, r5.w
 136:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 137:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 138:   mul r5.w, r5.w, r5.w
 139:   mul r3.w, r3.w, r5.w
 140:   ishl r5.w, r2.w, l(2)
 141:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 142:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 143:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 144:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 145:   div r8.xyz, r8.xyzx, r8.wwww
 146:   sample_c_lz r5.w, r8.xyxx, t2.xxxx, s2, r8.z
 147:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 148:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 149:   ge r6.w, l(0.000000), r8.z
 150:   ge r7.w, r8.z, l(1.000000)
 151:   or r6.w, r6.w, r7.w
 152:   movc r5.w, r6.w, l(1.000000), r5.w
 153:   ftoi r6.w, cb1[r2.w + 1024].x
 154:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 155:   max r6.w, r6.w, cb1[r2.w + 1024].y
 156:   mul r3.w, r3.w, r6.w
 157:   mul r3.w, r5.w, r3.w
 158:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 159:   mul r3.w, r3.w, r5.w
 160:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 161:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 162:   dp3 r2.w, r6.xyzx, r6.xyzx
 163:   max r2.w, r2.w, l(0.000000)
 164:   rsq r2.w, r2.w
 165:   mul r6.xyz, r2.wwww, r6.xyzx
 166:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 167:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 168:   mul r2.w, r2.w, r2.w
 169:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 170:   mul r3.w, r3.w, r3.w
 171:   mul r2.w, r2.w, r2.w
 172:   max r3.w, r3.w, l(0.100000)
 173:   mul r2.w, r2.w, r3.w
 174:   mul r2.w, r2.w, l(3.000000)
 175:   div r2.w, l(0.062500), r2.w
 176:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 177:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 178:   iadd r1.w, r1.w, l(1)
 179: endloop 
 180: add o0.xyz, r0.yzwy, r5.xyzx
 181: mov o0.w, l(0.300000)
 182: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 247 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1024], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  66: round_ni r5.xy, r5.xyxx
  67: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  68: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  69: mul r7.xyzw, r6.xxzz, r6.xxzz
  70: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  71: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  72: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  73: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  74: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  75: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  77: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  78: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  79: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  80: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mov r8.z, r7.x
  85: mov r8.w, r3.x
  86: mov r9.z, r10.x
  87: mov r9.w, r5.z
  88: add r6.xyzw, r8.zwxz, r9.zwxz
  89: mov r7.z, r8.y
  90: mov r7.w, r3.y
  91: mov r10.z, r9.y
  92: mov r10.w, r5.w
  93: add r3.xyw, r7.zyzw, r10.zyzw
  94: div r7.xyz, r9.xzwx, r6.zwyz
  95: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  96: div r8.xyz, r10.zywz, r3.xywx
  97: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  98: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  99: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 100: mov r7.w, r8.x
 101: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 102: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 103: mov r8.w, r7.y
 104: mov r7.yw, r8.yyyz
 105: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 106: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 107: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 108: mul r11.xyzw, r3.xxxy, r6.zwyz
 109: mul r12.xyzw, r3.yyww, r6.xyzw
 110: mul r1.w, r3.w, r6.y
 111: sample_c_lz r2.w, r9.xyxx, t1.xxxx, s1, r3.z
 112: sample_c_lz r3.x, r9.zwzz, t1.xxxx, s1, r3.z
 113: mul r3.x, r3.x, r11.y
 114: mad r2.w, r11.x, r2.w, r3.x
 115: sample_c_lz r3.x, r5.zwzz, t1.xxxx, s1, r3.z
 116: mad r2.w, r11.z, r3.x, r2.w
 117: sample_c_lz r3.x, r8.xyxx, t1.xxxx, s1, r3.z
 118: mad r2.w, r11.w, r3.x, r2.w
 119: sample_c_lz r3.x, r10.xyxx, t1.xxxx, s1, r3.z
 120: mad r2.w, r12.x, r3.x, r2.w
 121: sample_c_lz r3.x, r10.zwzz, t1.xxxx, s1, r3.z
 122: mad r2.w, r12.y, r3.x, r2.w
 123: sample_c_lz r3.x, r8.zwzz, t1.xxxx, s1, r3.z
 124: mad r2.w, r12.z, r3.x, r2.w
 125: sample_c_lz r3.x, r7.xyxx, t1.xxxx, s1, r3.z
 126: mad r2.w, r12.w, r3.x, r2.w
 127: sample_c_lz r3.x, r7.zwzz, t1.xxxx, s1, r3.z
 128: mad r1.w, r1.w, r3.x, r2.w
 129: add r2.w, -cb3[29].x, l(1.000000)
 130: mad r1.w, r1.w, cb3[29].x, r2.w
 131: ge r2.w, l(0.000000), r3.z
 132: ge r3.x, r3.z, l(1.000000)
 133: or r2.w, r2.w, r3.x
 134: movc r1.w, r2.w, l(1.000000), r1.w
 135: dp3 r2.w, -r2.xyzx, r1.xyzx
 136: add r2.w, r2.w, r2.w
 137: mad r3.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
 138: dp3_sat r2.w, r1.xyzx, r2.xyzx
 139: add r2.w, -r2.w, l(1.000000)
 140: mul r2.w, r2.w, r2.w
 141: mul r2.w, r2.w, r2.w
 142: sample_l r3.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r3.w, r3.w, l(-1.000000)
 144: mad r3.w, cb2[14].w, r3.w, l(1.000000)
 145: max r3.w, r3.w, l(0.000000)
 146: log r3.w, r3.w
 147: mul r3.w, r3.w, cb2[14].y
 148: exp r3.w, r3.w
 149: mul r3.w, r3.w, cb2[14].x
 150: mul r3.xyz, r3.xyzx, r3.wwww
 151: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mad r2.w, r2.w, l(0.500000), l(0.040000)
 153: mul r3.xyz, r2.wwww, r3.xyzx
 154: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 155: mul r1.w, r1.w, cb2[10].z
 156: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 157: mul r1.w, r1.w, r2.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   ishl r5.w, r2.w, l(2)
 203:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 204:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 205:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 206:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 207:   div r8.xyz, r8.xyzx, r8.wwww
 208:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 209:   round_ni r9.xy, r9.xyxx
 210:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 211:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 212:   mul r11.xyzw, r10.xxzz, r10.xxzz
 213:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 214:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 215:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 216:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 217:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 218:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 219:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 220:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 221:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 222:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 223:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 224:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 225:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 226:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 227:   mov r12.z, r11.x
 228:   mov r12.w, r8.x
 229:   mov r13.z, r14.x
 230:   mov r13.w, r9.z
 231:   add r10.xyzw, r12.zwxz, r13.zwxz
 232:   mov r11.z, r12.y
 233:   mov r11.w, r8.y
 234:   mov r14.z, r13.y
 235:   mov r14.w, r9.w
 236:   add r8.xyw, r11.zyzw, r14.zyzw
 237:   div r11.xyz, r13.xzwx, r10.zwyz
 238:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 239:   div r12.xyz, r14.zywz, r8.xywx
 240:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 241:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 242:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 243:   mov r11.w, r12.x
 244:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 245:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 246:   mov r12.w, r11.y
 247:   mov r11.yw, r12.yyyz
 248:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 249:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 250:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 251:   mul r15.xyzw, r8.xxxy, r10.zwyz
 252:   mul r16.xyzw, r8.yyww, r10.xyzw
 253:   mul r5.w, r8.w, r10.y
 254:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 255:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 256:   mul r7.w, r7.w, r15.y
 257:   mad r6.w, r15.x, r6.w, r7.w
 258:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 259:   mad r6.w, r15.z, r7.w, r6.w
 260:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 261:   mad r6.w, r15.w, r7.w, r6.w
 262:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 263:   mad r6.w, r16.x, r7.w, r6.w
 264:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 265:   mad r6.w, r16.y, r7.w, r6.w
 266:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 267:   mad r6.w, r16.z, r7.w, r6.w
 268:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 269:   mad r6.w, r16.w, r7.w, r6.w
 270:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 271:   mad r5.w, r5.w, r7.w, r6.w
 272:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 273:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 274:   ge r6.w, l(0.000000), r8.z
 275:   ge r7.w, r8.z, l(1.000000)
 276:   or r6.w, r6.w, r7.w
 277:   movc r5.w, r6.w, l(1.000000), r5.w
 278:   mul r3.w, r3.w, r5.w
 279:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 280:   mul r3.w, r3.w, r5.w
 281:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 282:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 283:   dp3 r2.w, r6.xyzx, r6.xyzx
 284:   max r2.w, r2.w, l(0.000000)
 285:   rsq r2.w, r2.w
 286:   mul r6.xyz, r2.wwww, r6.xyzx
 287:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 288:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 289:   mul r2.w, r2.w, r2.w
 290:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 291:   mul r3.w, r3.w, r3.w
 292:   mul r2.w, r2.w, r2.w
 293:   max r3.w, r3.w, l(0.100000)
 294:   mul r2.w, r2.w, r3.w
 295:   mul r2.w, r2.w, l(3.000000)
 296:   div r2.w, l(0.062500), r2.w
 297:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 298:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 299:   iadd r1.w, r1.w, l(1)
 300: endloop 
 301: add o0.xyz, r0.yzwy, r5.xyzx
 302: mov o0.w, l(0.300000)
 303: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 251 math, 17 temp registers, 3 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  65: mul r1.w, cb2[10].z, cb2[13].x
  66: mad r5.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  67: round_ni r5.xy, r5.xyxx
  68: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r5.xyxx
  69: add r6.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  70: mul r7.xyzw, r6.xxzz, r6.xxzz
  71: mul r5.zw, r7.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  72: mad r6.xz, r7.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  73: add r7.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  74: min r7.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: mad r7.zw, -r7.zzzw, r7.zzzw, r7.xxxy
  76: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: mad r3.xy, -r3.xyxx, r3.xyxx, r6.ywyy
  78: add r7.zw, r7.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  79: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  80: mul r8.xy, r6.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  81: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  82: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  83: mul r10.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  84: mul r3.xy, r6.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: mov r8.z, r7.x
  86: mov r8.w, r3.x
  87: mov r9.z, r10.x
  88: mov r9.w, r5.z
  89: add r6.xyzw, r8.zwxz, r9.zwxz
  90: mov r7.z, r8.y
  91: mov r7.w, r3.y
  92: mov r10.z, r9.y
  93: mov r10.w, r5.w
  94: add r3.xyw, r7.zyzw, r10.zyzw
  95: div r7.xyz, r9.xzwx, r6.zwyz
  96: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  97: div r8.xyz, r10.zywz, r3.xywx
  98: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  99: mul r7.xyz, r7.yxzy, cb3[30].xxxx
 100: mul r8.xyz, r8.xyzx, cb3[30].yyyy
 101: mov r7.w, r8.x
 102: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
 103: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
 104: mov r8.w, r7.y
 105: mov r7.yw, r8.yyyz
 106: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
 107: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 108: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 109: mul r11.xyzw, r3.xxxy, r6.zwyz
 110: mul r12.xyzw, r3.yyww, r6.xyzw
 111: mul r2.w, r3.w, r6.y
 112: sample_c_lz r3.x, r9.xyxx, t1.xxxx, s1, r3.z
 113: sample_c_lz r3.y, r9.zwzz, t1.xxxx, s1, r3.z
 114: mul r3.y, r3.y, r11.y
 115: mad r3.x, r11.x, r3.x, r3.y
 116: sample_c_lz r3.y, r5.zwzz, t1.xxxx, s1, r3.z
 117: mad r3.x, r11.z, r3.y, r3.x
 118: sample_c_lz r3.y, r8.xyxx, t1.xxxx, s1, r3.z
 119: mad r3.x, r11.w, r3.y, r3.x
 120: sample_c_lz r3.y, r10.xyxx, t1.xxxx, s1, r3.z
 121: mad r3.x, r12.x, r3.y, r3.x
 122: sample_c_lz r3.y, r10.zwzz, t1.xxxx, s1, r3.z
 123: mad r3.x, r12.y, r3.y, r3.x
 124: sample_c_lz r3.y, r8.zwzz, t1.xxxx, s1, r3.z
 125: mad r3.x, r12.z, r3.y, r3.x
 126: sample_c_lz r3.y, r7.xyxx, t1.xxxx, s1, r3.z
 127: mad r3.x, r12.w, r3.y, r3.x
 128: sample_c_lz r3.y, r7.zwzz, t1.xxxx, s1, r3.z
 129: mad r2.w, r2.w, r3.y, r3.x
 130: add r3.x, -cb3[29].x, l(1.000000)
 131: mad r2.w, r2.w, cb3[29].x, r3.x
 132: ge r3.x, l(0.000000), r3.z
 133: ge r3.y, r3.z, l(1.000000)
 134: or r3.x, r3.y, r3.x
 135: movc r2.w, r3.x, l(1.000000), r2.w
 136: dp3 r3.x, -r2.xyzx, r1.xyzx
 137: add r3.x, r3.x, r3.x
 138: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 139: dp3_sat r3.w, r1.xyzx, r2.xyzx
 140: add r3.w, -r3.w, l(1.000000)
 141: mul r3.w, r3.w, r3.w
 142: mul r3.w, r3.w, r3.w
 143: sample_l r5.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r3.x, r5.w, l(-1.000000)
 145: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 146: max r3.x, r3.x, l(0.000000)
 147: log r3.x, r3.x
 148: mul r3.x, r3.x, cb2[14].y
 149: exp r3.x, r3.x
 150: mul r3.x, r3.x, cb2[14].x
 151: mul r3.xyz, r5.xyzx, r3.xxxx
 152: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r3.w, r3.w, l(0.500000), l(0.040000)
 154: mul r3.xyz, r3.wwww, r3.xyzx
 155: mad r3.xyz, v7.xyzx, r4.xyzx, r3.xyzx
 156: mul r1.w, r1.w, r2.w
 157: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 158: mul r1.w, r1.w, r2.w
 159: mul r5.xyz, r1.wwww, cb0[4].xyzx
 160: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 161: dp3 r0.x, r6.xyzx, r6.xyzx
 162: max r0.x, r0.x, l(0.000000)
 163: rsq r0.x, r0.x
 164: mul r6.xyz, r0.xxxx, r6.xyzx
 165: dp3_sat r0.x, r1.xyzx, r6.xyzx
 166: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 167: mul r0.x, r0.x, r0.x
 168: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 169: mul r1.w, r1.w, r1.w
 170: mul r0.x, r0.x, r0.x
 171: max r1.w, r1.w, l(0.100000)
 172: mul r0.x, r0.x, r1.w
 173: mul r0.x, r0.x, l(3.000000)
 174: div r0.x, l(0.062500), r0.x
 175: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 176: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 177: min r0.x, cb0[5].x, cb2[10].y
 178: ftoi r0.x, r0.x
 179: mov r5.xyz, r3.xyzx
 180: mov r1.w, l(0)
 181: loop 
 182:   uge r2.w, r1.w, r0.x
 183:   breakc_nz r2.w
 184:   and r2.w, r1.w, l(3)
 185:   ushr r3.w, r1.w, l(2)
 186:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 187:   ftoi r2.w, r2.w
 188:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 189:   dp3 r3.w, r6.xyzx, r6.xyzx
 190:   max r3.w, r3.w, l(0.000061)
 191:   rsq r4.w, r3.w
 192:   mul r7.xyz, r4.wwww, r6.xyzx
 193:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 194:   mul r3.w, r3.w, cb1[r2.w + 512].x
 195:   mad r3.w, -r3.w, r3.w, l(1.000000)
 196:   max r3.w, r3.w, l(0.000000)
 197:   mul r3.w, r3.w, r3.w
 198:   mul r3.w, r3.w, r5.w
 199:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 200:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 201:   mul r5.w, r5.w, r5.w
 202:   mul r3.w, r3.w, r5.w
 203:   ishl r5.w, r2.w, l(2)
 204:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 205:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 206:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 207:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 208:   div r8.xyz, r8.xyzx, r8.wwww
 209:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 210:   round_ni r9.xy, r9.xyxx
 211:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 212:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 213:   mul r11.xyzw, r10.xxzz, r10.xxzz
 214:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 215:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 216:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 217:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 218:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 219:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 220:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 221:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 222:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 223:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 224:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 225:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 226:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 227:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 228:   mov r12.z, r11.x
 229:   mov r12.w, r8.x
 230:   mov r13.z, r14.x
 231:   mov r13.w, r9.z
 232:   add r10.xyzw, r12.zwxz, r13.zwxz
 233:   mov r11.z, r12.y
 234:   mov r11.w, r8.y
 235:   mov r14.z, r13.y
 236:   mov r14.w, r9.w
 237:   add r8.xyw, r11.zyzw, r14.zyzw
 238:   div r11.xyz, r13.xzwx, r10.zwyz
 239:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 240:   div r12.xyz, r14.zywz, r8.xywx
 241:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 242:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 243:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 244:   mov r11.w, r12.x
 245:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 246:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 247:   mov r12.w, r11.y
 248:   mov r11.yw, r12.yyyz
 249:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 250:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 251:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 252:   mul r15.xyzw, r8.xxxy, r10.zwyz
 253:   mul r16.xyzw, r8.yyww, r10.xyzw
 254:   mul r5.w, r8.w, r10.y
 255:   sample_c_lz r6.w, r13.xyxx, t2.xxxx, s2, r8.z
 256:   sample_c_lz r7.w, r13.zwzz, t2.xxxx, s2, r8.z
 257:   mul r7.w, r7.w, r15.y
 258:   mad r6.w, r15.x, r6.w, r7.w
 259:   sample_c_lz r7.w, r9.zwzz, t2.xxxx, s2, r8.z
 260:   mad r6.w, r15.z, r7.w, r6.w
 261:   sample_c_lz r7.w, r12.xyxx, t2.xxxx, s2, r8.z
 262:   mad r6.w, r15.w, r7.w, r6.w
 263:   sample_c_lz r7.w, r14.xyxx, t2.xxxx, s2, r8.z
 264:   mad r6.w, r16.x, r7.w, r6.w
 265:   sample_c_lz r7.w, r14.zwzz, t2.xxxx, s2, r8.z
 266:   mad r6.w, r16.y, r7.w, r6.w
 267:   sample_c_lz r7.w, r12.zwzz, t2.xxxx, s2, r8.z
 268:   mad r6.w, r16.z, r7.w, r6.w
 269:   sample_c_lz r7.w, r11.xyxx, t2.xxxx, s2, r8.z
 270:   mad r6.w, r16.w, r7.w, r6.w
 271:   sample_c_lz r7.w, r11.zwzz, t2.xxxx, s2, r8.z
 272:   mad r5.w, r5.w, r7.w, r6.w
 273:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 274:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 275:   ge r6.w, l(0.000000), r8.z
 276:   ge r7.w, r8.z, l(1.000000)
 277:   or r6.w, r6.w, r7.w
 278:   movc r5.w, r6.w, l(1.000000), r5.w
 279:   ftoi r6.w, cb1[r2.w + 1024].x
 280:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 281:   max r6.w, r6.w, cb1[r2.w + 1024].y
 282:   mul r3.w, r3.w, r6.w
 283:   mul r3.w, r5.w, r3.w
 284:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 285:   mul r3.w, r3.w, r5.w
 286:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 287:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 288:   dp3 r2.w, r6.xyzx, r6.xyzx
 289:   max r2.w, r2.w, l(0.000000)
 290:   rsq r2.w, r2.w
 291:   mul r6.xyz, r2.wwww, r6.xyzx
 292:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 293:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 294:   mul r2.w, r2.w, r2.w
 295:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 296:   mul r3.w, r3.w, r3.w
 297:   mul r2.w, r2.w, r2.w
 298:   max r3.w, r3.w, l(0.100000)
 299:   mul r2.w, r2.w, r3.w
 300:   mul r2.w, r2.w, l(3.000000)
 301:   div r2.w, l(0.062500), r2.w
 302:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 303:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 304:   iadd r1.w, r1.w, l(1)
 305: endloop 
 306: add o0.xyz, r0.yzwy, r5.xyzx
 307: mov o0.w, l(0.300000)
 308: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r2.xyz, r0.wwww, cb0[4].xyzx
 113: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: add o0.xyz, r1.xyzx, r0.xyzx
 174: mov o0.w, l(0.300000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r0.w, r0.w, cb1[10].z
 110: mul r0.w, r2.x, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 6 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t4.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t2.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: mad r3.xyz, v7.xyzx, r1.xyzx, r3.xyzx
  65: dp3 r0.w, r4.xyzx, r4.xyzx
  66: max r0.w, r0.w, l(0.000000)
  67: rsq r0.w, r0.w
  68: mul r4.xyz, r0.wwww, r4.xyzx
  69: dp3_sat r0.w, r2.xyzx, r4.xyzx
  70: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  71: mul r1.w, r1.w, r1.w
  72: max r1.w, r1.w, l(0.100000)
  73: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  74: mul r0.w, r0.w, r0.w
  75: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  76: mul r0.w, r0.w, r0.w
  77: mul r0.w, r1.w, r0.w
  78: mul r0.w, r0.w, l(3.000000)
  79: div r0.w, l(0.062500), r0.w
  80: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  81: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  82: dp3 r4.x, r2.yzwy, r2.yzwy
  83: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  84: dp3 r4.y, r2.yzwy, r2.yzwy
  85: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  86: dp3 r4.z, r2.yzwy, r2.yzwy
  87: add r2.yzw, v1.xxyz, -cb2[23].xxyz
  88: dp3 r4.w, r2.yzwy, r2.yzwy
  89: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
  90: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
  91: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  92: add r2.yzw, r2.yyzw, r4.yyzw
  93: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  94: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  95: add r0.w, -r0.w, l(4.000000)
  96: ftou r0.w, r0.w
  97: ishl r0.w, r0.w, l(2)
  98: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
  99: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 100: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 101: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 102: ge r0.w, l(0.000000), r2.w
 103: ge r1.w, r2.w, l(1.000000)
 104: sample_c_lz r2.y, r2.yzyy, t1.xxxx, s1, r2.w
 105: or r0.w, r0.w, r1.w
 106: add r1.w, -cb2[29].x, l(1.000000)
 107: mad r1.w, r2.y, cb2[29].x, r1.w
 108: movc r0.w, r0.w, l(1.000000), r1.w
 109: mul r1.w, cb1[10].z, cb1[13].x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r2.x, r0.w
 112: mul r2.xyz, r0.wwww, cb0[4].xyzx
 113: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.x, r0.x, cb1[10].z
  90: dp3 r0.y, v2.xyzx, v2.xyzx
  91: rsq r0.z, r0.y
  92: sqrt r0.y, r0.y
  93: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  94: mul r1.xyz, r0.yyyy, v2.xyzx
  95: mul r0.yzw, r0.zzzz, v2.xxyz
  96: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  97: mul r0.x, r0.x, r1.w
  98: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  99: dp3 r0.x, v5.xyzx, v5.xyzx
 100: max r1.w, r0.x, l(0.000000)
 101: rsq r0.x, r0.x
 102: mul r3.xyz, r0.xxxx, v5.xyzx
 103: rsq r0.x, r1.w
 104: mul r4.xyz, r0.xxxx, v5.xyzx
 105: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 106: dp3 r0.x, -r4.xyzx, r0.yzwy
 107: add r0.x, r0.x, r0.x
 108: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 109: dp3_sat r0.x, r0.yzwy, r4.xyzx
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r0.x, r0.x, r0.x
 112: mul r0.x, r0.x, r0.x
 113: mad r0.x, r0.x, l(0.500000), l(0.040000)
 114: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 115: add r1.w, r4.w, l(-1.000000)
 116: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 117: max r1.w, r1.w, l(0.000000)
 118: log r1.w, r1.w
 119: mul r1.w, r1.w, cb1[14].y
 120: exp r1.w, r1.w
 121: mul r1.w, r1.w, cb1[14].x
 122: mul r4.xyz, r4.xyzx, r1.wwww
 123: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 124: mul r4.xyz, r0.xxxx, r4.xyzx
 125: dp3 r0.x, r1.xyzx, r1.xyzx
 126: rsq r0.x, r0.x
 127: mul r1.xyz, r0.xxxx, r1.xyzx
 128: dp3_sat r0.x, r1.xyzx, r3.xyzx
 129: add r0.x, -r0.x, l(1.000000)
 130: log r0.x, r0.x
 131: mul r0.x, r0.x, cb3[1].x
 132: exp r0.x, r0.x
 133: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 134: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 135: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 136: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 137: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 138: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 139: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 140: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 141: mul r3.xyz, v1.yyyy, cb0[62].xywx
 142: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 143: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 144: add r3.xyz, r3.xyzx, cb0[64].xywx
 145: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 146: mul r6.w, r6.y, cb0[12].x
 147: add r3.xy, r6.zzzz, r6.xwxx
 148: div r3.xy, r3.xyxx, r3.zzzz
 149: mul r0.x, cb0[10].x, cb3[4].x
 150: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 151: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 152: mul r3.zw, r3.xxxy, r6.xxxy
 153: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 154: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 155: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 156: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 157: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 158: dp3 r0.x, r5.xyzx, r5.xyzx
 159: max r0.x, r0.x, l(0.000000)
 160: rsq r0.x, r0.x
 161: mul r5.xyz, r0.xxxx, r5.xyzx
 162: dp3_sat r0.x, r0.yzwy, r5.xyzx
 163: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 164: mul r0.xy, r0.xyxx, r0.xyxx
 165: max r0.y, r0.y, l(0.100000)
 166: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 167: mul r0.x, r0.x, r0.x
 168: mul r0.x, r0.y, r0.x
 169: mul r0.x, r0.x, l(3.000000)
 170: div r0.x, l(0.062500), r0.x
 171: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 172: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 173: add o0.xyz, r1.xyzx, r0.xyzx
 174: mov o0.w, l(0.300000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_SHAr at 272
  Vector4 unity_SHAg at 288
  Vector4 unity_SHAb at 304
  Vector4 unity_SHBr at 320
  Vector4 unity_SHBg at 336
  Vector4 unity_SHBb at 352
  Vector4 unity_SHC at 368
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[24], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 4
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  19: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  20: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  21: dp3 r1.w, r1.xyzx, r1.xyzx
  22: max r1.w, r1.w, l(0.000000)
  23: rsq r1.w, r1.w
  24: mul o3.xyz, r1.wwww, r1.xyzx
  25: mov o3.w, v2.w
  26: mov o4.xyzw, v3.xyzw
  27: mov o6.xy, l(0,0,0,0)
  28: mul r1.x, r0.y, r0.y
  29: mad r1.x, r0.x, r0.x, -r1.x
  30: mul r2.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r3.x, cb1[20].xyzw, r2.xyzw
  32: dp4 r3.y, cb1[21].xyzw, r2.xyzw
  33: dp4 r3.z, cb1[22].xyzw, r2.xyzw
  34: mad r1.xyz, cb1[23].xyzx, r1.xxxx, r3.xyzx
  35: mov r0.w, l(1.000000)
  36: dp4 r2.x, cb1[17].xyzw, r0.xyzw
  37: dp4 r2.y, cb1[18].xyzw, r0.xyzw
  38: dp4 r2.z, cb1[19].xyzw, r0.xyzw
  39: add r0.xyz, r1.xyzx, r2.xyzx
  40: max o7.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  41: mov o8.xyzw, l(0,0,0,0)
  42: mov o9.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 7 temp registers, 3 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "_MainLightShadowmapTexture" to slot 1
Set 2D Texture "_CameraOpaqueTexture" to slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t1.xxxx, s1, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t1.xxxx, s1, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t1.xxxx, s1, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t1.xxxx, s1, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t1.xxxx, s1, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t1.xxxx, s1, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t1.xxxx, s1, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t1.xxxx, s1, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t1.xxxx, s1, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t3.xyzw, s3
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t4.xyzw, s4
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t2.xyzw, s2
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: mad r4.xyz, v7.xyzx, r3.xyzx, r4.xyzx
 159: dp3 r0.x, r5.xyzx, r5.xyzx
 160: max r0.x, r0.x, l(0.000000)
 161: rsq r0.x, r0.x
 162: mul r5.xyz, r0.xxxx, r5.xyzx
 163: dp3_sat r0.x, r0.yzwy, r5.xyzx
 164: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 165: mul r0.xy, r0.xyxx, r0.xyxx
 166: max r0.y, r0.y, l(0.100000)
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r0.x, r0.x, r0.x
 169: mul r0.x, r0.y, r0.x
 170: mul r0.x, r0.x, l(3.000000)
 171: div r0.x, l(0.062500), r0.x
 172: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 174: add o0.xyz, r1.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ftoi r5.w, cb1[r2.w + 1024].x
 125:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 126:   max r5.w, r5.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r5.w
 128:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 129:   mul r3.w, r3.w, r5.w
 130:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 131:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 132:   dp3 r2.w, r6.xyzx, r6.xyzx
 133:   max r2.w, r2.w, l(0.000000)
 134:   rsq r2.w, r2.w
 135:   mul r6.xyz, r2.wwww, r6.xyzx
 136:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 137:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 138:   mul r2.w, r2.w, r2.w
 139:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 140:   mul r3.w, r3.w, r3.w
 141:   mul r2.w, r2.w, r2.w
 142:   max r3.w, r3.w, l(0.100000)
 143:   mul r2.w, r2.w, r3.w
 144:   mul r2.w, r2.w, l(3.000000)
 145:   div r2.w, l(0.062500), r2.w
 146:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 147:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 148:   iadd r1.w, r1.w, l(1)
 149: endloop 
 150: add o0.xyz, r0.yzwy, r5.xyzx
 151: mov o0.w, l(0.300000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ftoi r5.w, cb1[r2.w + 1024].x
 129:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 130:   max r5.w, r5.w, cb1[r2.w + 1024].y
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ftoi r5.w, cb1[r2.w + 1024].x
 125:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 126:   max r5.w, r5.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r5.w
 128:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 129:   mul r3.w, r3.w, r5.w
 130:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 131:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 132:   dp3 r2.w, r6.xyzx, r6.xyzx
 133:   max r2.w, r2.w, l(0.000000)
 134:   rsq r2.w, r2.w
 135:   mul r6.xyz, r2.wwww, r6.xyzx
 136:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 137:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 138:   mul r2.w, r2.w, r2.w
 139:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 140:   mul r3.w, r3.w, r3.w
 141:   mul r2.w, r2.w, r2.w
 142:   max r3.w, r3.w, l(0.100000)
 143:   mul r2.w, r2.w, r3.w
 144:   mul r2.w, r2.w, l(3.000000)
 145:   div r2.w, l(0.062500), r2.w
 146:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 147:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 148:   iadd r1.w, r1.w, l(1)
 149: endloop 
 150: add o0.xyz, r0.yzwy, r5.xyzx
 151: mov o0.w, l(0.300000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ftoi r5.w, cb1[r2.w + 1024].x
 129:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 130:   max r5.w, r5.w, cb1[r2.w + 1024].y
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ishl r5.w, r2.w, l(2)
 125:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 126:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 127:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 128:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 129:   div r8.xyz, r8.xyzx, r8.wwww
 130:   sample_c_lz r5.w, r8.xyxx, t3.xxxx, s2, r8.z
 131:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 132:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 133:   ge r6.w, l(0.000000), r8.z
 134:   ge r7.w, r8.z, l(1.000000)
 135:   or r6.w, r6.w, r7.w
 136:   movc r5.w, r6.w, l(1.000000), r5.w
 137:   ftoi r6.w, cb1[r2.w + 1024].x
 138:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 139:   max r6.w, r6.w, cb1[r2.w + 1024].y
 140:   mul r3.w, r3.w, r6.w
 141:   mul r3.w, r5.w, r3.w
 142:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 143:   mul r3.w, r3.w, r5.w
 144:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 145:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 146:   dp3 r2.w, r6.xyzx, r6.xyzx
 147:   max r2.w, r2.w, l(0.000000)
 148:   rsq r2.w, r2.w
 149:   mul r6.xyz, r2.wwww, r6.xyzx
 150:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 151:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 152:   mul r2.w, r2.w, r2.w
 153:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r2.w, r2.w, r2.w
 156:   max r3.w, r3.w, l(0.100000)
 157:   mul r2.w, r2.w, r3.w
 158:   mul r2.w, r2.w, l(3.000000)
 159:   div r2.w, l(0.062500), r2.w
 160:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 161:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 162:   iadd r1.w, r1.w, l(1)
 163: endloop 
 164: add o0.xyz, r0.yzwy, r5.xyzx
 165: mov o0.w, l(0.300000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ishl r5.w, r2.w, l(2)
 129:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 130:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 131:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 132:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 133:   div r8.xyz, r8.xyzx, r8.wwww
 134:   sample_c_lz r5.w, r8.xyxx, t3.xxxx, s2, r8.z
 135:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 136:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 137:   ge r6.w, l(0.000000), r8.z
 138:   ge r7.w, r8.z, l(1.000000)
 139:   or r6.w, r6.w, r7.w
 140:   movc r5.w, r6.w, l(1.000000), r5.w
 141:   ftoi r6.w, cb1[r2.w + 1024].x
 142:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 143:   max r6.w, r6.w, cb1[r2.w + 1024].y
 144:   mul r3.w, r3.w, r6.w
 145:   mul r3.w, r5.w, r3.w
 146:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 147:   mul r3.w, r3.w, r5.w
 148:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 149:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 150:   dp3 r2.w, r6.xyzx, r6.xyzx
 151:   max r2.w, r2.w, l(0.000000)
 152:   rsq r2.w, r2.w
 153:   mul r6.xyz, r2.wwww, r6.xyzx
 154:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 155:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 156:   mul r2.w, r2.w, r2.w
 157:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 158:   mul r3.w, r3.w, r3.w
 159:   mul r2.w, r2.w, r2.w
 160:   max r3.w, r3.w, l(0.100000)
 161:   mul r2.w, r2.w, r3.w
 162:   mul r2.w, r2.w, l(3.000000)
 163:   div r2.w, l(0.062500), r2.w
 164:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 165:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 166:   iadd r1.w, r1.w, l(1)
 167: endloop 
 168: add o0.xyz, r0.yzwy, r5.xyzx
 169: mov o0.w, l(0.300000)
 170: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 193 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ishl r5.w, r2.w, l(2)
 125:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 126:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 127:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 128:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 129:   div r8.xyz, r8.xyzx, r8.wwww
 130:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 131:   round_ni r9.xy, r9.xyxx
 132:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 133:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 134:   mul r11.xyzw, r10.xxzz, r10.xxzz
 135:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 136:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 137:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 138:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 139:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 140:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 141:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 142:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 143:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 144:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 145:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 146:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 147:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 148:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 149:   mov r12.z, r11.x
 150:   mov r12.w, r8.x
 151:   mov r13.z, r14.x
 152:   mov r13.w, r9.z
 153:   add r10.xyzw, r12.zwxz, r13.zwxz
 154:   mov r11.z, r12.y
 155:   mov r11.w, r8.y
 156:   mov r14.z, r13.y
 157:   mov r14.w, r9.w
 158:   add r8.xyw, r11.zyzw, r14.zyzw
 159:   div r11.xyz, r13.xzwx, r10.zwyz
 160:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 161:   div r12.xyz, r14.zywz, r8.xywx
 162:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 163:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 164:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 165:   mov r11.w, r12.x
 166:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 167:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 168:   mov r12.w, r11.y
 169:   mov r11.yw, r12.yyyz
 170:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 171:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 172:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 173:   mul r15.xyzw, r8.xxxy, r10.zwyz
 174:   mul r16.xyzw, r8.yyww, r10.xyzw
 175:   mul r5.w, r8.w, r10.y
 176:   sample_c_lz r6.w, r13.xyxx, t3.xxxx, s2, r8.z
 177:   sample_c_lz r7.w, r13.zwzz, t3.xxxx, s2, r8.z
 178:   mul r7.w, r7.w, r15.y
 179:   mad r6.w, r15.x, r6.w, r7.w
 180:   sample_c_lz r7.w, r9.zwzz, t3.xxxx, s2, r8.z
 181:   mad r6.w, r15.z, r7.w, r6.w
 182:   sample_c_lz r7.w, r12.xyxx, t3.xxxx, s2, r8.z
 183:   mad r6.w, r15.w, r7.w, r6.w
 184:   sample_c_lz r7.w, r14.xyxx, t3.xxxx, s2, r8.z
 185:   mad r6.w, r16.x, r7.w, r6.w
 186:   sample_c_lz r7.w, r14.zwzz, t3.xxxx, s2, r8.z
 187:   mad r6.w, r16.y, r7.w, r6.w
 188:   sample_c_lz r7.w, r12.zwzz, t3.xxxx, s2, r8.z
 189:   mad r6.w, r16.z, r7.w, r6.w
 190:   sample_c_lz r7.w, r11.xyxx, t3.xxxx, s2, r8.z
 191:   mad r6.w, r16.w, r7.w, r6.w
 192:   sample_c_lz r7.w, r11.zwzz, t3.xxxx, s2, r8.z
 193:   mad r5.w, r5.w, r7.w, r6.w
 194:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 195:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 196:   ge r6.w, l(0.000000), r8.z
 197:   ge r7.w, r8.z, l(1.000000)
 198:   or r6.w, r6.w, r7.w
 199:   movc r5.w, r6.w, l(1.000000), r5.w
 200:   ftoi r6.w, cb1[r2.w + 1024].x
 201:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 202:   max r6.w, r6.w, cb1[r2.w + 1024].y
 203:   mul r3.w, r3.w, r6.w
 204:   mul r3.w, r5.w, r3.w
 205:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 206:   mul r3.w, r3.w, r5.w
 207:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 208:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 209:   dp3 r2.w, r6.xyzx, r6.xyzx
 210:   max r2.w, r2.w, l(0.000000)
 211:   rsq r2.w, r2.w
 212:   mul r6.xyz, r2.wwww, r6.xyzx
 213:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 214:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 215:   mul r2.w, r2.w, r2.w
 216:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 217:   mul r3.w, r3.w, r3.w
 218:   mul r2.w, r2.w, r2.w
 219:   max r3.w, r3.w, l(0.100000)
 220:   mul r2.w, r2.w, r3.w
 221:   mul r2.w, r2.w, l(3.000000)
 222:   div r2.w, l(0.062500), r2.w
 223:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 224:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 225:   iadd r1.w, r1.w, l(1)
 226: endloop 
 227: add o0.xyz, r0.yzwy, r5.xyzx
 228: mov o0.w, l(0.300000)
 229: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 197 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ishl r5.w, r2.w, l(2)
 129:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 130:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 131:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 132:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 133:   div r8.xyz, r8.xyzx, r8.wwww
 134:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 135:   round_ni r9.xy, r9.xyxx
 136:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 137:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 138:   mul r11.xyzw, r10.xxzz, r10.xxzz
 139:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 140:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 141:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 142:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 143:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 144:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 145:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 146:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 147:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 148:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 149:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 150:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 151:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 152:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 153:   mov r12.z, r11.x
 154:   mov r12.w, r8.x
 155:   mov r13.z, r14.x
 156:   mov r13.w, r9.z
 157:   add r10.xyzw, r12.zwxz, r13.zwxz
 158:   mov r11.z, r12.y
 159:   mov r11.w, r8.y
 160:   mov r14.z, r13.y
 161:   mov r14.w, r9.w
 162:   add r8.xyw, r11.zyzw, r14.zyzw
 163:   div r11.xyz, r13.xzwx, r10.zwyz
 164:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 165:   div r12.xyz, r14.zywz, r8.xywx
 166:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 167:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 168:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 169:   mov r11.w, r12.x
 170:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 171:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 172:   mov r12.w, r11.y
 173:   mov r11.yw, r12.yyyz
 174:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 175:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 176:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 177:   mul r15.xyzw, r8.xxxy, r10.zwyz
 178:   mul r16.xyzw, r8.yyww, r10.xyzw
 179:   mul r5.w, r8.w, r10.y
 180:   sample_c_lz r6.w, r13.xyxx, t3.xxxx, s2, r8.z
 181:   sample_c_lz r7.w, r13.zwzz, t3.xxxx, s2, r8.z
 182:   mul r7.w, r7.w, r15.y
 183:   mad r6.w, r15.x, r6.w, r7.w
 184:   sample_c_lz r7.w, r9.zwzz, t3.xxxx, s2, r8.z
 185:   mad r6.w, r15.z, r7.w, r6.w
 186:   sample_c_lz r7.w, r12.xyxx, t3.xxxx, s2, r8.z
 187:   mad r6.w, r15.w, r7.w, r6.w
 188:   sample_c_lz r7.w, r14.xyxx, t3.xxxx, s2, r8.z
 189:   mad r6.w, r16.x, r7.w, r6.w
 190:   sample_c_lz r7.w, r14.zwzz, t3.xxxx, s2, r8.z
 191:   mad r6.w, r16.y, r7.w, r6.w
 192:   sample_c_lz r7.w, r12.zwzz, t3.xxxx, s2, r8.z
 193:   mad r6.w, r16.z, r7.w, r6.w
 194:   sample_c_lz r7.w, r11.xyxx, t3.xxxx, s2, r8.z
 195:   mad r6.w, r16.w, r7.w, r6.w
 196:   sample_c_lz r7.w, r11.zwzz, t3.xxxx, s2, r8.z
 197:   mad r5.w, r5.w, r7.w, r6.w
 198:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 199:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 200:   ge r6.w, l(0.000000), r8.z
 201:   ge r7.w, r8.z, l(1.000000)
 202:   or r6.w, r6.w, r7.w
 203:   movc r5.w, r6.w, l(1.000000), r5.w
 204:   ftoi r6.w, cb1[r2.w + 1024].x
 205:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 206:   max r6.w, r6.w, cb1[r2.w + 1024].y
 207:   mul r3.w, r3.w, r6.w
 208:   mul r3.w, r5.w, r3.w
 209:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 210:   mul r3.w, r3.w, r5.w
 211:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 212:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 213:   dp3 r2.w, r6.xyzx, r6.xyzx
 214:   max r2.w, r2.w, l(0.000000)
 215:   rsq r2.w, r2.w
 216:   mul r6.xyz, r2.wwww, r6.xyzx
 217:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 218:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 219:   mul r2.w, r2.w, r2.w
 220:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 221:   mul r3.w, r3.w, r3.w
 222:   mul r2.w, r2.w, r2.w
 223:   max r3.w, r3.w, l(0.100000)
 224:   mul r2.w, r2.w, r3.w
 225:   mul r2.w, r2.w, l(3.000000)
 226:   div r2.w, l(0.062500), r2.w
 227:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 228:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 229:   iadd r1.w, r1.w, l(1)
 230: endloop 
 231: add o0.xyz, r0.yzwy, r5.xyzx
 232: mov o0.w, l(0.300000)
 233: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r4.xyz, r0.wwww, cb0[4].xyzx
  97: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
  98: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
  99: add o0.xyz, r0.xyzx, r1.xyzx
 100: mov o0.w, l(0.300000)
 101: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r4.xyz, r0.wwww, cb0[4].xyzx
 101: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 102: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 103: add o0.xyz, r0.xyzx, r1.xyzx
 104: mov o0.w, l(0.300000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ftoi r5.w, cb1[r2.w + 1024].x
 125:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 126:   max r5.w, r5.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r5.w
 128:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 129:   mul r3.w, r3.w, r5.w
 130:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 131:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 132:   dp3 r2.w, r6.xyzx, r6.xyzx
 133:   max r2.w, r2.w, l(0.000000)
 134:   rsq r2.w, r2.w
 135:   mul r6.xyz, r2.wwww, r6.xyzx
 136:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 137:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 138:   mul r2.w, r2.w, r2.w
 139:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 140:   mul r3.w, r3.w, r3.w
 141:   mul r2.w, r2.w, r2.w
 142:   max r3.w, r3.w, l(0.100000)
 143:   mul r2.w, r2.w, r3.w
 144:   mul r2.w, r2.w, l(3.000000)
 145:   div r2.w, l(0.062500), r2.w
 146:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 147:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 148:   iadd r1.w, r1.w, l(1)
 149: endloop 
 150: add o0.xyz, r0.yzwy, r5.xyzx
 151: mov o0.w, l(0.300000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ftoi r5.w, cb1[r2.w + 1024].x
 129:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 130:   max r5.w, r5.w, cb1[r2.w + 1024].y
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb3[4].x
  13: mad r1.zw, v4.xxxy, cb3[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb3[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb3[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb3[0].zzzw
  30: mad r0.zw, v4.xxxy, cb3[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb3[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb3[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ftoi r5.w, cb1[r2.w + 1024].x
 125:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 126:   max r5.w, r5.w, cb1[r2.w + 1024].y
 127:   mul r3.w, r3.w, r5.w
 128:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 129:   mul r3.w, r3.w, r5.w
 130:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 131:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 132:   dp3 r2.w, r6.xyzx, r6.xyzx
 133:   max r2.w, r2.w, l(0.000000)
 134:   rsq r2.w, r2.w
 135:   mul r6.xyz, r2.wwww, r6.xyzx
 136:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 137:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 138:   mul r2.w, r2.w, r2.w
 139:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 140:   mul r3.w, r3.w, r3.w
 141:   mul r2.w, r2.w, r2.w
 142:   max r3.w, r3.w, l(0.100000)
 143:   mul r2.w, r2.w, r3.w
 144:   mul r2.w, r2.w, l(3.000000)
 145:   div r2.w, l(0.062500), r2.w
 146:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 147:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 148:   iadd r1.w, r1.w, l(1)
 149: endloop 
 150: add o0.xyz, r0.yzwy, r5.xyzx
 151: mov o0.w, l(0.300000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t5.xyzw, s4
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t3.xyzw, s2
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t4.xyzw, s3
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ftoi r5.w, cb1[r2.w + 1024].x
 129:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 130:   max r5.w, r5.w, cb1[r2.w + 1024].y
 131:   mul r3.w, r3.w, r5.w
 132:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 133:   mul r3.w, r3.w, r5.w
 134:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 135:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 136:   dp3 r2.w, r6.xyzx, r6.xyzx
 137:   max r2.w, r2.w, l(0.000000)
 138:   rsq r2.w, r2.w
 139:   mul r6.xyz, r2.wwww, r6.xyzx
 140:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 141:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 142:   mul r2.w, r2.w, r2.w
 143:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 144:   mul r3.w, r3.w, r3.w
 145:   mul r2.w, r2.w, r2.w
 146:   max r3.w, r3.w, l(0.100000)
 147:   mul r2.w, r2.w, r3.w
 148:   mul r2.w, r2.w, l(3.000000)
 149:   div r2.w, l(0.062500), r2.w
 150:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 151:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 152:   iadd r1.w, r1.w, l(1)
 153: endloop 
 154: add o0.xyz, r0.yzwy, r5.xyzx
 155: mov o0.w, l(0.300000)
 156: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1280], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ishl r5.w, r2.w, l(2)
 125:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 126:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 127:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 128:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 129:   div r8.xyz, r8.xyzx, r8.wwww
 130:   sample_c_lz r5.w, r8.xyxx, t3.xxxx, s2, r8.z
 131:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 132:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 133:   ge r6.w, l(0.000000), r8.z
 134:   ge r7.w, r8.z, l(1.000000)
 135:   or r6.w, r6.w, r7.w
 136:   movc r5.w, r6.w, l(1.000000), r5.w
 137:   ftoi r6.w, cb1[r2.w + 1024].x
 138:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 139:   max r6.w, r6.w, cb1[r2.w + 1024].y
 140:   mul r3.w, r3.w, r6.w
 141:   mul r3.w, r5.w, r3.w
 142:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 143:   mul r3.w, r3.w, r5.w
 144:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 145:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 146:   dp3 r2.w, r6.xyzx, r6.xyzx
 147:   max r2.w, r2.w, l(0.000000)
 148:   rsq r2.w, r2.w
 149:   mul r6.xyz, r2.wwww, r6.xyzx
 150:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 151:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 152:   mul r2.w, r2.w, r2.w
 153:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r2.w, r2.w, r2.w
 156:   max r3.w, r3.w, l(0.100000)
 157:   mul r2.w, r2.w, r3.w
 158:   mul r2.w, r2.w, l(3.000000)
 159:   div r2.w, l(0.062500), r2.w
 160:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 161:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 162:   iadd r1.w, r1.w, l(1)
 163: endloop 
 164: add o0.xyz, r0.yzwy, r5.xyzx
 165: mov o0.w, l(0.300000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ishl r5.w, r2.w, l(2)
 129:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 130:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 131:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 132:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 133:   div r8.xyz, r8.xyzx, r8.wwww
 134:   sample_c_lz r5.w, r8.xyxx, t3.xxxx, s2, r8.z
 135:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 136:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 137:   ge r6.w, l(0.000000), r8.z
 138:   ge r7.w, r8.z, l(1.000000)
 139:   or r6.w, r6.w, r7.w
 140:   movc r5.w, r6.w, l(1.000000), r5.w
 141:   ftoi r6.w, cb1[r2.w + 1024].x
 142:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 143:   max r6.w, r6.w, cb1[r2.w + 1024].y
 144:   mul r3.w, r3.w, r6.w
 145:   mul r3.w, r5.w, r3.w
 146:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 147:   mul r3.w, r3.w, r5.w
 148:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 149:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 150:   dp3 r2.w, r6.xyzx, r6.xyzx
 151:   max r2.w, r2.w, l(0.000000)
 152:   rsq r2.w, r2.w
 153:   mul r6.xyz, r2.wwww, r6.xyzx
 154:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 155:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 156:   mul r2.w, r2.w, r2.w
 157:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 158:   mul r3.w, r3.w, r3.w
 159:   mul r2.w, r2.w, r2.w
 160:   max r3.w, r3.w, l(0.100000)
 161:   mul r2.w, r2.w, r3.w
 162:   mul r2.w, r2.w, l(3.000000)
 163:   div r2.w, l(0.062500), r2.w
 164:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 165:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 166:   iadd r1.w, r1.w, l(1)
 167: endloop 
 168: add o0.xyz, r0.yzwy, r5.xyzx
 169: mov o0.w, l(0.300000)
 170: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 193 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 3 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[1285], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: dp3 r2.w, -r2.xyzx, r1.xyzx
  59: add r2.w, r2.w, r2.w
  60: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  61: dp3_sat r2.w, r1.xyzx, r2.xyzx
  62: add r2.w, -r2.w, l(1.000000)
  63: mul r2.w, r2.w, r2.w
  64: mul r2.w, r2.w, r2.w
  65: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  66: add r3.w, r5.w, l(-1.000000)
  67: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  68: max r3.w, r3.w, l(0.000000)
  69: log r3.w, r3.w
  70: mul r3.w, r3.w, cb2[14].y
  71: exp r3.w, r3.w
  72: mul r3.w, r3.w, cb2[14].x
  73: mul r5.xyz, r5.xyzx, r3.wwww
  74: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  75: mad r2.w, r2.w, l(0.500000), l(0.040000)
  76: mul r5.xyz, r2.wwww, r5.xyzx
  77: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  78: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  79: mul r1.w, r1.w, r2.w
  80: mul r5.xyz, r1.wwww, cb0[4].xyzx
  81: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  82: dp3 r0.x, r6.xyzx, r6.xyzx
  83: max r0.x, r0.x, l(0.000000)
  84: rsq r0.x, r0.x
  85: mul r6.xyz, r0.xxxx, r6.xyzx
  86: dp3_sat r0.x, r1.xyzx, r6.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  88: mul r0.x, r0.x, r0.x
  89: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  90: mul r1.w, r1.w, r1.w
  91: mul r0.x, r0.x, r0.x
  92: max r1.w, r1.w, l(0.100000)
  93: mul r0.x, r0.x, r1.w
  94: mul r0.x, r0.x, l(3.000000)
  95: div r0.x, l(0.062500), r0.x
  96: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
  97: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
  98: min r0.x, cb0[5].x, cb2[10].y
  99: ftoi r0.x, r0.x
 100: mov r5.xyz, r3.xyzx
 101: mov r1.w, l(0)
 102: loop 
 103:   uge r2.w, r1.w, r0.x
 104:   breakc_nz r2.w
 105:   and r2.w, r1.w, l(3)
 106:   ushr r3.w, r1.w, l(2)
 107:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 108:   ftoi r2.w, r2.w
 109:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 110:   dp3 r3.w, r6.xyzx, r6.xyzx
 111:   max r3.w, r3.w, l(0.000061)
 112:   rsq r4.w, r3.w
 113:   mul r7.xyz, r4.wwww, r6.xyzx
 114:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 115:   mul r3.w, r3.w, cb1[r2.w + 512].x
 116:   mad r3.w, -r3.w, r3.w, l(1.000000)
 117:   max r3.w, r3.w, l(0.000000)
 118:   mul r3.w, r3.w, r3.w
 119:   mul r3.w, r3.w, r5.w
 120:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 121:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 122:   mul r5.w, r5.w, r5.w
 123:   mul r3.w, r3.w, r5.w
 124:   ishl r5.w, r2.w, l(2)
 125:   mul r8.xyzw, v1.yyyy, cb3[r5.w + 1].xyzw
 126:   mad r8.xyzw, cb3[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 127:   mad r8.xyzw, cb3[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 128:   add r8.xyzw, r8.xyzw, cb3[r5.w + 3].xyzw
 129:   div r8.xyz, r8.xyzx, r8.wwww
 130:   mad r9.xy, r8.xyxx, cb3[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 131:   round_ni r9.xy, r9.xyxx
 132:   mad r8.xy, r8.xyxx, cb3[1284].zwzz, -r9.xyxx
 133:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 134:   mul r11.xyzw, r10.xxzz, r10.xxzz
 135:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 136:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 137:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 138:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 139:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 140:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 141:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 142:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 143:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 144:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 145:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 146:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 147:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 148:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 149:   mov r12.z, r11.x
 150:   mov r12.w, r8.x
 151:   mov r13.z, r14.x
 152:   mov r13.w, r9.z
 153:   add r10.xyzw, r12.zwxz, r13.zwxz
 154:   mov r11.z, r12.y
 155:   mov r11.w, r8.y
 156:   mov r14.z, r13.y
 157:   mov r14.w, r9.w
 158:   add r8.xyw, r11.zyzw, r14.zyzw
 159:   div r11.xyz, r13.xzwx, r10.zwyz
 160:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 161:   div r12.xyz, r14.zywz, r8.xywx
 162:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 163:   mul r11.xyz, r11.yxzy, cb3[1284].xxxx
 164:   mul r12.xyz, r12.xyzx, cb3[1284].yyyy
 165:   mov r11.w, r12.x
 166:   mad r13.xyzw, r9.xyxy, cb3[1284].xyxy, r11.ywxw
 167:   mad r9.zw, r9.xxxy, cb3[1284].xxxy, r11.zzzw
 168:   mov r12.w, r11.y
 169:   mov r11.yw, r12.yyyz
 170:   mad r14.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xyzy
 171:   mad r12.xyzw, r9.xyxy, cb3[1284].xyxy, r12.wywz
 172:   mad r11.xyzw, r9.xyxy, cb3[1284].xyxy, r11.xwzw
 173:   mul r15.xyzw, r8.xxxy, r10.zwyz
 174:   mul r16.xyzw, r8.yyww, r10.xyzw
 175:   mul r5.w, r8.w, r10.y
 176:   sample_c_lz r6.w, r13.xyxx, t3.xxxx, s2, r8.z
 177:   sample_c_lz r7.w, r13.zwzz, t3.xxxx, s2, r8.z
 178:   mul r7.w, r7.w, r15.y
 179:   mad r6.w, r15.x, r6.w, r7.w
 180:   sample_c_lz r7.w, r9.zwzz, t3.xxxx, s2, r8.z
 181:   mad r6.w, r15.z, r7.w, r6.w
 182:   sample_c_lz r7.w, r12.xyxx, t3.xxxx, s2, r8.z
 183:   mad r6.w, r15.w, r7.w, r6.w
 184:   sample_c_lz r7.w, r14.xyxx, t3.xxxx, s2, r8.z
 185:   mad r6.w, r16.x, r7.w, r6.w
 186:   sample_c_lz r7.w, r14.zwzz, t3.xxxx, s2, r8.z
 187:   mad r6.w, r16.y, r7.w, r6.w
 188:   sample_c_lz r7.w, r12.zwzz, t3.xxxx, s2, r8.z
 189:   mad r6.w, r16.z, r7.w, r6.w
 190:   sample_c_lz r7.w, r11.xyxx, t3.xxxx, s2, r8.z
 191:   mad r6.w, r16.w, r7.w, r6.w
 192:   sample_c_lz r7.w, r11.zwzz, t3.xxxx, s2, r8.z
 193:   mad r5.w, r5.w, r7.w, r6.w
 194:   add r6.w, l(1.000000), -cb3[r2.w + 1024].x
 195:   mad r5.w, r5.w, cb3[r2.w + 1024].x, r6.w
 196:   ge r6.w, l(0.000000), r8.z
 197:   ge r7.w, r8.z, l(1.000000)
 198:   or r6.w, r6.w, r7.w
 199:   movc r5.w, r6.w, l(1.000000), r5.w
 200:   ftoi r6.w, cb1[r2.w + 1024].x
 201:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 202:   max r6.w, r6.w, cb1[r2.w + 1024].y
 203:   mul r3.w, r3.w, r6.w
 204:   mul r3.w, r5.w, r3.w
 205:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 206:   mul r3.w, r3.w, r5.w
 207:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 208:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 209:   dp3 r2.w, r6.xyzx, r6.xyzx
 210:   max r2.w, r2.w, l(0.000000)
 211:   rsq r2.w, r2.w
 212:   mul r6.xyz, r2.wwww, r6.xyzx
 213:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 214:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 215:   mul r2.w, r2.w, r2.w
 216:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 217:   mul r3.w, r3.w, r3.w
 218:   mul r2.w, r2.w, r2.w
 219:   max r3.w, r3.w, l(0.100000)
 220:   mul r2.w, r2.w, r3.w
 221:   mul r2.w, r2.w, l(3.000000)
 222:   div r2.w, l(0.062500), r2.w
 223:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 224:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 225:   iadd r1.w, r1.w, l(1)
 226: endloop 
 227: add o0.xyz, r0.yzwy, r5.xyzx
 228: mov o0.w, l(0.300000)
 229: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 197 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: max r5.xyz, r3.xyzx, cb0[1].xyzx
  59: add r5.xyz, -r3.xyzx, r5.xyzx
  60: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  61: min r3.xyz, r3.xyzx, r5.xyzx
  62: dp3 r2.w, -r2.xyzx, r1.xyzx
  63: add r2.w, r2.w, r2.w
  64: mad r5.xyz, r1.xyzx, -r2.wwww, -r2.xyzx
  65: dp3_sat r2.w, r1.xyzx, r2.xyzx
  66: add r2.w, -r2.w, l(1.000000)
  67: mul r2.w, r2.w, r2.w
  68: mul r2.w, r2.w, r2.w
  69: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  70: add r3.w, r5.w, l(-1.000000)
  71: mad r3.w, cb2[14].w, r3.w, l(1.000000)
  72: max r3.w, r3.w, l(0.000000)
  73: log r3.w, r3.w
  74: mul r3.w, r3.w, cb2[14].y
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, cb2[14].x
  77: mul r5.xyz, r5.xyzx, r3.wwww
  78: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  79: mad r2.w, r2.w, l(0.500000), l(0.040000)
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  82: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  83: mul r1.w, r1.w, r2.w
  84: mul r5.xyz, r1.wwww, cb0[4].xyzx
  85: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, r6.xyzx, r6.xyzx
  87: max r0.x, r0.x, l(0.000000)
  88: rsq r0.x, r0.x
  89: mul r6.xyz, r0.xxxx, r6.xyzx
  90: dp3_sat r0.x, r1.xyzx, r6.xyzx
  91: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  94: mul r1.w, r1.w, r1.w
  95: mul r0.x, r0.x, r0.x
  96: max r1.w, r1.w, l(0.100000)
  97: mul r0.x, r0.x, r1.w
  98: mul r0.x, r0.x, l(3.000000)
  99: div r0.x, l(0.062500), r0.x
 100: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 101: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 102: min r0.x, cb0[5].x, cb2[10].y
 103: ftoi r0.x, r0.x
 104: mov r5.xyz, r3.xyzx
 105: mov r1.w, l(0)
 106: loop 
 107:   uge r2.w, r1.w, r0.x
 108:   breakc_nz r2.w
 109:   and r2.w, r1.w, l(3)
 110:   ushr r3.w, r1.w, l(2)
 111:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 112:   ftoi r2.w, r2.w
 113:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 114:   dp3 r3.w, r6.xyzx, r6.xyzx
 115:   max r3.w, r3.w, l(0.000061)
 116:   rsq r4.w, r3.w
 117:   mul r7.xyz, r4.wwww, r6.xyzx
 118:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 119:   mul r3.w, r3.w, cb1[r2.w + 512].x
 120:   mad r3.w, -r3.w, r3.w, l(1.000000)
 121:   max r3.w, r3.w, l(0.000000)
 122:   mul r3.w, r3.w, r3.w
 123:   mul r3.w, r3.w, r5.w
 124:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 125:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 126:   mul r5.w, r5.w, r5.w
 127:   mul r3.w, r3.w, r5.w
 128:   ishl r5.w, r2.w, l(2)
 129:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 130:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 131:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 132:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 133:   div r8.xyz, r8.xyzx, r8.wwww
 134:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 135:   round_ni r9.xy, r9.xyxx
 136:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 137:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 138:   mul r11.xyzw, r10.xxzz, r10.xxzz
 139:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 140:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 141:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 142:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 143:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 144:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 145:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 146:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 147:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 148:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 149:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 150:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 151:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 152:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 153:   mov r12.z, r11.x
 154:   mov r12.w, r8.x
 155:   mov r13.z, r14.x
 156:   mov r13.w, r9.z
 157:   add r10.xyzw, r12.zwxz, r13.zwxz
 158:   mov r11.z, r12.y
 159:   mov r11.w, r8.y
 160:   mov r14.z, r13.y
 161:   mov r14.w, r9.w
 162:   add r8.xyw, r11.zyzw, r14.zyzw
 163:   div r11.xyz, r13.xzwx, r10.zwyz
 164:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 165:   div r12.xyz, r14.zywz, r8.xywx
 166:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 167:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 168:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 169:   mov r11.w, r12.x
 170:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 171:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 172:   mov r12.w, r11.y
 173:   mov r11.yw, r12.yyyz
 174:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 175:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 176:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 177:   mul r15.xyzw, r8.xxxy, r10.zwyz
 178:   mul r16.xyzw, r8.yyww, r10.xyzw
 179:   mul r5.w, r8.w, r10.y
 180:   sample_c_lz r6.w, r13.xyxx, t3.xxxx, s2, r8.z
 181:   sample_c_lz r7.w, r13.zwzz, t3.xxxx, s2, r8.z
 182:   mul r7.w, r7.w, r15.y
 183:   mad r6.w, r15.x, r6.w, r7.w
 184:   sample_c_lz r7.w, r9.zwzz, t3.xxxx, s2, r8.z
 185:   mad r6.w, r15.z, r7.w, r6.w
 186:   sample_c_lz r7.w, r12.xyxx, t3.xxxx, s2, r8.z
 187:   mad r6.w, r15.w, r7.w, r6.w
 188:   sample_c_lz r7.w, r14.xyxx, t3.xxxx, s2, r8.z
 189:   mad r6.w, r16.x, r7.w, r6.w
 190:   sample_c_lz r7.w, r14.zwzz, t3.xxxx, s2, r8.z
 191:   mad r6.w, r16.y, r7.w, r6.w
 192:   sample_c_lz r7.w, r12.zwzz, t3.xxxx, s2, r8.z
 193:   mad r6.w, r16.z, r7.w, r6.w
 194:   sample_c_lz r7.w, r11.xyxx, t3.xxxx, s2, r8.z
 195:   mad r6.w, r16.w, r7.w, r6.w
 196:   sample_c_lz r7.w, r11.zwzz, t3.xxxx, s2, r8.z
 197:   mad r5.w, r5.w, r7.w, r6.w
 198:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 199:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 200:   ge r6.w, l(0.000000), r8.z
 201:   ge r7.w, r8.z, l(1.000000)
 202:   or r6.w, r6.w, r7.w
 203:   movc r5.w, r6.w, l(1.000000), r5.w
 204:   ftoi r6.w, cb1[r2.w + 1024].x
 205:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 206:   max r6.w, r6.w, cb1[r2.w + 1024].y
 207:   mul r3.w, r3.w, r6.w
 208:   mul r3.w, r5.w, r3.w
 209:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 210:   mul r3.w, r3.w, r5.w
 211:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 212:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 213:   dp3 r2.w, r6.xyzx, r6.xyzx
 214:   max r2.w, r2.w, l(0.000000)
 215:   rsq r2.w, r2.w
 216:   mul r6.xyz, r2.wwww, r6.xyzx
 217:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 218:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 219:   mul r2.w, r2.w, r2.w
 220:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 221:   mul r3.w, r3.w, r3.w
 222:   mul r2.w, r2.w, r2.w
 223:   max r3.w, r3.w, l(0.100000)
 224:   mul r2.w, r2.w, r3.w
 225:   mul r2.w, r2.w, l(3.000000)
 226:   div r2.w, l(0.062500), r2.w
 227:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 228:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 229:   iadd r1.w, r1.w, l(1)
 230: endloop 
 231: add o0.xyz, r0.yzwy, r5.xyzx
 232: mov o0.w, l(0.300000)
 233: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 2 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb2[4].x
   9: mad r0.zw, v4.xxxy, cb2[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb2[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb2[0].zwzz
  15: mad r1.xy, v4.xyxx, cb2[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb2[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb2[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb2[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: mul r0.w, cb1[10].z, cb1[13].x
  95: mul r0.w, r2.x, r0.w
  96: mul r2.xyz, r0.wwww, cb0[4].xyzx
  97: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
  98: add o0.xyz, r0.xyzx, r1.xyzx
  99: mov o0.w, l(0.300000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_CameraOpaqueTexture" to slot 3 sampler slot 2
Set 2D Texture "Texture2D_FE0BAE36" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_E192FBFC" to slot 5 sampler slot 4

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t5.xyzw, s4
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t3.xyzw, s2
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: max r6.xyz, r5.xyzx, cb0[1].xyzx
  78: add r6.xyz, -r5.xyzx, r6.xyzx
  79: mad r6.xyz, cb2[29].xxxx, r6.xyzx, r5.xyzx
  80: min r5.xyz, r5.xyzx, r6.xyzx
  81: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  82: dp3 r0.w, r4.xyzx, r4.xyzx
  83: max r0.w, r0.w, l(0.000000)
  84: rsq r0.w, r0.w
  85: mul r4.xyz, r0.wwww, r4.xyzx
  86: dp3_sat r0.w, r2.xyzx, r4.xyzx
  87: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  88: mul r1.w, r1.w, r1.w
  89: max r1.w, r1.w, l(0.100000)
  90: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  91: mul r0.w, r0.w, r0.w
  92: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  93: mul r0.w, r0.w, r0.w
  94: mul r0.w, r1.w, r0.w
  95: mul r0.w, r0.w, l(3.000000)
  96: div r0.w, l(0.062500), r0.w
  97: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  98: mul r0.w, cb1[10].z, cb1[13].x
  99: mul r0.w, r2.x, r0.w
 100: mul r2.xyz, r0.wwww, cb0[4].xyzx
 101: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 102: add o0.xyz, r0.xyzx, r1.xyzx
 103: mov o0.w, l(0.300000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: sample_c_lz r0.w, v9.xyxx, t3.xxxx, s2, v9.z
  95: add r1.w, -cb2[29].x, l(1.000000)
  96: mad r0.w, r0.w, cb2[29].x, r1.w
  97: ge r1.w, l(0.000000), v9.z
  98: ge r3.w, v9.z, l(1.000000)
  99: or r1.w, r1.w, r3.w
 100: movc r0.w, r1.w, l(1.000000), r0.w
 101: mul r1.w, cb1[10].z, cb1[13].x
 102: mul r0.w, r0.w, r1.w
 103: mul r0.w, r2.x, r0.w
 104: mul r4.xyz, r0.wwww, cb0[4].xyzx
 105: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 106: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 107: add o0.xyz, r0.xyzx, r1.xyzx
 108: mov o0.w, l(0.300000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: sample_c_lz r1.w, v9.xyxx, t3.xxxx, s2, v9.z
  44: add r2.w, -cb2[29].x, l(1.000000)
  45: mad r1.w, r1.w, cb2[29].x, r2.w
  46: ge r2.w, l(0.000000), v9.z
  47: ge r3.x, v9.z, l(1.000000)
  48: or r2.w, r2.w, r3.x
  49: movc r1.w, r2.w, l(1.000000), r1.w
  50: add r2.w, -r1.w, l(1.000000)
  51: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  52: log r3.w, |r3.w|
  53: mul r3.w, r3.w, l(2.200000)
  54: exp r3.w, r3.w
  55: mul r3.w, r3.w, l(34.493240)
  56: mul r3.xyz, r3.wwww, r3.xyzx
  57: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  58: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  59: max r3.w, r4.w, l(0.000100)
  60: dp3 r4.x, r2.xyzx, r4.xyzx
  61: add r4.x, r4.x, l(0.500000)
  62: mul r3.xyz, r3.xyzx, r4.xxxx
  63: div r3.xyz, r3.xyzx, r3.wwww
  64: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  65: mul r4.xyz, r3.wwww, cb0[4].xyzx
  66: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  67: max r4.xyz, r4.xyzx, cb0[1].xyzx
  68: add r4.xyz, -r3.xyzx, r4.xyzx
  69: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  70: min r3.xyz, r3.xyzx, r4.xyzx
  71: mul r4.xyz, r0.wwww, v5.xyzx
  72: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  73: dp3 r0.w, -r4.xyzx, r2.xyzx
  74: add r0.w, r0.w, r0.w
  75: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  76: dp3_sat r0.w, r2.xyzx, r4.xyzx
  77: add r0.w, -r0.w, l(1.000000)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r0.w, r0.w
  80: mad r0.w, r0.w, l(0.500000), l(0.040000)
  81: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  82: add r2.w, r4.w, l(-1.000000)
  83: mad r2.w, cb1[14].w, r2.w, l(1.000000)
  84: max r2.w, r2.w, l(0.000000)
  85: log r2.w, r2.w
  86: mul r2.w, r2.w, cb1[14].y
  87: exp r2.w, r2.w
  88: mul r2.w, r2.w, cb1[14].x
  89: mul r4.xyz, r4.xyzx, r2.wwww
  90: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  91: mul r4.xyz, r0.wwww, r4.xyzx
  92: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
  93: dp3 r0.w, r5.xyzx, r5.xyzx
  94: max r0.w, r0.w, l(0.000000)
  95: rsq r0.w, r0.w
  96: mul r4.xyz, r0.wwww, r5.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
  99: mul r2.x, r2.x, r2.x
 100: max r2.x, r2.x, l(0.100000)
 101: mul r0.w, r0.w, r0.w
 102: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 103: mul r0.w, r0.w, r0.w
 104: mul r0.w, r2.x, r0.w
 105: mul r0.w, r0.w, l(3.000000)
 106: div r0.w, l(0.062500), r0.w
 107: mad r2.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 108: mul r0.w, cb1[10].z, cb1[13].x
 109: mul r0.w, r1.w, r0.w
 110: mul r0.w, r3.w, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t6.xyzw, s5
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 138: log r0.x, |r6.w|
 139: mul r0.x, r0.x, l(2.200000)
 140: exp r0.x, r0.x
 141: mul r0.x, r0.x, l(34.493240)
 142: mul r6.xyz, r0.xxxx, r6.xyzx
 143: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 144: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 145: max r0.x, r7.w, l(0.000100)
 146: dp3 r1.w, r0.yzwy, r7.xyzx
 147: add r1.w, r1.w, l(0.500000)
 148: mul r6.xyz, r1.wwww, r6.xyzx
 149: div r6.xyz, r6.xyzx, r0.xxxx
 150: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 151: dp3 r0.x, r5.xyzx, r5.xyzx
 152: max r0.x, r0.x, l(0.000000)
 153: rsq r0.x, r0.x
 154: mul r5.xyz, r0.xxxx, r5.xyzx
 155: dp3_sat r0.x, r0.yzwy, r5.xyzx
 156: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 157: mul r0.xy, r0.xyxx, r0.xyxx
 158: max r0.y, r0.y, l(0.100000)
 159: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 160: mul r0.x, r0.x, r0.x
 161: mul r0.x, r0.y, r0.x
 162: mul r0.x, r0.x, l(3.000000)
 163: div r0.x, l(0.062500), r0.x
 164: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 165: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 166: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 167: add o0.xyz, r1.xyzx, r0.xyzx
 168: mov o0.w, l(0.300000)
 169: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  70: log r0.z, |r1.w|
  71: mul r0.z, r0.z, l(2.200000)
  72: exp r0.z, r0.z
  73: mul r0.z, r0.z, l(34.493240)
  74: mul r1.xyz, r0.zzzz, r1.xyzx
  75: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  76: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  77: max r0.z, r2.w, l(0.000100)
  78: dp3 r0.w, v2.xyzx, v2.xyzx
  79: rsq r1.w, r0.w
  80: sqrt r0.w, r0.w
  81: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  82: mul r3.xyz, r0.wwww, v2.xyzx
  83: mul r4.xyz, r1.wwww, v2.xyzx
  84: dp3 r0.w, r4.xyzx, r2.xyzx
  85: add r0.w, r0.w, l(0.500000)
  86: mul r1.xyz, r0.wwww, r1.xyzx
  87: div r1.xyz, r1.xyzx, r0.zzzz
  88: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  89: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  90: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  91: max r2.xyz, r2.xyzx, cb0[1].xyzx
  92: add r2.xyz, -r1.xyzx, r2.xyzx
  93: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  94: min r1.xyz, r1.xyzx, r2.xyzx
  95: dp3 r0.y, r3.xyzx, r3.xyzx
  96: rsq r0.y, r0.y
  97: mul r2.xyz, r0.yyyy, r3.xyzx
  98: dp3 r0.y, v5.xyzx, v5.xyzx
  99: rsq r0.w, r0.y
 100: max r0.y, r0.y, l(0.000000)
 101: rsq r0.y, r0.y
 102: mul r3.xyz, r0.wwww, v5.xyzx
 103: dp3_sat r0.w, r2.xyzx, r3.xyzx
 104: add r0.w, -r0.w, l(1.000000)
 105: log r0.w, r0.w
 106: mul r0.w, r0.w, cb3[1].x
 107: exp r0.w, r0.w
 108: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 109: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 110: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 111: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 112: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 113: mul_sat r2.xyz, r0.wwww, r2.xyzx
 114: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 115: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 116: mul r3.xyz, v1.yyyy, cb0[62].xywx
 117: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 118: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 119: add r3.xyz, r3.xyzx, cb0[64].xywx
 120: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 121: mul r5.w, r5.y, cb0[12].x
 122: add r3.xy, r5.zzzz, r5.xwxx
 123: div r3.xy, r3.xyxx, r3.zzzz
 124: mul r0.w, cb0[10].x, cb3[4].x
 125: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 126: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 127: mul r3.zw, r3.xxxy, r5.xxxy
 128: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 129: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 130: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 131: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 132: mul r5.xyz, r0.yyyy, v5.xyzx
 133: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 134: dp3 r0.y, -r5.xyzx, r4.xyzx
 135: add r0.y, r0.y, r0.y
 136: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 137: dp3_sat r0.y, r4.xyzx, r5.xyzx
 138: add r0.y, -r0.y, l(1.000000)
 139: mul r0.y, r0.y, r0.y
 140: mul r0.y, r0.y, r0.y
 141: mad r0.y, r0.y, l(0.500000), l(0.040000)
 142: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r0.w, r5.w, l(-1.000000)
 144: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 145: max r0.w, r0.w, l(0.000000)
 146: log r0.w, r0.w
 147: mul r0.w, r0.w, cb1[14].y
 148: exp r0.w, r0.w
 149: mul r0.w, r0.w, cb1[14].x
 150: mul r5.xyz, r5.xyzx, r0.wwww
 151: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mul r5.xyz, r0.yyyy, r5.xyzx
 153: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 154: mul r0.y, cb1[10].z, cb1[13].x
 155: mul r0.x, r0.x, r0.y
 156: mul r0.x, r0.z, r0.x
 157: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 158: dp3 r0.w, r6.xyzx, r6.xyzx
 159: max r0.w, r0.w, l(0.000000)
 160: rsq r0.w, r0.w
 161: mul r5.xyz, r0.wwww, r6.xyzx
 162: dp3_sat r0.w, r4.xyzx, r5.xyzx
 163: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 164: mul r1.w, r1.w, r1.w
 165: max r1.w, r1.w, l(0.100000)
 166: mul r0.w, r0.w, r0.w
 167: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 168: mul r0.w, r0.w, r0.w
 169: mul r0.w, r1.w, r0.w
 170: mul r0.w, r0.w, l(3.000000)
 171: div r0.w, l(0.062500), r0.w
 172: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r2.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: sample_c_lz r0.w, v9.xyxx, t3.xxxx, s2, v9.z
  95: add r1.w, -cb2[29].x, l(1.000000)
  96: mad r0.w, r0.w, cb2[29].x, r1.w
  97: ge r1.w, l(0.000000), v9.z
  98: ge r3.w, v9.z, l(1.000000)
  99: or r1.w, r1.w, r3.w
 100: movc r0.w, r1.w, l(1.000000), r0.w
 101: mul r1.w, cb1[10].z, cb1[13].x
 102: mul r0.w, r0.w, r1.w
 103: mul r0.w, r2.x, r0.w
 104: mul r4.xyz, r0.wwww, cb0[4].xyzx
 105: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 106: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 107: add o0.xyz, r0.xyzx, r1.xyzx
 108: mov o0.w, l(0.300000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: sample_c_lz r1.w, v9.xyxx, t3.xxxx, s2, v9.z
  44: add r2.w, -cb2[29].x, l(1.000000)
  45: mad r1.w, r1.w, cb2[29].x, r2.w
  46: ge r2.w, l(0.000000), v9.z
  47: ge r3.x, v9.z, l(1.000000)
  48: or r2.w, r2.w, r3.x
  49: movc r1.w, r2.w, l(1.000000), r1.w
  50: add r2.w, -r1.w, l(1.000000)
  51: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  52: log r3.w, |r3.w|
  53: mul r3.w, r3.w, l(2.200000)
  54: exp r3.w, r3.w
  55: mul r3.w, r3.w, l(34.493240)
  56: mul r3.xyz, r3.wwww, r3.xyzx
  57: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  58: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  59: max r3.w, r4.w, l(0.000100)
  60: dp3 r4.x, r2.xyzx, r4.xyzx
  61: add r4.x, r4.x, l(0.500000)
  62: mul r3.xyz, r3.xyzx, r4.xxxx
  63: div r3.xyz, r3.xyzx, r3.wwww
  64: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  65: mul r4.xyz, r3.wwww, cb0[4].xyzx
  66: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  67: max r4.xyz, r4.xyzx, cb0[1].xyzx
  68: add r4.xyz, -r3.xyzx, r4.xyzx
  69: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  70: min r3.xyz, r3.xyzx, r4.xyzx
  71: mul r4.xyz, r0.wwww, v5.xyzx
  72: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  73: dp3 r0.w, -r4.xyzx, r2.xyzx
  74: add r0.w, r0.w, r0.w
  75: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  76: dp3_sat r0.w, r2.xyzx, r4.xyzx
  77: add r0.w, -r0.w, l(1.000000)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r0.w, r0.w
  80: mad r0.w, r0.w, l(0.500000), l(0.040000)
  81: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  82: add r2.w, r4.w, l(-1.000000)
  83: mad r2.w, cb1[14].w, r2.w, l(1.000000)
  84: max r2.w, r2.w, l(0.000000)
  85: log r2.w, r2.w
  86: mul r2.w, r2.w, cb1[14].y
  87: exp r2.w, r2.w
  88: mul r2.w, r2.w, cb1[14].x
  89: mul r4.xyz, r4.xyzx, r2.wwww
  90: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  91: mul r4.xyz, r0.wwww, r4.xyzx
  92: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
  93: dp3 r0.w, r5.xyzx, r5.xyzx
  94: max r0.w, r0.w, l(0.000000)
  95: rsq r0.w, r0.w
  96: mul r4.xyz, r0.wwww, r5.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
  99: mul r2.x, r2.x, r2.x
 100: max r2.x, r2.x, l(0.100000)
 101: mul r0.w, r0.w, r0.w
 102: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 103: mul r0.w, r0.w, r0.w
 104: mul r0.w, r2.x, r0.w
 105: mul r0.w, r0.w, l(3.000000)
 106: div r0.w, l(0.062500), r0.w
 107: mad r2.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 108: mul r0.w, cb1[10].z, cb1[13].x
 109: mul r0.w, r1.w, r0.w
 110: mul r0.w, r3.w, r0.w
 111: mul r4.xyz, r0.wwww, cb0[4].xyzx
 112: mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
 113: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 114: add o0.xyz, r0.xyzx, r1.xyzx
 115: mov o0.w, l(0.300000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: mul r0.y, cb1[10].z, cb1[13].x
  69: mul r0.x, r0.x, r0.y
  70: dp3 r0.y, v2.xyzx, v2.xyzx
  71: rsq r0.z, r0.y
  72: sqrt r0.y, r0.y
  73: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  74: mul r1.xyz, r0.yyyy, v2.xyzx
  75: mul r0.yzw, r0.zzzz, v2.xxyz
  76: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  77: mul r0.x, r0.x, r1.w
  78: mul r2.xyz, r0.xxxx, cb0[4].xyzx
  79: dp3 r0.x, v5.xyzx, v5.xyzx
  80: max r1.w, r0.x, l(0.000000)
  81: rsq r0.x, r0.x
  82: mul r3.xyz, r0.xxxx, v5.xyzx
  83: rsq r0.x, r1.w
  84: mul r4.xyz, r0.xxxx, v5.xyzx
  85: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  86: dp3 r0.x, -r4.xyzx, r0.yzwy
  87: add r0.x, r0.x, r0.x
  88: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
  89: dp3_sat r0.x, r0.yzwy, r4.xyzx
  90: add r0.x, -r0.x, l(1.000000)
  91: mul r0.x, r0.x, r0.x
  92: mul r0.x, r0.x, r0.x
  93: mad r0.x, r0.x, l(0.500000), l(0.040000)
  94: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  95: add r1.w, r4.w, l(-1.000000)
  96: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  97: max r1.w, r1.w, l(0.000000)
  98: log r1.w, r1.w
  99: mul r1.w, r1.w, cb1[14].y
 100: exp r1.w, r1.w
 101: mul r1.w, r1.w, cb1[14].x
 102: mul r4.xyz, r4.xyzx, r1.wwww
 103: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 104: mul r4.xyz, r0.xxxx, r4.xyzx
 105: dp3 r0.x, r1.xyzx, r1.xyzx
 106: rsq r0.x, r0.x
 107: mul r1.xyz, r0.xxxx, r1.xyzx
 108: dp3_sat r0.x, r1.xyzx, r3.xyzx
 109: add r0.x, -r0.x, l(1.000000)
 110: log r0.x, r0.x
 111: mul r0.x, r0.x, cb3[1].x
 112: exp r0.x, r0.x
 113: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 114: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 115: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
 116: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 117: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 118: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r6.w, r6.y, cb0[12].x
 127: add r3.xy, r6.zzzz, r6.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r0.x, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 131: sample r6.xyzw, r3.zwzz, t6.xyzw, s5
 132: mul r3.zw, r3.xxxy, r6.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 138: log r0.x, |r6.w|
 139: mul r0.x, r0.x, l(2.200000)
 140: exp r0.x, r0.x
 141: mul r0.x, r0.x, l(34.493240)
 142: mul r6.xyz, r0.xxxx, r6.xyzx
 143: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 144: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 145: max r0.x, r7.w, l(0.000100)
 146: dp3 r1.w, r0.yzwy, r7.xyzx
 147: add r1.w, r1.w, l(0.500000)
 148: mul r6.xyz, r1.wwww, r6.xyzx
 149: div r6.xyz, r6.xyzx, r0.xxxx
 150: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 151: dp3 r0.x, r5.xyzx, r5.xyzx
 152: max r0.x, r0.x, l(0.000000)
 153: rsq r0.x, r0.x
 154: mul r5.xyz, r0.xxxx, r5.xyzx
 155: dp3_sat r0.x, r0.yzwy, r5.xyzx
 156: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 157: mul r0.xy, r0.xyxx, r0.xyxx
 158: max r0.y, r0.y, l(0.100000)
 159: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 160: mul r0.x, r0.x, r0.x
 161: mul r0.x, r0.y, r0.x
 162: mul r0.x, r0.x, l(3.000000)
 163: div r0.x, l(0.062500), r0.x
 164: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 165: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 166: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 167: add o0.xyz, r1.xyzx, r0.xyzx
 168: mov o0.w, l(0.300000)
 169: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mul r2.xyzw, r0.yyyy, cb3[1].xyzw
  61: mad r2.xyzw, cb3[0].xyzw, r0.xxxx, r2.xyzw
  62: mad r2.xyzw, cb3[2].xyzw, r0.zzzz, r2.xyzw
  63: add o9.xyzw, r2.xyzw, cb3[3].xyzw
  64: mov o3.w, v2.w
  65: mov o4.xyzw, v3.xyzw
  66: mov o8.x, l(0)
  67: mov o1.xyz, r0.xyzx
  68: mov o2.xyz, r1.xyzx
  69: mov o7.xyz, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  70: log r0.z, |r1.w|
  71: mul r0.z, r0.z, l(2.200000)
  72: exp r0.z, r0.z
  73: mul r0.z, r0.z, l(34.493240)
  74: mul r1.xyz, r0.zzzz, r1.xyzx
  75: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  76: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  77: max r0.z, r2.w, l(0.000100)
  78: dp3 r0.w, v2.xyzx, v2.xyzx
  79: rsq r1.w, r0.w
  80: sqrt r0.w, r0.w
  81: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  82: mul r3.xyz, r0.wwww, v2.xyzx
  83: mul r4.xyz, r1.wwww, v2.xyzx
  84: dp3 r0.w, r4.xyzx, r2.xyzx
  85: add r0.w, r0.w, l(0.500000)
  86: mul r1.xyz, r0.wwww, r1.xyzx
  87: div r1.xyz, r1.xyzx, r0.zzzz
  88: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  89: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  90: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  91: max r2.xyz, r2.xyzx, cb0[1].xyzx
  92: add r2.xyz, -r1.xyzx, r2.xyzx
  93: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  94: min r1.xyz, r1.xyzx, r2.xyzx
  95: dp3 r0.y, r3.xyzx, r3.xyzx
  96: rsq r0.y, r0.y
  97: mul r2.xyz, r0.yyyy, r3.xyzx
  98: dp3 r0.y, v5.xyzx, v5.xyzx
  99: rsq r0.w, r0.y
 100: max r0.y, r0.y, l(0.000000)
 101: rsq r0.y, r0.y
 102: mul r3.xyz, r0.wwww, v5.xyzx
 103: dp3_sat r0.w, r2.xyzx, r3.xyzx
 104: add r0.w, -r0.w, l(1.000000)
 105: log r0.w, r0.w
 106: mul r0.w, r0.w, cb3[1].x
 107: exp r0.w, r0.w
 108: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 109: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 110: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 111: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 112: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 113: mul_sat r2.xyz, r0.wwww, r2.xyzx
 114: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 115: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 116: mul r3.xyz, v1.yyyy, cb0[62].xywx
 117: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 118: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 119: add r3.xyz, r3.xyzx, cb0[64].xywx
 120: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 121: mul r5.w, r5.y, cb0[12].x
 122: add r3.xy, r5.zzzz, r5.xwxx
 123: div r3.xy, r3.xyxx, r3.zzzz
 124: mul r0.w, cb0[10].x, cb3[4].x
 125: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 126: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 127: mul r3.zw, r3.xxxy, r5.xxxy
 128: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 129: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 130: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 131: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 132: mul r5.xyz, r0.yyyy, v5.xyzx
 133: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 134: dp3 r0.y, -r5.xyzx, r4.xyzx
 135: add r0.y, r0.y, r0.y
 136: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 137: dp3_sat r0.y, r4.xyzx, r5.xyzx
 138: add r0.y, -r0.y, l(1.000000)
 139: mul r0.y, r0.y, r0.y
 140: mul r0.y, r0.y, r0.y
 141: mad r0.y, r0.y, l(0.500000), l(0.040000)
 142: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r0.w, r5.w, l(-1.000000)
 144: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 145: max r0.w, r0.w, l(0.000000)
 146: log r0.w, r0.w
 147: mul r0.w, r0.w, cb1[14].y
 148: exp r0.w, r0.w
 149: mul r0.w, r0.w, cb1[14].x
 150: mul r5.xyz, r5.xyzx, r0.wwww
 151: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mul r5.xyz, r0.yyyy, r5.xyzx
 153: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 154: mul r0.y, cb1[10].z, cb1[13].x
 155: mul r0.x, r0.x, r0.y
 156: mul r0.x, r0.z, r0.x
 157: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 158: dp3 r0.w, r6.xyzx, r6.xyzx
 159: max r0.w, r0.w, l(0.000000)
 160: rsq r0.w, r0.w
 161: mul r5.xyz, r0.wwww, r6.xyzx
 162: dp3_sat r0.w, r4.xyzx, r5.xyzx
 163: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 164: mul r1.w, r1.w, r1.w
 165: max r1.w, r1.w, l(0.100000)
 166: mul r0.w, r0.w, r0.w
 167: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 168: mul r0.w, r0.w, r0.w
 169: mul r0.w, r1.w, r0.w
 170: mul r0.w, r0.w, l(3.000000)
 171: div r0.w, l(0.062500), r0.w
 172: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 174: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 175: add o0.xyz, r2.xyzx, r0.xyzx
 176: mov o0.w, l(0.300000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: sample_c_lz r2.w, v9.xyxx, t3.xxxx, s2, v9.z
  59: add r3.w, -cb3[29].x, l(1.000000)
  60: mad r2.w, r2.w, cb3[29].x, r3.w
  61: ge r3.w, l(0.000000), v9.z
  62: ge r4.w, v9.z, l(1.000000)
  63: or r3.w, r3.w, r4.w
  64: movc r2.w, r3.w, l(1.000000), r2.w
  65: dp3 r3.w, -r2.xyzx, r1.xyzx
  66: add r3.w, r3.w, r3.w
  67: mad r5.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  68: dp3_sat r3.w, r1.xyzx, r2.xyzx
  69: add r3.w, -r3.w, l(1.000000)
  70: mul r3.w, r3.w, r3.w
  71: mul r3.w, r3.w, r3.w
  72: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  73: add r4.w, r5.w, l(-1.000000)
  74: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  75: max r4.w, r4.w, l(0.000000)
  76: log r4.w, r4.w
  77: mul r4.w, r4.w, cb2[14].y
  78: exp r4.w, r4.w
  79: mul r4.w, r4.w, cb2[14].x
  80: mul r5.xyz, r5.xyzx, r4.wwww
  81: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  82: mad r3.w, r3.w, l(0.500000), l(0.040000)
  83: mul r5.xyz, r3.wwww, r5.xyzx
  84: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  85: mul r1.w, r1.w, r2.w
  86: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  87: mul r1.w, r1.w, r2.w
  88: mul r5.xyz, r1.wwww, cb0[4].xyzx
  89: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  90: dp3 r0.x, r6.xyzx, r6.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mul r6.xyz, r0.xxxx, r6.xyzx
  94: dp3_sat r0.x, r1.xyzx, r6.xyzx
  95: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  96: mul r0.x, r0.x, r0.x
  97: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  98: mul r1.w, r1.w, r1.w
  99: mul r0.x, r0.x, r0.x
 100: max r1.w, r1.w, l(0.100000)
 101: mul r0.x, r0.x, r1.w
 102: mul r0.x, r0.x, l(3.000000)
 103: div r0.x, l(0.062500), r0.x
 104: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 105: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 106: min r0.x, cb0[5].x, cb2[10].y
 107: ftoi r0.x, r0.x
 108: mov r5.xyz, r3.xyzx
 109: mov r1.w, l(0)
 110: loop 
 111:   uge r2.w, r1.w, r0.x
 112:   breakc_nz r2.w
 113:   and r2.w, r1.w, l(3)
 114:   ushr r3.w, r1.w, l(2)
 115:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 116:   ftoi r2.w, r2.w
 117:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 118:   dp3 r3.w, r6.xyzx, r6.xyzx
 119:   max r3.w, r3.w, l(0.000061)
 120:   rsq r4.w, r3.w
 121:   mul r7.xyz, r4.wwww, r6.xyzx
 122:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 123:   mul r3.w, r3.w, cb1[r2.w + 512].x
 124:   mad r3.w, -r3.w, r3.w, l(1.000000)
 125:   max r3.w, r3.w, l(0.000000)
 126:   mul r3.w, r3.w, r3.w
 127:   mul r3.w, r3.w, r5.w
 128:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 129:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 130:   mul r5.w, r5.w, r5.w
 131:   mul r3.w, r3.w, r5.w
 132:   ftoi r5.w, cb1[r2.w + 1024].x
 133:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 134:   max r5.w, r5.w, cb1[r2.w + 1024].y
 135:   mul r3.w, r3.w, r5.w
 136:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 137:   mul r3.w, r3.w, r5.w
 138:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 139:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 140:   dp3 r2.w, r6.xyzx, r6.xyzx
 141:   max r2.w, r2.w, l(0.000000)
 142:   rsq r2.w, r2.w
 143:   mul r6.xyz, r2.wwww, r6.xyzx
 144:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 145:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 146:   mul r2.w, r2.w, r2.w
 147:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 148:   mul r3.w, r3.w, r3.w
 149:   mul r2.w, r2.w, r2.w
 150:   max r3.w, r3.w, l(0.100000)
 151:   mul r2.w, r2.w, r3.w
 152:   mul r2.w, r2.w, l(3.000000)
 153:   div r2.w, l(0.062500), r2.w
 154:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 155:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 156:   iadd r1.w, r1.w, l(1)
 157: endloop 
 158: add o0.xyz, r0.yzwy, r5.xyzx
 159: mov o0.w, l(0.300000)
 160: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: sample_c_lz r2.w, v9.xyxx, t3.xxxx, s2, v9.z
  59: add r3.w, -cb3[29].x, l(1.000000)
  60: mad r2.w, r2.w, cb3[29].x, r3.w
  61: ge r3.w, l(0.000000), v9.z
  62: ge r4.w, v9.z, l(1.000000)
  63: or r3.w, r3.w, r4.w
  64: movc r2.w, r3.w, l(1.000000), r2.w
  65: dp3_sat r3.w, cb0[3].xyzx, r1.xyzx
  66: mul r5.xyz, r3.wwww, cb0[4].xyzx
  67: add r4.w, -r2.w, l(1.000000)
  68: mad r5.xyz, -r5.xyzx, r4.wwww, r3.xyzx
  69: max r5.xyz, r5.xyzx, cb0[1].xyzx
  70: add r5.xyz, -r3.xyzx, r5.xyzx
  71: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  72: min r3.xyz, r3.xyzx, r5.xyzx
  73: dp3 r4.w, -r2.xyzx, r1.xyzx
  74: add r4.w, r4.w, r4.w
  75: mad r5.xyz, r1.xyzx, -r4.wwww, -r2.xyzx
  76: dp3_sat r4.w, r1.xyzx, r2.xyzx
  77: add r4.w, -r4.w, l(1.000000)
  78: mul r4.w, r4.w, r4.w
  79: mul r4.w, r4.w, r4.w
  80: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r5.w, r5.w, l(-1.000000)
  82: mad r5.w, cb2[14].w, r5.w, l(1.000000)
  83: max r5.w, r5.w, l(0.000000)
  84: log r5.w, r5.w
  85: mul r5.w, r5.w, cb2[14].y
  86: exp r5.w, r5.w
  87: mul r5.w, r5.w, cb2[14].x
  88: mul r5.xyz, r5.xyzx, r5.wwww
  89: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r4.w, r4.w, l(0.500000), l(0.040000)
  91: mul r5.xyz, r4.wwww, r5.xyzx
  92: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  93: mul r1.w, r1.w, r2.w
  94: mul r1.w, r3.w, r1.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   ftoi r5.w, cb1[r2.w + 1024].x
 140:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 141:   max r5.w, r5.w, cb1[r2.w + 1024].y
 142:   mul r3.w, r3.w, r5.w
 143:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 144:   mul r3.w, r3.w, r5.w
 145:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 146:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 147:   dp3 r2.w, r6.xyzx, r6.xyzx
 148:   max r2.w, r2.w, l(0.000000)
 149:   rsq r2.w, r2.w
 150:   mul r6.xyz, r2.wwww, r6.xyzx
 151:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 152:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 153:   mul r2.w, r2.w, r2.w
 154:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 155:   mul r3.w, r3.w, r3.w
 156:   mul r2.w, r2.w, r2.w
 157:   max r3.w, r3.w, l(0.100000)
 158:   mul r2.w, r2.w, r3.w
 159:   mul r2.w, r2.w, l(3.000000)
 160:   div r2.w, l(0.062500), r2.w
 161:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 162:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 163:   iadd r1.w, r1.w, l(1)
 164: endloop 
 165: add o0.xyz, r0.yzwy, r5.xyzx
 166: mov o0.w, l(0.300000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 187 math, 14 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: mad r5.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  59: round_ni r5.xy, r5.xyxx
  60: mad r5.zw, v9.xxxy, cb3[30].zzzw, -r5.xxxy
  61: add r6.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  62: mul r7.xyzw, r6.xxzz, r6.xxzz
  63: mul r6.xz, r7.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  64: mad r7.xy, r7.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r5.zwzz
  65: add r7.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  66: min r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mad r8.xy, -r8.xyxx, r8.xyxx, r7.zwzz
  68: max r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mad r5.zw, -r5.zzzw, r5.zzzw, r6.yyyw
  70: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  71: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  72: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  73: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  74: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  75: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  76: mul r5.zw, r6.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  77: mov r9.z, r8.x
  78: mov r9.w, r5.z
  79: mov r7.z, r10.x
  80: mov r7.w, r6.x
  81: add r11.xyzw, r7.zwxz, r9.zwxz
  82: mov r8.z, r9.y
  83: mov r8.w, r5.w
  84: mov r10.z, r7.y
  85: mov r10.w, r6.z
  86: add r6.xyz, r8.zywz, r10.zywz
  87: div r7.xyz, r7.xzwx, r11.zwyz
  88: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  89: div r8.xyz, r10.zywz, r6.xyzx
  90: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  91: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  92: mul r8.xyz, r8.xyzx, cb3[30].yyyy
  93: mov r7.w, r8.x
  94: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
  95: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
  96: mov r8.w, r7.y
  97: mov r7.yw, r8.yyyz
  98: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
  99: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 100: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 101: mul r12.xyzw, r6.xxxy, r11.zwyz
 102: mul r13.xyzw, r6.yyzz, r11.xyzw
 103: mul r2.w, r6.z, r11.y
 104: sample_c_lz r3.w, r9.xyxx, t3.xxxx, s2, v9.z
 105: sample_c_lz r4.w, r9.zwzz, t3.xxxx, s2, v9.z
 106: mul r4.w, r4.w, r12.y
 107: mad r3.w, r12.x, r3.w, r4.w
 108: sample_c_lz r4.w, r5.zwzz, t3.xxxx, s2, v9.z
 109: mad r3.w, r12.z, r4.w, r3.w
 110: sample_c_lz r4.w, r8.xyxx, t3.xxxx, s2, v9.z
 111: mad r3.w, r12.w, r4.w, r3.w
 112: sample_c_lz r4.w, r10.xyxx, t3.xxxx, s2, v9.z
 113: mad r3.w, r13.x, r4.w, r3.w
 114: sample_c_lz r4.w, r10.zwzz, t3.xxxx, s2, v9.z
 115: mad r3.w, r13.y, r4.w, r3.w
 116: sample_c_lz r4.w, r8.zwzz, t3.xxxx, s2, v9.z
 117: mad r3.w, r13.z, r4.w, r3.w
 118: sample_c_lz r4.w, r7.xyxx, t3.xxxx, s2, v9.z
 119: mad r3.w, r13.w, r4.w, r3.w
 120: sample_c_lz r4.w, r7.zwzz, t3.xxxx, s2, v9.z
 121: mad r2.w, r2.w, r4.w, r3.w
 122: add r3.w, -cb3[29].x, l(1.000000)
 123: mad r2.w, r2.w, cb3[29].x, r3.w
 124: ge r3.w, l(0.000000), v9.z
 125: ge r4.w, v9.z, l(1.000000)
 126: or r3.w, r3.w, r4.w
 127: movc r2.w, r3.w, l(1.000000), r2.w
 128: dp3 r3.w, -r2.xyzx, r1.xyzx
 129: add r3.w, r3.w, r3.w
 130: mad r5.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 131: dp3_sat r3.w, r1.xyzx, r2.xyzx
 132: add r3.w, -r3.w, l(1.000000)
 133: mul r3.w, r3.w, r3.w
 134: mul r3.w, r3.w, r3.w
 135: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
 136: add r4.w, r5.w, l(-1.000000)
 137: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 138: max r4.w, r4.w, l(0.000000)
 139: log r4.w, r4.w
 140: mul r4.w, r4.w, cb2[14].y
 141: exp r4.w, r4.w
 142: mul r4.w, r4.w, cb2[14].x
 143: mul r5.xyz, r5.xyzx, r4.wwww
 144: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 145: mad r3.w, r3.w, l(0.500000), l(0.040000)
 146: mul r5.xyz, r3.wwww, r5.xyzx
 147: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
 148: mul r1.w, r1.w, r2.w
 149: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 150: mul r1.w, r1.w, r2.w
 151: mul r5.xyz, r1.wwww, cb0[4].xyzx
 152: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 153: dp3 r0.x, r6.xyzx, r6.xyzx
 154: max r0.x, r0.x, l(0.000000)
 155: rsq r0.x, r0.x
 156: mul r6.xyz, r0.xxxx, r6.xyzx
 157: dp3_sat r0.x, r1.xyzx, r6.xyzx
 158: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 159: mul r0.x, r0.x, r0.x
 160: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 161: mul r1.w, r1.w, r1.w
 162: mul r0.x, r0.x, r0.x
 163: max r1.w, r1.w, l(0.100000)
 164: mul r0.x, r0.x, r1.w
 165: mul r0.x, r0.x, l(3.000000)
 166: div r0.x, l(0.062500), r0.x
 167: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 168: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 169: min r0.x, cb0[5].x, cb2[10].y
 170: ftoi r0.x, r0.x
 171: mov r5.xyz, r3.xyzx
 172: mov r1.w, l(0)
 173: loop 
 174:   uge r2.w, r1.w, r0.x
 175:   breakc_nz r2.w
 176:   and r2.w, r1.w, l(3)
 177:   ushr r3.w, r1.w, l(2)
 178:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 179:   ftoi r2.w, r2.w
 180:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 181:   dp3 r3.w, r6.xyzx, r6.xyzx
 182:   max r3.w, r3.w, l(0.000061)
 183:   rsq r4.w, r3.w
 184:   mul r7.xyz, r4.wwww, r6.xyzx
 185:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 186:   mul r3.w, r3.w, cb1[r2.w + 512].x
 187:   mad r3.w, -r3.w, r3.w, l(1.000000)
 188:   max r3.w, r3.w, l(0.000000)
 189:   mul r3.w, r3.w, r3.w
 190:   mul r3.w, r3.w, r5.w
 191:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 192:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 193:   mul r5.w, r5.w, r5.w
 194:   mul r3.w, r3.w, r5.w
 195:   ftoi r5.w, cb1[r2.w + 1024].x
 196:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 197:   max r5.w, r5.w, cb1[r2.w + 1024].y
 198:   mul r3.w, r3.w, r5.w
 199:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 200:   mul r3.w, r3.w, r5.w
 201:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 202:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 203:   dp3 r2.w, r6.xyzx, r6.xyzx
 204:   max r2.w, r2.w, l(0.000000)
 205:   rsq r2.w, r2.w
 206:   mul r6.xyz, r2.wwww, r6.xyzx
 207:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 208:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 209:   mul r2.w, r2.w, r2.w
 210:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 211:   mul r3.w, r3.w, r3.w
 212:   mul r2.w, r2.w, r2.w
 213:   max r3.w, r3.w, l(0.100000)
 214:   mul r2.w, r2.w, r3.w
 215:   mul r2.w, r2.w, l(3.000000)
 216:   div r2.w, l(0.062500), r2.w
 217:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 218:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 219:   iadd r1.w, r1.w, l(1)
 220: endloop 
 221: add o0.xyz, r0.yzwy, r5.xyzx
 222: mov o0.w, l(0.300000)
 223: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 194 math, 14 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: mad r5.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  59: round_ni r5.xy, r5.xyxx
  60: mad r5.zw, v9.xxxy, cb3[30].zzzw, -r5.xxxy
  61: add r6.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  62: mul r7.xyzw, r6.xxzz, r6.xxzz
  63: mul r6.xz, r7.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  64: mad r7.xy, r7.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r5.zwzz
  65: add r7.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  66: min r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mad r8.xy, -r8.xyxx, r8.xyxx, r7.zwzz
  68: max r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mad r5.zw, -r5.zzzw, r5.zzzw, r6.yyyw
  70: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  71: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  72: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  73: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  74: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  75: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  76: mul r5.zw, r6.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  77: mov r9.z, r8.x
  78: mov r9.w, r5.z
  79: mov r7.z, r10.x
  80: mov r7.w, r6.x
  81: add r11.xyzw, r7.zwxz, r9.zwxz
  82: mov r8.z, r9.y
  83: mov r8.w, r5.w
  84: mov r10.z, r7.y
  85: mov r10.w, r6.z
  86: add r6.xyz, r8.zywz, r10.zywz
  87: div r7.xyz, r7.xzwx, r11.zwyz
  88: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  89: div r8.xyz, r10.zywz, r6.xyzx
  90: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  91: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  92: mul r8.xyz, r8.xyzx, cb3[30].yyyy
  93: mov r7.w, r8.x
  94: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
  95: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
  96: mov r8.w, r7.y
  97: mov r7.yw, r8.yyyz
  98: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
  99: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 100: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 101: mul r12.xyzw, r6.xxxy, r11.zwyz
 102: mul r13.xyzw, r6.yyzz, r11.xyzw
 103: mul r2.w, r6.z, r11.y
 104: sample_c_lz r3.w, r9.xyxx, t3.xxxx, s2, v9.z
 105: sample_c_lz r4.w, r9.zwzz, t3.xxxx, s2, v9.z
 106: mul r4.w, r4.w, r12.y
 107: mad r3.w, r12.x, r3.w, r4.w
 108: sample_c_lz r4.w, r5.zwzz, t3.xxxx, s2, v9.z
 109: mad r3.w, r12.z, r4.w, r3.w
 110: sample_c_lz r4.w, r8.xyxx, t3.xxxx, s2, v9.z
 111: mad r3.w, r12.w, r4.w, r3.w
 112: sample_c_lz r4.w, r10.xyxx, t3.xxxx, s2, v9.z
 113: mad r3.w, r13.x, r4.w, r3.w
 114: sample_c_lz r4.w, r10.zwzz, t3.xxxx, s2, v9.z
 115: mad r3.w, r13.y, r4.w, r3.w
 116: sample_c_lz r4.w, r8.zwzz, t3.xxxx, s2, v9.z
 117: mad r3.w, r13.z, r4.w, r3.w
 118: sample_c_lz r4.w, r7.xyxx, t3.xxxx, s2, v9.z
 119: mad r3.w, r13.w, r4.w, r3.w
 120: sample_c_lz r4.w, r7.zwzz, t3.xxxx, s2, v9.z
 121: mad r2.w, r2.w, r4.w, r3.w
 122: add r3.w, -cb3[29].x, l(1.000000)
 123: mad r2.w, r2.w, cb3[29].x, r3.w
 124: ge r3.w, l(0.000000), v9.z
 125: ge r4.w, v9.z, l(1.000000)
 126: or r3.w, r3.w, r4.w
 127: movc r2.w, r3.w, l(1.000000), r2.w
 128: dp3_sat r3.w, cb0[3].xyzx, r1.xyzx
 129: mul r5.xyz, r3.wwww, cb0[4].xyzx
 130: add r4.w, -r2.w, l(1.000000)
 131: mad r5.xyz, -r5.xyzx, r4.wwww, r3.xyzx
 132: max r5.xyz, r5.xyzx, cb0[1].xyzx
 133: add r5.xyz, -r3.xyzx, r5.xyzx
 134: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
 135: min r3.xyz, r3.xyzx, r5.xyzx
 136: dp3 r4.w, -r2.xyzx, r1.xyzx
 137: add r4.w, r4.w, r4.w
 138: mad r5.xyz, r1.xyzx, -r4.wwww, -r2.xyzx
 139: dp3_sat r4.w, r1.xyzx, r2.xyzx
 140: add r4.w, -r4.w, l(1.000000)
 141: mul r4.w, r4.w, r4.w
 142: mul r4.w, r4.w, r4.w
 143: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r5.w, r5.w, l(-1.000000)
 145: mad r5.w, cb2[14].w, r5.w, l(1.000000)
 146: max r5.w, r5.w, l(0.000000)
 147: log r5.w, r5.w
 148: mul r5.w, r5.w, cb2[14].y
 149: exp r5.w, r5.w
 150: mul r5.w, r5.w, cb2[14].x
 151: mul r5.xyz, r5.xyzx, r5.wwww
 152: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r4.w, r4.w, l(0.500000), l(0.040000)
 154: mul r5.xyz, r4.wwww, r5.xyzx
 155: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
 156: mul r1.w, r1.w, r2.w
 157: mul r1.w, r3.w, r1.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   ftoi r5.w, cb1[r2.w + 1024].x
 203:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 204:   max r5.w, r5.w, cb1[r2.w + 1024].y
 205:   mul r3.w, r3.w, r5.w
 206:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 207:   mul r3.w, r3.w, r5.w
 208:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 209:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 210:   dp3 r2.w, r6.xyzx, r6.xyzx
 211:   max r2.w, r2.w, l(0.000000)
 212:   rsq r2.w, r2.w
 213:   mul r6.xyz, r2.wwww, r6.xyzx
 214:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 215:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 216:   mul r2.w, r2.w, r2.w
 217:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 218:   mul r3.w, r3.w, r3.w
 219:   mul r2.w, r2.w, r2.w
 220:   max r3.w, r3.w, l(0.100000)
 221:   mul r2.w, r2.w, r3.w
 222:   mul r2.w, r2.w, l(3.000000)
 223:   div r2.w, l(0.062500), r2.w
 224:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 225:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 226:   iadd r1.w, r1.w, l(1)
 227: endloop 
 228: add o0.xyz, r0.yzwy, r5.xyzx
 229: mov o0.w, l(0.300000)
 230: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 155 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: sample_c_lz r2.w, v9.xyxx, t3.xxxx, s2, v9.z
  59: add r3.w, -cb3[29].x, l(1.000000)
  60: mad r2.w, r2.w, cb3[29].x, r3.w
  61: ge r3.w, l(0.000000), v9.z
  62: ge r4.w, v9.z, l(1.000000)
  63: or r3.w, r3.w, r4.w
  64: movc r2.w, r3.w, l(1.000000), r2.w
  65: dp3 r3.w, -r2.xyzx, r1.xyzx
  66: add r3.w, r3.w, r3.w
  67: mad r5.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
  68: dp3_sat r3.w, r1.xyzx, r2.xyzx
  69: add r3.w, -r3.w, l(1.000000)
  70: mul r3.w, r3.w, r3.w
  71: mul r3.w, r3.w, r3.w
  72: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  73: add r4.w, r5.w, l(-1.000000)
  74: mad r4.w, cb2[14].w, r4.w, l(1.000000)
  75: max r4.w, r4.w, l(0.000000)
  76: log r4.w, r4.w
  77: mul r4.w, r4.w, cb2[14].y
  78: exp r4.w, r4.w
  79: mul r4.w, r4.w, cb2[14].x
  80: mul r5.xyz, r5.xyzx, r4.wwww
  81: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  82: mad r3.w, r3.w, l(0.500000), l(0.040000)
  83: mul r5.xyz, r3.wwww, r5.xyzx
  84: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  85: mul r1.w, r1.w, r2.w
  86: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
  87: mul r1.w, r1.w, r2.w
  88: mul r5.xyz, r1.wwww, cb0[4].xyzx
  89: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  90: dp3 r0.x, r6.xyzx, r6.xyzx
  91: max r0.x, r0.x, l(0.000000)
  92: rsq r0.x, r0.x
  93: mul r6.xyz, r0.xxxx, r6.xyzx
  94: dp3_sat r0.x, r1.xyzx, r6.xyzx
  95: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
  96: mul r0.x, r0.x, r0.x
  97: mad r0.x, r0.x, l(-0.937500), l(1.000010)
  98: mul r1.w, r1.w, r1.w
  99: mul r0.x, r0.x, r0.x
 100: max r1.w, r1.w, l(0.100000)
 101: mul r0.x, r0.x, r1.w
 102: mul r0.x, r0.x, l(3.000000)
 103: div r0.x, l(0.062500), r0.x
 104: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 105: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 106: min r0.x, cb0[5].x, cb2[10].y
 107: ftoi r0.x, r0.x
 108: mov r5.xyz, r3.xyzx
 109: mov r1.w, l(0)
 110: loop 
 111:   uge r2.w, r1.w, r0.x
 112:   breakc_nz r2.w
 113:   and r2.w, r1.w, l(3)
 114:   ushr r3.w, r1.w, l(2)
 115:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 116:   ftoi r2.w, r2.w
 117:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 118:   dp3 r3.w, r6.xyzx, r6.xyzx
 119:   max r3.w, r3.w, l(0.000061)
 120:   rsq r4.w, r3.w
 121:   mul r7.xyz, r4.wwww, r6.xyzx
 122:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 123:   mul r3.w, r3.w, cb1[r2.w + 512].x
 124:   mad r3.w, -r3.w, r3.w, l(1.000000)
 125:   max r3.w, r3.w, l(0.000000)
 126:   mul r3.w, r3.w, r3.w
 127:   mul r3.w, r3.w, r5.w
 128:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 129:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 130:   mul r5.w, r5.w, r5.w
 131:   mul r3.w, r3.w, r5.w
 132:   ishl r5.w, r2.w, l(2)
 133:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 134:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 135:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 136:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 137:   div r8.xyz, r8.xyzx, r8.wwww
 138:   sample_c_lz r5.w, r8.xyxx, t4.xxxx, s3, r8.z
 139:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 140:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 141:   ge r6.w, l(0.000000), r8.z
 142:   ge r7.w, r8.z, l(1.000000)
 143:   or r6.w, r6.w, r7.w
 144:   movc r5.w, r6.w, l(1.000000), r5.w
 145:   ftoi r6.w, cb1[r2.w + 1024].x
 146:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 147:   max r6.w, r6.w, cb1[r2.w + 1024].y
 148:   mul r3.w, r3.w, r6.w
 149:   mul r3.w, r5.w, r3.w
 150:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 151:   mul r3.w, r3.w, r5.w
 152:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 153:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 154:   dp3 r2.w, r6.xyzx, r6.xyzx
 155:   max r2.w, r2.w, l(0.000000)
 156:   rsq r2.w, r2.w
 157:   mul r6.xyz, r2.wwww, r6.xyzx
 158:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 159:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 160:   mul r2.w, r2.w, r2.w
 161:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 162:   mul r3.w, r3.w, r3.w
 163:   mul r2.w, r2.w, r2.w
 164:   max r3.w, r3.w, l(0.100000)
 165:   mul r2.w, r2.w, r3.w
 166:   mul r2.w, r2.w, l(3.000000)
 167:   div r2.w, l(0.062500), r2.w
 168:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 169:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 170:   iadd r1.w, r1.w, l(1)
 171: endloop 
 172: add o0.xyz, r0.yzwy, r5.xyzx
 173: mov o0.w, l(0.300000)
 174: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], immediateIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: sample_c_lz r2.w, v9.xyxx, t3.xxxx, s2, v9.z
  59: add r3.w, -cb3[29].x, l(1.000000)
  60: mad r2.w, r2.w, cb3[29].x, r3.w
  61: ge r3.w, l(0.000000), v9.z
  62: ge r4.w, v9.z, l(1.000000)
  63: or r3.w, r3.w, r4.w
  64: movc r2.w, r3.w, l(1.000000), r2.w
  65: dp3_sat r3.w, cb0[3].xyzx, r1.xyzx
  66: mul r5.xyz, r3.wwww, cb0[4].xyzx
  67: add r4.w, -r2.w, l(1.000000)
  68: mad r5.xyz, -r5.xyzx, r4.wwww, r3.xyzx
  69: max r5.xyz, r5.xyzx, cb0[1].xyzx
  70: add r5.xyz, -r3.xyzx, r5.xyzx
  71: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
  72: min r3.xyz, r3.xyzx, r5.xyzx
  73: dp3 r4.w, -r2.xyzx, r1.xyzx
  74: add r4.w, r4.w, r4.w
  75: mad r5.xyz, r1.xyzx, -r4.wwww, -r2.xyzx
  76: dp3_sat r4.w, r1.xyzx, r2.xyzx
  77: add r4.w, -r4.w, l(1.000000)
  78: mul r4.w, r4.w, r4.w
  79: mul r4.w, r4.w, r4.w
  80: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  81: add r5.w, r5.w, l(-1.000000)
  82: mad r5.w, cb2[14].w, r5.w, l(1.000000)
  83: max r5.w, r5.w, l(0.000000)
  84: log r5.w, r5.w
  85: mul r5.w, r5.w, cb2[14].y
  86: exp r5.w, r5.w
  87: mul r5.w, r5.w, cb2[14].x
  88: mul r5.xyz, r5.xyzx, r5.wwww
  89: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  90: mad r4.w, r4.w, l(0.500000), l(0.040000)
  91: mul r5.xyz, r4.wwww, r5.xyzx
  92: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
  93: mul r1.w, r1.w, r2.w
  94: mul r1.w, r3.w, r1.w
  95: mul r5.xyz, r1.wwww, cb0[4].xyzx
  96: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
  97: dp3 r0.x, r6.xyzx, r6.xyzx
  98: max r0.x, r0.x, l(0.000000)
  99: rsq r0.x, r0.x
 100: mul r6.xyz, r0.xxxx, r6.xyzx
 101: dp3_sat r0.x, r1.xyzx, r6.xyzx
 102: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 103: mul r0.x, r0.x, r0.x
 104: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 105: mul r1.w, r1.w, r1.w
 106: mul r0.x, r0.x, r0.x
 107: max r1.w, r1.w, l(0.100000)
 108: mul r0.x, r0.x, r1.w
 109: mul r0.x, r0.x, l(3.000000)
 110: div r0.x, l(0.062500), r0.x
 111: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 112: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 113: min r0.x, cb0[5].x, cb2[10].y
 114: ftoi r0.x, r0.x
 115: mov r5.xyz, r3.xyzx
 116: mov r1.w, l(0)
 117: loop 
 118:   uge r2.w, r1.w, r0.x
 119:   breakc_nz r2.w
 120:   and r2.w, r1.w, l(3)
 121:   ushr r3.w, r1.w, l(2)
 122:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 123:   ftoi r2.w, r2.w
 124:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 125:   dp3 r3.w, r6.xyzx, r6.xyzx
 126:   max r3.w, r3.w, l(0.000061)
 127:   rsq r4.w, r3.w
 128:   mul r7.xyz, r4.wwww, r6.xyzx
 129:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 130:   mul r3.w, r3.w, cb1[r2.w + 512].x
 131:   mad r3.w, -r3.w, r3.w, l(1.000000)
 132:   max r3.w, r3.w, l(0.000000)
 133:   mul r3.w, r3.w, r3.w
 134:   mul r3.w, r3.w, r5.w
 135:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 136:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 137:   mul r5.w, r5.w, r5.w
 138:   mul r3.w, r3.w, r5.w
 139:   ishl r5.w, r2.w, l(2)
 140:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 141:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 142:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 143:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 144:   div r8.xyz, r8.xyzx, r8.wwww
 145:   sample_c_lz r5.w, r8.xyxx, t4.xxxx, s3, r8.z
 146:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 147:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 148:   ge r6.w, l(0.000000), r8.z
 149:   ge r7.w, r8.z, l(1.000000)
 150:   or r6.w, r6.w, r7.w
 151:   movc r5.w, r6.w, l(1.000000), r5.w
 152:   ftoi r6.w, cb1[r2.w + 1024].x
 153:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 154:   max r6.w, r6.w, cb1[r2.w + 1024].y
 155:   mul r3.w, r3.w, r6.w
 156:   mul r3.w, r5.w, r3.w
 157:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 158:   mul r3.w, r3.w, r5.w
 159:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 160:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 161:   dp3 r2.w, r6.xyzx, r6.xyzx
 162:   max r2.w, r2.w, l(0.000000)
 163:   rsq r2.w, r2.w
 164:   mul r6.xyz, r2.wwww, r6.xyzx
 165:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 166:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 167:   mul r2.w, r2.w, r2.w
 168:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 169:   mul r3.w, r3.w, r3.w
 170:   mul r2.w, r2.w, r2.w
 171:   max r3.w, r3.w, l(0.100000)
 172:   mul r2.w, r2.w, r3.w
 173:   mul r2.w, r2.w, l(3.000000)
 174:   div r2.w, l(0.062500), r2.w
 175:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 176:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 177:   iadd r1.w, r1.w, l(1)
 178: endloop 
 179: add o0.xyz, r0.yzwy, r5.xyzx
 180: mov o0.w, l(0.300000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 243 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: mad r5.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  59: round_ni r5.xy, r5.xyxx
  60: mad r5.zw, v9.xxxy, cb3[30].zzzw, -r5.xxxy
  61: add r6.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  62: mul r7.xyzw, r6.xxzz, r6.xxzz
  63: mul r6.xz, r7.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  64: mad r7.xy, r7.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r5.zwzz
  65: add r7.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  66: min r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mad r8.xy, -r8.xyxx, r8.xyxx, r7.zwzz
  68: max r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mad r5.zw, -r5.zzzw, r5.zzzw, r6.yyyw
  70: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  71: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  72: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  73: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  74: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  75: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  76: mul r5.zw, r6.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  77: mov r9.z, r8.x
  78: mov r9.w, r5.z
  79: mov r7.z, r10.x
  80: mov r7.w, r6.x
  81: add r11.xyzw, r7.zwxz, r9.zwxz
  82: mov r8.z, r9.y
  83: mov r8.w, r5.w
  84: mov r10.z, r7.y
  85: mov r10.w, r6.z
  86: add r6.xyz, r8.zywz, r10.zywz
  87: div r7.xyz, r7.xzwx, r11.zwyz
  88: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  89: div r8.xyz, r10.zywz, r6.xyzx
  90: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  91: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  92: mul r8.xyz, r8.xyzx, cb3[30].yyyy
  93: mov r7.w, r8.x
  94: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
  95: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
  96: mov r8.w, r7.y
  97: mov r7.yw, r8.yyyz
  98: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
  99: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 100: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 101: mul r12.xyzw, r6.xxxy, r11.zwyz
 102: mul r13.xyzw, r6.yyzz, r11.xyzw
 103: mul r2.w, r6.z, r11.y
 104: sample_c_lz r3.w, r9.xyxx, t3.xxxx, s2, v9.z
 105: sample_c_lz r4.w, r9.zwzz, t3.xxxx, s2, v9.z
 106: mul r4.w, r4.w, r12.y
 107: mad r3.w, r12.x, r3.w, r4.w
 108: sample_c_lz r4.w, r5.zwzz, t3.xxxx, s2, v9.z
 109: mad r3.w, r12.z, r4.w, r3.w
 110: sample_c_lz r4.w, r8.xyxx, t3.xxxx, s2, v9.z
 111: mad r3.w, r12.w, r4.w, r3.w
 112: sample_c_lz r4.w, r10.xyxx, t3.xxxx, s2, v9.z
 113: mad r3.w, r13.x, r4.w, r3.w
 114: sample_c_lz r4.w, r10.zwzz, t3.xxxx, s2, v9.z
 115: mad r3.w, r13.y, r4.w, r3.w
 116: sample_c_lz r4.w, r8.zwzz, t3.xxxx, s2, v9.z
 117: mad r3.w, r13.z, r4.w, r3.w
 118: sample_c_lz r4.w, r7.xyxx, t3.xxxx, s2, v9.z
 119: mad r3.w, r13.w, r4.w, r3.w
 120: sample_c_lz r4.w, r7.zwzz, t3.xxxx, s2, v9.z
 121: mad r2.w, r2.w, r4.w, r3.w
 122: add r3.w, -cb3[29].x, l(1.000000)
 123: mad r2.w, r2.w, cb3[29].x, r3.w
 124: ge r3.w, l(0.000000), v9.z
 125: ge r4.w, v9.z, l(1.000000)
 126: or r3.w, r3.w, r4.w
 127: movc r2.w, r3.w, l(1.000000), r2.w
 128: dp3 r3.w, -r2.xyzx, r1.xyzx
 129: add r3.w, r3.w, r3.w
 130: mad r5.xyz, r1.xyzx, -r3.wwww, -r2.xyzx
 131: dp3_sat r3.w, r1.xyzx, r2.xyzx
 132: add r3.w, -r3.w, l(1.000000)
 133: mul r3.w, r3.w, r3.w
 134: mul r3.w, r3.w, r3.w
 135: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
 136: add r4.w, r5.w, l(-1.000000)
 137: mad r4.w, cb2[14].w, r4.w, l(1.000000)
 138: max r4.w, r4.w, l(0.000000)
 139: log r4.w, r4.w
 140: mul r4.w, r4.w, cb2[14].y
 141: exp r4.w, r4.w
 142: mul r4.w, r4.w, cb2[14].x
 143: mul r5.xyz, r5.xyzx, r4.wwww
 144: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 145: mad r3.w, r3.w, l(0.500000), l(0.040000)
 146: mul r5.xyz, r3.wwww, r5.xyzx
 147: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
 148: mul r1.w, r1.w, r2.w
 149: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 150: mul r1.w, r1.w, r2.w
 151: mul r5.xyz, r1.wwww, cb0[4].xyzx
 152: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 153: dp3 r0.x, r6.xyzx, r6.xyzx
 154: max r0.x, r0.x, l(0.000000)
 155: rsq r0.x, r0.x
 156: mul r6.xyz, r0.xxxx, r6.xyzx
 157: dp3_sat r0.x, r1.xyzx, r6.xyzx
 158: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 159: mul r0.x, r0.x, r0.x
 160: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 161: mul r1.w, r1.w, r1.w
 162: mul r0.x, r0.x, r0.x
 163: max r1.w, r1.w, l(0.100000)
 164: mul r0.x, r0.x, r1.w
 165: mul r0.x, r0.x, l(3.000000)
 166: div r0.x, l(0.062500), r0.x
 167: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 168: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 169: min r0.x, cb0[5].x, cb2[10].y
 170: ftoi r0.x, r0.x
 171: mov r5.xyz, r3.xyzx
 172: mov r1.w, l(0)
 173: loop 
 174:   uge r2.w, r1.w, r0.x
 175:   breakc_nz r2.w
 176:   and r2.w, r1.w, l(3)
 177:   ushr r3.w, r1.w, l(2)
 178:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 179:   ftoi r2.w, r2.w
 180:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 181:   dp3 r3.w, r6.xyzx, r6.xyzx
 182:   max r3.w, r3.w, l(0.000061)
 183:   rsq r4.w, r3.w
 184:   mul r7.xyz, r4.wwww, r6.xyzx
 185:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 186:   mul r3.w, r3.w, cb1[r2.w + 512].x
 187:   mad r3.w, -r3.w, r3.w, l(1.000000)
 188:   max r3.w, r3.w, l(0.000000)
 189:   mul r3.w, r3.w, r3.w
 190:   mul r3.w, r3.w, r5.w
 191:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 192:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 193:   mul r5.w, r5.w, r5.w
 194:   mul r3.w, r3.w, r5.w
 195:   ishl r5.w, r2.w, l(2)
 196:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 197:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 198:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 199:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 200:   div r8.xyz, r8.xyzx, r8.wwww
 201:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 202:   round_ni r9.xy, r9.xyxx
 203:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 204:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 205:   mul r11.xyzw, r10.xxzz, r10.xxzz
 206:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 207:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 208:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 209:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 210:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 211:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 212:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 213:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 214:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 215:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 216:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 217:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 218:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 219:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 220:   mov r12.z, r11.x
 221:   mov r12.w, r8.x
 222:   mov r13.z, r14.x
 223:   mov r13.w, r9.z
 224:   add r10.xyzw, r12.zwxz, r13.zwxz
 225:   mov r11.z, r12.y
 226:   mov r11.w, r8.y
 227:   mov r14.z, r13.y
 228:   mov r14.w, r9.w
 229:   add r8.xyw, r11.zyzw, r14.zyzw
 230:   div r11.xyz, r13.xzwx, r10.zwyz
 231:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 232:   div r12.xyz, r14.zywz, r8.xywx
 233:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 234:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 235:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 236:   mov r11.w, r12.x
 237:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 238:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 239:   mov r12.w, r11.y
 240:   mov r11.yw, r12.yyyz
 241:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 242:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 243:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 244:   mul r15.xyzw, r8.xxxy, r10.zwyz
 245:   mul r16.xyzw, r8.yyww, r10.xyzw
 246:   mul r5.w, r8.w, r10.y
 247:   sample_c_lz r6.w, r13.xyxx, t4.xxxx, s3, r8.z
 248:   sample_c_lz r7.w, r13.zwzz, t4.xxxx, s3, r8.z
 249:   mul r7.w, r7.w, r15.y
 250:   mad r6.w, r15.x, r6.w, r7.w
 251:   sample_c_lz r7.w, r9.zwzz, t4.xxxx, s3, r8.z
 252:   mad r6.w, r15.z, r7.w, r6.w
 253:   sample_c_lz r7.w, r12.xyxx, t4.xxxx, s3, r8.z
 254:   mad r6.w, r15.w, r7.w, r6.w
 255:   sample_c_lz r7.w, r14.xyxx, t4.xxxx, s3, r8.z
 256:   mad r6.w, r16.x, r7.w, r6.w
 257:   sample_c_lz r7.w, r14.zwzz, t4.xxxx, s3, r8.z
 258:   mad r6.w, r16.y, r7.w, r6.w
 259:   sample_c_lz r7.w, r12.zwzz, t4.xxxx, s3, r8.z
 260:   mad r6.w, r16.z, r7.w, r6.w
 261:   sample_c_lz r7.w, r11.xyxx, t4.xxxx, s3, r8.z
 262:   mad r6.w, r16.w, r7.w, r6.w
 263:   sample_c_lz r7.w, r11.zwzz, t4.xxxx, s3, r8.z
 264:   mad r5.w, r5.w, r7.w, r6.w
 265:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 266:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 267:   ge r6.w, l(0.000000), r8.z
 268:   ge r7.w, r8.z, l(1.000000)
 269:   or r6.w, r6.w, r7.w
 270:   movc r5.w, r6.w, l(1.000000), r5.w
 271:   ftoi r6.w, cb1[r2.w + 1024].x
 272:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 273:   max r6.w, r6.w, cb1[r2.w + 1024].y
 274:   mul r3.w, r3.w, r6.w
 275:   mul r3.w, r5.w, r3.w
 276:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 277:   mul r3.w, r3.w, r5.w
 278:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 279:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 280:   dp3 r2.w, r6.xyzx, r6.xyzx
 281:   max r2.w, r2.w, l(0.000000)
 282:   rsq r2.w, r2.w
 283:   mul r6.xyz, r2.wwww, r6.xyzx
 284:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 285:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 286:   mul r2.w, r2.w, r2.w
 287:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 288:   mul r3.w, r3.w, r3.w
 289:   mul r2.w, r2.w, r2.w
 290:   max r3.w, r3.w, l(0.100000)
 291:   mul r2.w, r2.w, r3.w
 292:   mul r2.w, r2.w, l(3.000000)
 293:   div r2.w, l(0.062500), r2.w
 294:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 295:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 296:   iadd r1.w, r1.w, l(1)
 297: endloop 
 298: add o0.xyz, r0.yzwy, r5.xyzx
 299: mov o0.w, l(0.300000)
 300: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 250 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], immediateIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: sample r3.xyzw, v6.xyxx, t2.xyzw, s1
  44: sample r4.xyzw, v6.xyxx, t1.xyzw, s1
  45: log r1.w, |r4.w|
  46: mul r1.w, r1.w, l(2.200000)
  47: exp r1.w, r1.w
  48: mul r1.w, r1.w, l(34.493240)
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  51: dp3 r1.w, r1.xyzx, r3.xyzx
  52: add r1.w, r1.w, l(0.500000)
  53: mul r3.xyz, r1.wwww, r4.xyzx
  54: max r1.w, r3.w, l(0.000100)
  55: div r3.xyz, r3.xyzx, r1.wwww
  56: mul r4.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  57: mul r1.w, cb2[10].z, cb2[13].x
  58: mad r5.xy, v9.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  59: round_ni r5.xy, r5.xyxx
  60: mad r5.zw, v9.xxxy, cb3[30].zzzw, -r5.xxxy
  61: add r6.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  62: mul r7.xyzw, r6.xxzz, r6.xxzz
  63: mul r6.xz, r7.yywy, l(0.080000, 0.000000, 0.080000, 0.000000)
  64: mad r7.xy, r7.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r5.zwzz
  65: add r7.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  66: min r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: mad r8.xy, -r8.xyxx, r8.xyxx, r7.zwzz
  68: max r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: mad r5.zw, -r5.zzzw, r5.zzzw, r6.yyyw
  70: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  71: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  72: mul r9.xy, r7.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  73: mul r7.xy, r7.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  74: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  75: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  76: mul r5.zw, r6.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  77: mov r9.z, r8.x
  78: mov r9.w, r5.z
  79: mov r7.z, r10.x
  80: mov r7.w, r6.x
  81: add r11.xyzw, r7.zwxz, r9.zwxz
  82: mov r8.z, r9.y
  83: mov r8.w, r5.w
  84: mov r10.z, r7.y
  85: mov r10.w, r6.z
  86: add r6.xyz, r8.zywz, r10.zywz
  87: div r7.xyz, r7.xzwx, r11.zwyz
  88: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  89: div r8.xyz, r10.zywz, r6.xyzx
  90: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  91: mul r7.xyz, r7.yxzy, cb3[30].xxxx
  92: mul r8.xyz, r8.xyzx, cb3[30].yyyy
  93: mov r7.w, r8.x
  94: mad r9.xyzw, r5.xyxy, cb3[30].xyxy, r7.ywxw
  95: mad r5.zw, r5.xxxy, cb3[30].xxxy, r7.zzzw
  96: mov r8.w, r7.y
  97: mov r7.yw, r8.yyyz
  98: mad r10.xyzw, r5.xyxy, cb3[30].xyxy, r7.xyzy
  99: mad r8.xyzw, r5.xyxy, cb3[30].xyxy, r8.wywz
 100: mad r7.xyzw, r5.xyxy, cb3[30].xyxy, r7.xwzw
 101: mul r12.xyzw, r6.xxxy, r11.zwyz
 102: mul r13.xyzw, r6.yyzz, r11.xyzw
 103: mul r2.w, r6.z, r11.y
 104: sample_c_lz r3.w, r9.xyxx, t3.xxxx, s2, v9.z
 105: sample_c_lz r4.w, r9.zwzz, t3.xxxx, s2, v9.z
 106: mul r4.w, r4.w, r12.y
 107: mad r3.w, r12.x, r3.w, r4.w
 108: sample_c_lz r4.w, r5.zwzz, t3.xxxx, s2, v9.z
 109: mad r3.w, r12.z, r4.w, r3.w
 110: sample_c_lz r4.w, r8.xyxx, t3.xxxx, s2, v9.z
 111: mad r3.w, r12.w, r4.w, r3.w
 112: sample_c_lz r4.w, r10.xyxx, t3.xxxx, s2, v9.z
 113: mad r3.w, r13.x, r4.w, r3.w
 114: sample_c_lz r4.w, r10.zwzz, t3.xxxx, s2, v9.z
 115: mad r3.w, r13.y, r4.w, r3.w
 116: sample_c_lz r4.w, r8.zwzz, t3.xxxx, s2, v9.z
 117: mad r3.w, r13.z, r4.w, r3.w
 118: sample_c_lz r4.w, r7.xyxx, t3.xxxx, s2, v9.z
 119: mad r3.w, r13.w, r4.w, r3.w
 120: sample_c_lz r4.w, r7.zwzz, t3.xxxx, s2, v9.z
 121: mad r2.w, r2.w, r4.w, r3.w
 122: add r3.w, -cb3[29].x, l(1.000000)
 123: mad r2.w, r2.w, cb3[29].x, r3.w
 124: ge r3.w, l(0.000000), v9.z
 125: ge r4.w, v9.z, l(1.000000)
 126: or r3.w, r3.w, r4.w
 127: movc r2.w, r3.w, l(1.000000), r2.w
 128: dp3_sat r3.w, cb0[3].xyzx, r1.xyzx
 129: mul r5.xyz, r3.wwww, cb0[4].xyzx
 130: add r4.w, -r2.w, l(1.000000)
 131: mad r5.xyz, -r5.xyzx, r4.wwww, r3.xyzx
 132: max r5.xyz, r5.xyzx, cb0[1].xyzx
 133: add r5.xyz, -r3.xyzx, r5.xyzx
 134: mad r5.xyz, cb3[29].xxxx, r5.xyzx, r3.xyzx
 135: min r3.xyz, r3.xyzx, r5.xyzx
 136: dp3 r4.w, -r2.xyzx, r1.xyzx
 137: add r4.w, r4.w, r4.w
 138: mad r5.xyz, r1.xyzx, -r4.wwww, -r2.xyzx
 139: dp3_sat r4.w, r1.xyzx, r2.xyzx
 140: add r4.w, -r4.w, l(1.000000)
 141: mul r4.w, r4.w, r4.w
 142: mul r4.w, r4.w, r4.w
 143: sample_l r5.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
 144: add r5.w, r5.w, l(-1.000000)
 145: mad r5.w, cb2[14].w, r5.w, l(1.000000)
 146: max r5.w, r5.w, l(0.000000)
 147: log r5.w, r5.w
 148: mul r5.w, r5.w, cb2[14].y
 149: exp r5.w, r5.w
 150: mul r5.w, r5.w, cb2[14].x
 151: mul r5.xyz, r5.xyzx, r5.wwww
 152: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 153: mad r4.w, r4.w, l(0.500000), l(0.040000)
 154: mul r5.xyz, r4.wwww, r5.xyzx
 155: mad r3.xyz, r3.xyzx, r4.xyzx, r5.xyzx
 156: mul r1.w, r1.w, r2.w
 157: mul r1.w, r3.w, r1.w
 158: mul r5.xyz, r1.wwww, cb0[4].xyzx
 159: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 160: dp3 r0.x, r6.xyzx, r6.xyzx
 161: max r0.x, r0.x, l(0.000000)
 162: rsq r0.x, r0.x
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: dp3_sat r0.x, r1.xyzx, r6.xyzx
 165: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 166: mul r0.x, r0.x, r0.x
 167: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 168: mul r1.w, r1.w, r1.w
 169: mul r0.x, r0.x, r0.x
 170: max r1.w, r1.w, l(0.100000)
 171: mul r0.x, r0.x, r1.w
 172: mul r0.x, r0.x, l(3.000000)
 173: div r0.x, l(0.062500), r0.x
 174: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 175: mad r3.xyz, r6.xyzx, r5.xyzx, r3.xyzx
 176: min r0.x, cb0[5].x, cb2[10].y
 177: ftoi r0.x, r0.x
 178: mov r5.xyz, r3.xyzx
 179: mov r1.w, l(0)
 180: loop 
 181:   uge r2.w, r1.w, r0.x
 182:   breakc_nz r2.w
 183:   and r2.w, r1.w, l(3)
 184:   ushr r3.w, r1.w, l(2)
 185:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 186:   ftoi r2.w, r2.w
 187:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 188:   dp3 r3.w, r6.xyzx, r6.xyzx
 189:   max r3.w, r3.w, l(0.000061)
 190:   rsq r4.w, r3.w
 191:   mul r7.xyz, r4.wwww, r6.xyzx
 192:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 193:   mul r3.w, r3.w, cb1[r2.w + 512].x
 194:   mad r3.w, -r3.w, r3.w, l(1.000000)
 195:   max r3.w, r3.w, l(0.000000)
 196:   mul r3.w, r3.w, r3.w
 197:   mul r3.w, r3.w, r5.w
 198:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 199:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 200:   mul r5.w, r5.w, r5.w
 201:   mul r3.w, r3.w, r5.w
 202:   ishl r5.w, r2.w, l(2)
 203:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 204:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 205:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 206:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 207:   div r8.xyz, r8.xyzx, r8.wwww
 208:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 209:   round_ni r9.xy, r9.xyxx
 210:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 211:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 212:   mul r11.xyzw, r10.xxzz, r10.xxzz
 213:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 214:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 215:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 216:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 217:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 218:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 219:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 220:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 221:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 222:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 223:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 224:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 225:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 226:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 227:   mov r12.z, r11.x
 228:   mov r12.w, r8.x
 229:   mov r13.z, r14.x
 230:   mov r13.w, r9.z
 231:   add r10.xyzw, r12.zwxz, r13.zwxz
 232:   mov r11.z, r12.y
 233:   mov r11.w, r8.y
 234:   mov r14.z, r13.y
 235:   mov r14.w, r9.w
 236:   add r8.xyw, r11.zyzw, r14.zyzw
 237:   div r11.xyz, r13.xzwx, r10.zwyz
 238:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 239:   div r12.xyz, r14.zywz, r8.xywx
 240:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 241:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 242:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 243:   mov r11.w, r12.x
 244:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 245:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 246:   mov r12.w, r11.y
 247:   mov r11.yw, r12.yyyz
 248:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 249:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 250:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 251:   mul r15.xyzw, r8.xxxy, r10.zwyz
 252:   mul r16.xyzw, r8.yyww, r10.xyzw
 253:   mul r5.w, r8.w, r10.y
 254:   sample_c_lz r6.w, r13.xyxx, t4.xxxx, s3, r8.z
 255:   sample_c_lz r7.w, r13.zwzz, t4.xxxx, s3, r8.z
 256:   mul r7.w, r7.w, r15.y
 257:   mad r6.w, r15.x, r6.w, r7.w
 258:   sample_c_lz r7.w, r9.zwzz, t4.xxxx, s3, r8.z
 259:   mad r6.w, r15.z, r7.w, r6.w
 260:   sample_c_lz r7.w, r12.xyxx, t4.xxxx, s3, r8.z
 261:   mad r6.w, r15.w, r7.w, r6.w
 262:   sample_c_lz r7.w, r14.xyxx, t4.xxxx, s3, r8.z
 263:   mad r6.w, r16.x, r7.w, r6.w
 264:   sample_c_lz r7.w, r14.zwzz, t4.xxxx, s3, r8.z
 265:   mad r6.w, r16.y, r7.w, r6.w
 266:   sample_c_lz r7.w, r12.zwzz, t4.xxxx, s3, r8.z
 267:   mad r6.w, r16.z, r7.w, r6.w
 268:   sample_c_lz r7.w, r11.xyxx, t4.xxxx, s3, r8.z
 269:   mad r6.w, r16.w, r7.w, r6.w
 270:   sample_c_lz r7.w, r11.zwzz, t4.xxxx, s3, r8.z
 271:   mad r5.w, r5.w, r7.w, r6.w
 272:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 273:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 274:   ge r6.w, l(0.000000), r8.z
 275:   ge r7.w, r8.z, l(1.000000)
 276:   or r6.w, r6.w, r7.w
 277:   movc r5.w, r6.w, l(1.000000), r5.w
 278:   ftoi r6.w, cb1[r2.w + 1024].x
 279:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 280:   max r6.w, r6.w, cb1[r2.w + 1024].y
 281:   mul r3.w, r3.w, r6.w
 282:   mul r3.w, r5.w, r3.w
 283:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 284:   mul r3.w, r3.w, r5.w
 285:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 286:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 287:   dp3 r2.w, r6.xyzx, r6.xyzx
 288:   max r2.w, r2.w, l(0.000000)
 289:   rsq r2.w, r2.w
 290:   mul r6.xyz, r2.wwww, r6.xyzx
 291:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 292:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 293:   mul r2.w, r2.w, r2.w
 294:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 295:   mul r3.w, r3.w, r3.w
 296:   mul r2.w, r2.w, r2.w
 297:   max r3.w, r3.w, l(0.100000)
 298:   mul r2.w, r2.w, r3.w
 299:   mul r2.w, r2.w, l(3.000000)
 300:   div r2.w, l(0.062500), r2.w
 301:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
 302:   mad r5.xyz, r6.xyzx, r8.xyzx, r5.xyzx
 303:   iadd r1.w, r1.w, l(1)
 304: endloop 
 305: add o0.xyz, r0.yzwy, r5.xyzx
 306: mov o0.w, l(0.300000)
 307: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: sample_c_lz r0.w, v9.xyxx, t3.xxxx, s2, v9.z
  95: add r1.w, -cb2[29].x, l(1.000000)
  96: mad r0.w, r0.w, cb2[29].x, r1.w
  97: ge r1.w, l(0.000000), v9.z
  98: ge r2.y, v9.z, l(1.000000)
  99: or r1.w, r1.w, r2.y
 100: movc r0.w, r1.w, l(1.000000), r0.w
 101: mul r1.w, cb1[10].z, cb1[13].x
 102: mul r0.w, r0.w, r1.w
 103: mul r0.w, r2.x, r0.w
 104: mul r2.xyz, r0.wwww, cb0[4].xyzx
 105: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 106: add o0.xyz, r0.xyzx, r1.xyzx
 107: mov o0.w, l(0.300000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: sample_c_lz r1.w, v9.xyxx, t3.xxxx, s2, v9.z
  44: add r2.w, -cb2[29].x, l(1.000000)
  45: mad r1.w, r1.w, cb2[29].x, r2.w
  46: ge r2.w, l(0.000000), v9.z
  47: ge r3.x, v9.z, l(1.000000)
  48: or r2.w, r2.w, r3.x
  49: movc r1.w, r2.w, l(1.000000), r1.w
  50: add r2.w, -r1.w, l(1.000000)
  51: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  52: log r3.w, |r3.w|
  53: mul r3.w, r3.w, l(2.200000)
  54: exp r3.w, r3.w
  55: mul r3.w, r3.w, l(34.493240)
  56: mul r3.xyz, r3.wwww, r3.xyzx
  57: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  58: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  59: max r3.w, r4.w, l(0.000100)
  60: dp3 r4.x, r2.xyzx, r4.xyzx
  61: add r4.x, r4.x, l(0.500000)
  62: mul r3.xyz, r3.xyzx, r4.xxxx
  63: div r3.xyz, r3.xyzx, r3.wwww
  64: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  65: mul r4.xyz, r3.wwww, cb0[4].xyzx
  66: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  67: max r4.xyz, r4.xyzx, cb0[1].xyzx
  68: add r4.xyz, -r3.xyzx, r4.xyzx
  69: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  70: min r3.xyz, r3.xyzx, r4.xyzx
  71: mul r4.xyz, r0.wwww, v5.xyzx
  72: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  73: dp3 r0.w, -r4.xyzx, r2.xyzx
  74: add r0.w, r0.w, r0.w
  75: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  76: dp3_sat r0.w, r2.xyzx, r4.xyzx
  77: add r0.w, -r0.w, l(1.000000)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r0.w, r0.w
  80: mad r0.w, r0.w, l(0.500000), l(0.040000)
  81: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  82: add r2.w, r4.w, l(-1.000000)
  83: mad r2.w, cb1[14].w, r2.w, l(1.000000)
  84: max r2.w, r2.w, l(0.000000)
  85: log r2.w, r2.w
  86: mul r2.w, r2.w, cb1[14].y
  87: exp r2.w, r2.w
  88: mul r2.w, r2.w, cb1[14].x
  89: mul r4.xyz, r4.xyzx, r2.wwww
  90: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  91: mul r4.xyz, r0.wwww, r4.xyzx
  92: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
  93: dp3 r0.w, r5.xyzx, r5.xyzx
  94: max r0.w, r0.w, l(0.000000)
  95: rsq r0.w, r0.w
  96: mul r4.xyz, r0.wwww, r5.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
  99: mul r2.x, r2.x, r2.x
 100: max r2.x, r2.x, l(0.100000)
 101: mul r0.w, r0.w, r0.w
 102: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 103: mul r0.w, r0.w, r0.w
 104: mul r0.w, r2.x, r0.w
 105: mul r0.w, r0.w, l(3.000000)
 106: div r0.w, l(0.062500), r0.w
 107: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 108: mul r0.w, cb1[10].z, cb1[13].x
 109: mul r0.w, r1.w, r0.w
 110: mul r0.w, r3.w, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 12 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: mad r5.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  79: round_ni r5.xy, r5.xyxx
  80: mad r5.zw, v9.xxxy, cb2[30].zzzw, -r5.xxxy
  81: min r6.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  82: add r6.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  83: mad r6.xy, -r6.xyxx, r6.xyxx, r6.zwzz
  84: mul r7.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87: max r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: add r9.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  89: mad r8.xy, -r8.xyxx, r8.xyxx, r9.ywyy
  90: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  91: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  92: mul r10.xyzw, r9.xxzz, r9.xxzz
  93: mul r9.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mad r5.zw, r10.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.zzzw
  95: mul r7.zw, r10.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  96: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mov r6.z, r10.y
  98: mov r6.w, r9.y
  99: mov r10.w, r9.x
 100: mov r8.zw, r7.yyyz
 101: add r6.yzw, r6.zzyw, r8.zzyw
 102: mov r10.z, r6.x
 103: div r8.yzw, r8.zzyw, r6.yyzw
 104: mov r7.z, r8.x
 105: add r8.xyz, r8.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
 106: mul r8.xyz, r8.xyzx, cb2[30].yyyy
 107: mov r9.w, r8.x
 108: add r10.xyzw, r7.zwxz, r10.zwxz
 109: div r7.xyz, r7.xzwx, r10.zwyz
 110: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 111: mul r9.xyz, r7.yxzy, cb2[30].xxxx
 112: mad r7.xyzw, r5.xyxy, cb2[30].xyxy, r9.ywxw
 113: mad r5.zw, r5.xxxy, cb2[30].xxxy, r9.zzzw
 114: sample_c_lz r0.w, r5.zwzz, t3.xxxx, s2, v9.z
 115: sample_c_lz r1.w, r7.xyxx, t3.xxxx, s2, v9.z
 116: sample_c_lz r2.w, r7.zwzz, t3.xxxx, s2, v9.z
 117: mul r7.xyzw, r6.yyyz, r10.zwyz
 118: mul r2.w, r2.w, r7.y
 119: mad r1.w, r7.x, r1.w, r2.w
 120: mad r0.w, r7.z, r0.w, r1.w
 121: mov r8.w, r9.y
 122: mad r11.xyzw, r5.xyxy, cb2[30].xyxy, r8.wywz
 123: mov r9.yw, r8.yyyz
 124: sample_c_lz r1.w, r11.xyxx, t3.xxxx, s2, v9.z
 125: sample_c_lz r2.w, r11.zwzz, t3.xxxx, s2, v9.z
 126: mad r0.w, r7.w, r1.w, r0.w
 127: mad r7.xyzw, r5.xyxy, cb2[30].xyxy, r9.xyzy
 128: mad r5.xyzw, r5.xyxy, cb2[30].xyxy, r9.xwzw
 129: sample_c_lz r1.w, r7.xyxx, t3.xxxx, s2, v9.z
 130: sample_c_lz r3.w, r7.zwzz, t3.xxxx, s2, v9.z
 131: mul r7.xyzw, r6.zzww, r10.xyzw
 132: mul r4.w, r6.w, r10.y
 133: mad r0.w, r7.x, r1.w, r0.w
 134: mad r0.w, r7.y, r3.w, r0.w
 135: mad r0.w, r7.z, r2.w, r0.w
 136: sample_c_lz r1.w, r5.xyxx, t3.xxxx, s2, v9.z
 137: sample_c_lz r2.w, r5.zwzz, t3.xxxx, s2, v9.z
 138: mad r0.w, r7.w, r1.w, r0.w
 139: mad r0.w, r4.w, r2.w, r0.w
 140: add r1.w, -cb2[29].x, l(1.000000)
 141: mad r0.w, r0.w, cb2[29].x, r1.w
 142: ge r1.w, l(0.000000), v9.z
 143: ge r2.w, v9.z, l(1.000000)
 144: or r1.w, r1.w, r2.w
 145: movc r0.w, r1.w, l(1.000000), r0.w
 146: mul r1.w, cb1[10].z, cb1[13].x
 147: mul r0.w, r0.w, r1.w
 148: dp3_sat r1.w, r2.xyzx, cb0[3].xyzx
 149: mul r0.w, r0.w, r1.w
 150: mul r5.xyz, r0.wwww, cb0[4].xyzx
 151: dp3 r0.w, r4.xyzx, r4.xyzx
 152: max r0.w, r0.w, l(0.000000)
 153: rsq r0.w, r0.w
 154: mul r4.xyz, r0.wwww, r4.xyzx
 155: dp3_sat r0.w, r2.xyzx, r4.xyzx
 156: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
 157: mul r1.w, r1.w, r1.w
 158: max r1.w, r1.w, l(0.100000)
 159: mul r0.w, r0.w, r0.w
 160: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 161: mul r0.w, r0.w, r0.w
 162: mul r0.w, r1.w, r0.w
 163: mul r0.w, r0.w, l(3.000000)
 164: div r0.w, l(0.062500), r0.w
 165: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 166: mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
 167: add o0.xyz, r0.xyzx, r1.xyzx
 168: mov o0.w, l(0.300000)
 169: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  70: log r0.z, |r1.w|
  71: mul r0.z, r0.z, l(2.200000)
  72: exp r0.z, r0.z
  73: mul r0.z, r0.z, l(34.493240)
  74: mul r1.xyz, r0.zzzz, r1.xyzx
  75: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  76: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  77: max r0.z, r2.w, l(0.000100)
  78: dp3 r0.w, v2.xyzx, v2.xyzx
  79: rsq r1.w, r0.w
  80: sqrt r0.w, r0.w
  81: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  82: mul r3.xyz, r0.wwww, v2.xyzx
  83: mul r4.xyz, r1.wwww, v2.xyzx
  84: dp3 r0.w, r4.xyzx, r2.xyzx
  85: add r0.w, r0.w, l(0.500000)
  86: mul r1.xyz, r0.wwww, r1.xyzx
  87: div r1.xyz, r1.xyzx, r0.zzzz
  88: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  89: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  90: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  91: max r2.xyz, r2.xyzx, cb0[1].xyzx
  92: add r2.xyz, -r1.xyzx, r2.xyzx
  93: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  94: min r1.xyz, r1.xyzx, r2.xyzx
  95: dp3 r0.y, r3.xyzx, r3.xyzx
  96: rsq r0.y, r0.y
  97: mul r2.xyz, r0.yyyy, r3.xyzx
  98: dp3 r0.y, v5.xyzx, v5.xyzx
  99: rsq r0.w, r0.y
 100: max r0.y, r0.y, l(0.000000)
 101: rsq r0.y, r0.y
 102: mul r3.xyz, r0.wwww, v5.xyzx
 103: dp3_sat r0.w, r2.xyzx, r3.xyzx
 104: add r0.w, -r0.w, l(1.000000)
 105: log r0.w, r0.w
 106: mul r0.w, r0.w, cb3[1].x
 107: exp r0.w, r0.w
 108: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 109: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 110: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 111: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 112: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 113: mul_sat r2.xyz, r0.wwww, r2.xyzx
 114: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 115: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 116: mul r3.xyz, v1.yyyy, cb0[62].xywx
 117: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 118: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 119: add r3.xyz, r3.xyzx, cb0[64].xywx
 120: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 121: mul r5.w, r5.y, cb0[12].x
 122: add r3.xy, r5.zzzz, r5.xwxx
 123: div r3.xy, r3.xyxx, r3.zzzz
 124: mul r0.w, cb0[10].x, cb3[4].x
 125: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 126: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 127: mul r3.zw, r3.xxxy, r5.xxxy
 128: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 129: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 130: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 131: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 132: mul r5.xyz, r0.yyyy, v5.xyzx
 133: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 134: dp3 r0.y, -r5.xyzx, r4.xyzx
 135: add r0.y, r0.y, r0.y
 136: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 137: dp3_sat r0.y, r4.xyzx, r5.xyzx
 138: add r0.y, -r0.y, l(1.000000)
 139: mul r0.y, r0.y, r0.y
 140: mul r0.y, r0.y, r0.y
 141: mad r0.y, r0.y, l(0.500000), l(0.040000)
 142: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r0.w, r5.w, l(-1.000000)
 144: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 145: max r0.w, r0.w, l(0.000000)
 146: log r0.w, r0.w
 147: mul r0.w, r0.w, cb1[14].y
 148: exp r0.w, r0.w
 149: mul r0.w, r0.w, cb1[14].x
 150: mul r5.xyz, r5.xyzx, r0.wwww
 151: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mul r5.xyz, r0.yyyy, r5.xyzx
 153: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 154: mul r0.y, cb1[10].z, cb1[13].x
 155: mul r0.x, r0.x, r0.y
 156: mul r0.x, r0.z, r0.x
 157: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 158: dp3 r0.w, r6.xyzx, r6.xyzx
 159: max r0.w, r0.w, l(0.000000)
 160: rsq r0.w, r0.w
 161: mul r5.xyz, r0.wwww, r6.xyzx
 162: dp3_sat r0.w, r4.xyzx, r5.xyzx
 163: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 164: mul r1.w, r1.w, r1.w
 165: max r1.w, r1.w, l(0.100000)
 166: mul r0.w, r0.w, r0.w
 167: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 168: mul r0.w, r0.w, r0.w
 169: mul r0.w, r1.w, r0.w
 170: mul r0.w, r0.w, l(3.000000)
 171: div r0.w, l(0.062500), r0.w
 172: mad r3.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
 174: add o0.xyz, r2.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: sample_c_lz r0.w, v9.xyxx, t3.xxxx, s2, v9.z
  95: add r1.w, -cb2[29].x, l(1.000000)
  96: mad r0.w, r0.w, cb2[29].x, r1.w
  97: ge r1.w, l(0.000000), v9.z
  98: ge r2.y, v9.z, l(1.000000)
  99: or r1.w, r1.w, r2.y
 100: movc r0.w, r1.w, l(1.000000), r0.w
 101: mul r1.w, cb1[10].z, cb1[13].x
 102: mul r0.w, r0.w, r1.w
 103: mul r0.w, r2.x, r0.w
 104: mul r2.xyz, r0.wwww, cb0[4].xyzx
 105: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 106: add o0.xyz, r0.xyzx, r1.xyzx
 107: mov o0.w, l(0.300000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: sample_c_lz r1.w, v9.xyxx, t3.xxxx, s2, v9.z
  44: add r2.w, -cb2[29].x, l(1.000000)
  45: mad r1.w, r1.w, cb2[29].x, r2.w
  46: ge r2.w, l(0.000000), v9.z
  47: ge r3.x, v9.z, l(1.000000)
  48: or r2.w, r2.w, r3.x
  49: movc r1.w, r2.w, l(1.000000), r1.w
  50: add r2.w, -r1.w, l(1.000000)
  51: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  52: log r3.w, |r3.w|
  53: mul r3.w, r3.w, l(2.200000)
  54: exp r3.w, r3.w
  55: mul r3.w, r3.w, l(34.493240)
  56: mul r3.xyz, r3.wwww, r3.xyzx
  57: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  58: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  59: max r3.w, r4.w, l(0.000100)
  60: dp3 r4.x, r2.xyzx, r4.xyzx
  61: add r4.x, r4.x, l(0.500000)
  62: mul r3.xyz, r3.xyzx, r4.xxxx
  63: div r3.xyz, r3.xyzx, r3.wwww
  64: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  65: mul r4.xyz, r3.wwww, cb0[4].xyzx
  66: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  67: max r4.xyz, r4.xyzx, cb0[1].xyzx
  68: add r4.xyz, -r3.xyzx, r4.xyzx
  69: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  70: min r3.xyz, r3.xyzx, r4.xyzx
  71: mul r4.xyz, r0.wwww, v5.xyzx
  72: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  73: dp3 r0.w, -r4.xyzx, r2.xyzx
  74: add r0.w, r0.w, r0.w
  75: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  76: dp3_sat r0.w, r2.xyzx, r4.xyzx
  77: add r0.w, -r0.w, l(1.000000)
  78: mul r0.w, r0.w, r0.w
  79: mul r0.w, r0.w, r0.w
  80: mad r0.w, r0.w, l(0.500000), l(0.040000)
  81: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
  82: add r2.w, r4.w, l(-1.000000)
  83: mad r2.w, cb1[14].w, r2.w, l(1.000000)
  84: max r2.w, r2.w, l(0.000000)
  85: log r2.w, r2.w
  86: mul r2.w, r2.w, cb1[14].y
  87: exp r2.w, r2.w
  88: mul r2.w, r2.w, cb1[14].x
  89: mul r4.xyz, r4.xyzx, r2.wwww
  90: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  91: mul r4.xyz, r0.wwww, r4.xyzx
  92: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
  93: dp3 r0.w, r5.xyzx, r5.xyzx
  94: max r0.w, r0.w, l(0.000000)
  95: rsq r0.w, r0.w
  96: mul r4.xyz, r0.wwww, r5.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
  99: mul r2.x, r2.x, r2.x
 100: max r2.x, r2.x, l(0.100000)
 101: mul r0.w, r0.w, r0.w
 102: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 103: mul r0.w, r0.w, r0.w
 104: mul r0.w, r2.x, r0.w
 105: mul r0.w, r0.w, l(3.000000)
 106: div r0.w, l(0.062500), r0.w
 107: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 108: mul r0.w, cb1[10].z, cb1[13].x
 109: mul r0.w, r1.w, r0.w
 110: mul r0.w, r3.w, r0.w
 111: mul r2.xyz, r0.wwww, cb0[4].xyzx
 112: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 113: add o0.xyz, r0.xyzx, r1.xyzx
 114: mov o0.w, l(0.300000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 12 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: mad r5.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  79: round_ni r5.xy, r5.xyxx
  80: mad r5.zw, v9.xxxy, cb2[30].zzzw, -r5.xxxy
  81: min r6.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  82: add r6.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  83: mad r6.xy, -r6.xyxx, r6.xyxx, r6.zwzz
  84: mul r7.xy, r6.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  85: add r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  86: mul r6.xy, r6.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  87: max r8.xy, r5.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: add r9.xyzw, r5.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  89: mad r8.xy, -r8.xyxx, r8.xyxx, r9.ywyy
  90: add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  91: mul r8.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  92: mul r10.xyzw, r9.xxzz, r9.xxzz
  93: mul r9.xy, r9.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mad r5.zw, r10.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.zzzw
  95: mul r7.zw, r10.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  96: mul r10.xy, r5.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mov r6.z, r10.y
  98: mov r6.w, r9.y
  99: mov r10.w, r9.x
 100: mov r8.zw, r7.yyyz
 101: add r6.yzw, r6.zzyw, r8.zzyw
 102: mov r10.z, r6.x
 103: div r8.yzw, r8.zzyw, r6.yyzw
 104: mov r7.z, r8.x
 105: add r8.xyz, r8.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
 106: mul r8.xyz, r8.xyzx, cb2[30].yyyy
 107: mov r9.w, r8.x
 108: add r10.xyzw, r7.zwxz, r10.zwxz
 109: div r7.xyz, r7.xzwx, r10.zwyz
 110: add r7.xyz, r7.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 111: mul r9.xyz, r7.yxzy, cb2[30].xxxx
 112: mad r7.xyzw, r5.xyxy, cb2[30].xyxy, r9.ywxw
 113: mad r5.zw, r5.xxxy, cb2[30].xxxy, r9.zzzw
 114: sample_c_lz r0.w, r5.zwzz, t3.xxxx, s2, v9.z
 115: sample_c_lz r1.w, r7.xyxx, t3.xxxx, s2, v9.z
 116: sample_c_lz r2.w, r7.zwzz, t3.xxxx, s2, v9.z
 117: mul r7.xyzw, r6.yyyz, r10.zwyz
 118: mul r2.w, r2.w, r7.y
 119: mad r1.w, r7.x, r1.w, r2.w
 120: mad r0.w, r7.z, r0.w, r1.w
 121: mov r8.w, r9.y
 122: mad r11.xyzw, r5.xyxy, cb2[30].xyxy, r8.wywz
 123: mov r9.yw, r8.yyyz
 124: sample_c_lz r1.w, r11.xyxx, t3.xxxx, s2, v9.z
 125: sample_c_lz r2.w, r11.zwzz, t3.xxxx, s2, v9.z
 126: mad r0.w, r7.w, r1.w, r0.w
 127: mad r7.xyzw, r5.xyxy, cb2[30].xyxy, r9.xyzy
 128: mad r5.xyzw, r5.xyxy, cb2[30].xyxy, r9.xwzw
 129: sample_c_lz r1.w, r7.xyxx, t3.xxxx, s2, v9.z
 130: sample_c_lz r3.w, r7.zwzz, t3.xxxx, s2, v9.z
 131: mul r7.xyzw, r6.zzww, r10.xyzw
 132: mul r4.w, r6.w, r10.y
 133: mad r0.w, r7.x, r1.w, r0.w
 134: mad r0.w, r7.y, r3.w, r0.w
 135: mad r0.w, r7.z, r2.w, r0.w
 136: sample_c_lz r1.w, r5.xyxx, t3.xxxx, s2, v9.z
 137: sample_c_lz r2.w, r5.zwzz, t3.xxxx, s2, v9.z
 138: mad r0.w, r7.w, r1.w, r0.w
 139: mad r0.w, r4.w, r2.w, r0.w
 140: add r1.w, -cb2[29].x, l(1.000000)
 141: mad r0.w, r0.w, cb2[29].x, r1.w
 142: ge r1.w, l(0.000000), v9.z
 143: ge r2.w, v9.z, l(1.000000)
 144: or r1.w, r1.w, r2.w
 145: movc r0.w, r1.w, l(1.000000), r0.w
 146: mul r1.w, cb1[10].z, cb1[13].x
 147: mul r0.w, r0.w, r1.w
 148: dp3_sat r1.w, r2.xyzx, cb0[3].xyzx
 149: mul r0.w, r0.w, r1.w
 150: mul r5.xyz, r0.wwww, cb0[4].xyzx
 151: dp3 r0.w, r4.xyzx, r4.xyzx
 152: max r0.w, r0.w, l(0.000000)
 153: rsq r0.w, r0.w
 154: mul r4.xyz, r0.wwww, r4.xyzx
 155: dp3_sat r0.w, r2.xyzx, r4.xyzx
 156: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
 157: mul r1.w, r1.w, r1.w
 158: max r1.w, r1.w, l(0.100000)
 159: mul r0.w, r0.w, r0.w
 160: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 161: mul r0.w, r0.w, r0.w
 162: mul r0.w, r1.w, r0.w
 163: mul r0.w, r0.w, l(3.000000)
 164: div r0.w, l(0.062500), r0.w
 165: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 166: mad r1.xyz, r1.xyzx, r5.xyzx, r3.xyzx
 167: add o0.xyz, r0.xyzx, r1.xyzx
 168: mov o0.w, l(0.300000)
 169: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: dp3 r1.x, v1.xyzx, cb1[4].xyzx
  10: dp3 r1.y, v1.xyzx, cb1[5].xyzx
  11: dp3 r1.z, v1.xyzx, cb1[6].xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: max r0.w, r0.w, l(0.000000)
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  17: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: max r0.w, r0.w, l(0.000000)
  21: rsq r0.w, r0.w
  22: mul o3.xyz, r0.wwww, r1.xyzx
  23: mov o3.w, v2.w
  24: mov o4.xyzw, v3.xyzw
  25: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  30: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  31: mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  32: add o9.xyzw, r0.xyzw, cb2[3].xyzw
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], immediateIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v9.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: mad r0.xy, v9.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
   1: round_ni r0.xy, r0.xyxx
   2: mad r0.zw, v9.xxxy, cb2[30].zzzw, -r0.xxxy
   3: min r1.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
   4: add r1.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
   5: mad r1.xy, -r1.xyxx, r1.xyxx, r1.zwzz
   6: mul r2.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
   7: add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
   8: mul r1.xy, r1.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
   9: max r3.xy, r0.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
  10: add r4.xyzw, r0.zzww, l(0.500000, 1.000000, 0.500000, 1.000000)
  11: mad r3.xy, -r3.xyxx, r3.xyxx, r4.ywyy
  12: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  14: mul r5.xyzw, r4.xxzz, r4.xxzz
  15: mul r4.xy, r4.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  16: mad r0.zw, r5.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), -r0.zzzw
  17: mul r2.zw, r5.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  18: mul r5.xy, r0.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  19: mov r1.z, r5.y
  20: mov r1.w, r4.y
  21: mov r5.w, r4.x
  22: mov r3.zw, r2.yyyz
  23: add r1.yzw, r1.zzyw, r3.zzyw
  24: mov r5.z, r1.x
  25: div r3.yzw, r3.zzyw, r1.yyzw
  26: mov r2.z, r3.x
  27: add r3.xyz, r3.yzwy, l(-2.500000, -0.500000, 1.500000, 0.000000)
  28: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  29: mov r4.w, r3.x
  30: add r5.xyzw, r2.zwxz, r5.zwxz
  31: div r2.xyz, r2.xzwx, r5.zwyz
  32: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  33: mul r4.xyz, r2.yxzy, cb2[30].xxxx
  34: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.ywxw
  35: mad r0.zw, r0.xxxy, cb2[30].xxxy, r4.zzzw
  36: sample_c_lz r0.z, r0.zwzz, t3.xxxx, s2, v9.z
  37: sample_c_lz r0.w, r2.xyxx, t3.xxxx, s2, v9.z
  38: sample_c_lz r1.x, r2.zwzz, t3.xxxx, s2, v9.z
  39: mul r2.xyzw, r1.yyyz, r5.zwyz
  40: mul r1.x, r1.x, r2.y
  41: mad r0.w, r2.x, r0.w, r1.x
  42: mad r0.z, r2.z, r0.z, r0.w
  43: mov r3.w, r4.y
  44: mad r6.xyzw, r0.xyxy, cb2[30].xyxy, r3.wywz
  45: mov r4.yw, r3.yyyz
  46: sample_c_lz r0.w, r6.xyxx, t3.xxxx, s2, v9.z
  47: sample_c_lz r1.x, r6.zwzz, t3.xxxx, s2, v9.z
  48: mad r0.z, r2.w, r0.w, r0.z
  49: mad r2.xyzw, r0.xyxy, cb2[30].xyxy, r4.xyzy
  50: mad r3.xyzw, r0.xyxy, cb2[30].xyxy, r4.xwzw
  51: sample_c_lz r0.x, r2.xyxx, t3.xxxx, s2, v9.z
  52: sample_c_lz r0.y, r2.zwzz, t3.xxxx, s2, v9.z
  53: mul r2.xyzw, r1.zzww, r5.xyzw
  54: mul r0.w, r1.w, r5.y
  55: mad r0.x, r2.x, r0.x, r0.z
  56: mad r0.x, r2.y, r0.y, r0.x
  57: mad r0.x, r2.z, r1.x, r0.x
  58: sample_c_lz r0.y, r3.xyxx, t3.xxxx, s2, v9.z
  59: sample_c_lz r0.z, r3.zwzz, t3.xxxx, s2, v9.z
  60: mad r0.x, r2.w, r0.y, r0.x
  61: mad r0.x, r0.w, r0.z, r0.x
  62: add r0.y, -cb2[29].x, l(1.000000)
  63: mad r0.x, r0.x, cb2[29].x, r0.y
  64: ge r0.y, l(0.000000), v9.z
  65: ge r0.z, v9.z, l(1.000000)
  66: or r0.y, r0.z, r0.y
  67: movc r0.x, r0.y, l(1.000000), r0.x
  68: add r0.y, -r0.x, l(1.000000)
  69: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  70: log r0.z, |r1.w|
  71: mul r0.z, r0.z, l(2.200000)
  72: exp r0.z, r0.z
  73: mul r0.z, r0.z, l(34.493240)
  74: mul r1.xyz, r0.zzzz, r1.xyzx
  75: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  76: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  77: max r0.z, r2.w, l(0.000100)
  78: dp3 r0.w, v2.xyzx, v2.xyzx
  79: rsq r1.w, r0.w
  80: sqrt r0.w, r0.w
  81: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  82: mul r3.xyz, r0.wwww, v2.xyzx
  83: mul r4.xyz, r1.wwww, v2.xyzx
  84: dp3 r0.w, r4.xyzx, r2.xyzx
  85: add r0.w, r0.w, l(0.500000)
  86: mul r1.xyz, r0.wwww, r1.xyzx
  87: div r1.xyz, r1.xyzx, r0.zzzz
  88: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  89: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  90: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  91: max r2.xyz, r2.xyzx, cb0[1].xyzx
  92: add r2.xyz, -r1.xyzx, r2.xyzx
  93: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  94: min r1.xyz, r1.xyzx, r2.xyzx
  95: dp3 r0.y, r3.xyzx, r3.xyzx
  96: rsq r0.y, r0.y
  97: mul r2.xyz, r0.yyyy, r3.xyzx
  98: dp3 r0.y, v5.xyzx, v5.xyzx
  99: rsq r0.w, r0.y
 100: max r0.y, r0.y, l(0.000000)
 101: rsq r0.y, r0.y
 102: mul r3.xyz, r0.wwww, v5.xyzx
 103: dp3_sat r0.w, r2.xyzx, r3.xyzx
 104: add r0.w, -r0.w, l(1.000000)
 105: log r0.w, r0.w
 106: mul r0.w, r0.w, cb3[1].x
 107: exp r0.w, r0.w
 108: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 109: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 110: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 111: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 112: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 113: mul_sat r2.xyz, r0.wwww, r2.xyzx
 114: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 115: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 116: mul r3.xyz, v1.yyyy, cb0[62].xywx
 117: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 118: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 119: add r3.xyz, r3.xyzx, cb0[64].xywx
 120: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 121: mul r5.w, r5.y, cb0[12].x
 122: add r3.xy, r5.zzzz, r5.xwxx
 123: div r3.xy, r3.xyxx, r3.zzzz
 124: mul r0.w, cb0[10].x, cb3[4].x
 125: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 126: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 127: mul r3.zw, r3.xxxy, r5.xxxy
 128: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 129: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 130: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 131: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 132: mul r5.xyz, r0.yyyy, v5.xyzx
 133: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 134: dp3 r0.y, -r5.xyzx, r4.xyzx
 135: add r0.y, r0.y, r0.y
 136: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 137: dp3_sat r0.y, r4.xyzx, r5.xyzx
 138: add r0.y, -r0.y, l(1.000000)
 139: mul r0.y, r0.y, r0.y
 140: mul r0.y, r0.y, r0.y
 141: mad r0.y, r0.y, l(0.500000), l(0.040000)
 142: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 143: add r0.w, r5.w, l(-1.000000)
 144: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 145: max r0.w, r0.w, l(0.000000)
 146: log r0.w, r0.w
 147: mul r0.w, r0.w, cb1[14].y
 148: exp r0.w, r0.w
 149: mul r0.w, r0.w, cb1[14].x
 150: mul r5.xyz, r5.xyzx, r0.wwww
 151: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 152: mul r5.xyz, r0.yyyy, r5.xyzx
 153: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 154: mul r0.y, cb1[10].z, cb1[13].x
 155: mul r0.x, r0.x, r0.y
 156: mul r0.x, r0.z, r0.x
 157: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 158: dp3 r0.w, r6.xyzx, r6.xyzx
 159: max r0.w, r0.w, l(0.000000)
 160: rsq r0.w, r0.w
 161: mul r5.xyz, r0.wwww, r6.xyzx
 162: dp3_sat r0.w, r4.xyzx, r5.xyzx
 163: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 164: mul r1.w, r1.w, r1.w
 165: max r1.w, r1.w, l(0.100000)
 166: mul r0.w, r0.w, r0.w
 167: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 168: mul r0.w, r0.w, r0.w
 169: mul r0.w, r1.w, r0.w
 170: mul r0.w, r0.w, l(3.000000)
 171: div r0.w, l(0.062500), r0.w
 172: mad r3.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 173: mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
 174: add o0.xyz, r2.xyzx, r0.xyzx
 175: mov o0.w, l(0.300000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  95: dp3 r4.x, r4.xyzx, r4.xyzx
  96: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  97: dp3 r4.y, r5.xyzx, r5.xyzx
  98: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  99: dp3 r4.z, r5.xyzx, r5.xyzx
 100: add r5.xyz, v1.xyzx, -cb2[23].xyzx
 101: dp3 r4.w, r5.xyzx, r5.xyzx
 102: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
 103: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
 104: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
 105: add r5.xyz, r5.xyzx, r4.yzwy
 106: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
 108: add r0.w, -r0.w, l(4.000000)
 109: ftou r0.w, r0.w
 110: ishl r0.w, r0.w, l(2)
 111: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
 112: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 113: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 114: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 115: ge r0.w, l(0.000000), r4.z
 116: ge r1.w, r4.z, l(1.000000)
 117: sample_c_lz r3.w, r4.xyxx, t3.xxxx, s2, r4.z
 118: or r0.w, r0.w, r1.w
 119: add r1.w, -cb2[29].x, l(1.000000)
 120: mad r1.w, r3.w, cb2[29].x, r1.w
 121: movc r0.w, r0.w, l(1.000000), r1.w
 122: mul r1.w, cb1[10].z, cb1[13].x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r2.x, r0.w
 125: mul r4.xyz, r0.wwww, cb0[4].xyzx
 126: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 127: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 128: add o0.xyz, r0.xyzx, r1.xyzx
 129: mov o0.w, l(0.300000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz r0.x, r0.xyxx, t3.xxxx, s2, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  30: log r0.z, |r1.w|
  31: mul r0.z, r0.z, l(2.200000)
  32: exp r0.z, r0.z
  33: mul r0.z, r0.z, l(34.493240)
  34: mul r1.xyz, r0.zzzz, r1.xyzx
  35: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  36: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  37: max r0.z, r2.w, l(0.000100)
  38: dp3 r0.w, v2.xyzx, v2.xyzx
  39: rsq r1.w, r0.w
  40: sqrt r0.w, r0.w
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r3.xyz, r0.wwww, v2.xyzx
  43: mul r4.xyz, r1.wwww, v2.xyzx
  44: dp3 r0.w, r4.xyzx, r2.xyzx
  45: add r0.w, r0.w, l(0.500000)
  46: mul r1.xyz, r0.wwww, r1.xyzx
  47: div r1.xyz, r1.xyzx, r0.zzzz
  48: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  49: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  50: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  51: max r2.xyz, r2.xyzx, cb0[1].xyzx
  52: add r2.xyz, -r1.xyzx, r2.xyzx
  53: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  54: min r1.xyz, r1.xyzx, r2.xyzx
  55: dp3 r0.y, r3.xyzx, r3.xyzx
  56: rsq r0.y, r0.y
  57: mul r2.xyz, r0.yyyy, r3.xyzx
  58: dp3 r0.y, v5.xyzx, v5.xyzx
  59: rsq r0.w, r0.y
  60: max r0.y, r0.y, l(0.000000)
  61: rsq r0.y, r0.y
  62: mul r3.xyz, r0.wwww, v5.xyzx
  63: dp3_sat r0.w, r2.xyzx, r3.xyzx
  64: add r0.w, -r0.w, l(1.000000)
  65: log r0.w, r0.w
  66: mul r0.w, r0.w, cb3[1].x
  67: exp r0.w, r0.w
  68: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
  69: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
  70: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
  71: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  72: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  73: mul_sat r2.xyz, r0.wwww, r2.xyzx
  74: mul r2.xyz, r2.xyzx, cb3[1].yyyy
  75: mul r2.xyz, r2.xyzx, cb3[2].xyzx
  76: mul r3.xyz, v1.yyyy, cb0[62].xywx
  77: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
  78: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
  79: add r3.xyz, r3.xyzx, cb0[64].xywx
  80: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  81: mul r5.w, r5.y, cb0[12].x
  82: add r3.xy, r5.zzzz, r5.xwxx
  83: div r3.xy, r3.xyxx, r3.zzzz
  84: mul r0.w, cb0[10].x, cb3[4].x
  85: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
  86: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
  87: mul r3.zw, r3.xxxy, r5.xxxy
  88: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
  89: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
  90: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
  91: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  92: mul r5.xyz, r0.yyyy, v5.xyzx
  93: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
  94: dp3 r0.y, -r5.xyzx, r4.xyzx
  95: add r0.y, r0.y, r0.y
  96: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
  97: dp3_sat r0.y, r4.xyzx, r5.xyzx
  98: add r0.y, -r0.y, l(1.000000)
  99: mul r0.y, r0.y, r0.y
 100: mul r0.y, r0.y, r0.y
 101: mad r0.y, r0.y, l(0.500000), l(0.040000)
 102: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 103: add r0.w, r5.w, l(-1.000000)
 104: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 105: max r0.w, r0.w, l(0.000000)
 106: log r0.w, r0.w
 107: mul r0.w, r0.w, cb1[14].y
 108: exp r0.w, r0.w
 109: mul r0.w, r0.w, cb1[14].x
 110: mul r5.xyz, r5.xyzx, r0.wwww
 111: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 112: mul r5.xyz, r0.yyyy, r5.xyzx
 113: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 114: dp3 r0.y, r6.xyzx, r6.xyzx
 115: max r0.y, r0.y, l(0.000000)
 116: rsq r0.y, r0.y
 117: mul r5.xyz, r0.yyyy, r6.xyzx
 118: dp3_sat r0.y, r4.xyzx, r5.xyzx
 119: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 120: mul r0.yw, r0.yyyw, r0.yyyw
 121: max r0.w, r0.w, l(0.100000)
 122: mad r0.y, r0.y, l(-0.937500), l(1.000010)
 123: mul r0.y, r0.y, r0.y
 124: mul r0.y, r0.w, r0.y
 125: mul r0.y, r0.y, l(3.000000)
 126: div r0.y, l(0.062500), r0.y
 127: mad r4.xyz, r0.yyyy, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 128: mul r0.y, cb1[10].z, cb1[13].x
 129: mul r0.x, r0.x, r0.y
 130: mul r0.x, r0.z, r0.x
 131: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 132: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 133: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 134: add o0.xyz, r2.xyzx, r0.xyzx
 135: mov o0.w, l(0.300000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t6.xyzw, s5
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 159: log r0.x, |r6.w|
 160: mul r0.x, r0.x, l(2.200000)
 161: exp r0.x, r0.x
 162: mul r0.x, r0.x, l(34.493240)
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 165: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 166: max r0.x, r7.w, l(0.000100)
 167: dp3 r1.w, r0.yzwy, r7.xyzx
 168: add r1.w, r1.w, l(0.500000)
 169: mul r6.xyz, r1.wwww, r6.xyzx
 170: div r6.xyz, r6.xyzx, r0.xxxx
 171: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 172: dp3 r0.x, r5.xyzx, r5.xyzx
 173: max r0.x, r0.x, l(0.000000)
 174: rsq r0.x, r0.x
 175: mul r5.xyz, r0.xxxx, r5.xyzx
 176: dp3_sat r0.x, r0.yzwy, r5.xyzx
 177: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 178: mul r0.xy, r0.xyxx, r0.xyxx
 179: max r0.y, r0.y, l(0.100000)
 180: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 181: mul r0.x, r0.x, r0.x
 182: mul r0.x, r0.y, r0.x
 183: mul r0.x, r0.x, l(3.000000)
 184: div r0.x, l(0.062500), r0.x
 185: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 186: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 187: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 188: add o0.xyz, r1.xyzx, r0.xyzx
 189: mov o0.w, l(0.300000)
 190: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  91: log r0.z, |r1.w|
  92: mul r0.z, r0.z, l(2.200000)
  93: exp r0.z, r0.z
  94: mul r0.z, r0.z, l(34.493240)
  95: mul r1.xyz, r0.zzzz, r1.xyzx
  96: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  97: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  98: max r0.z, r2.w, l(0.000100)
  99: dp3 r0.w, v2.xyzx, v2.xyzx
 100: rsq r1.w, r0.w
 101: sqrt r0.w, r0.w
 102: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 103: mul r3.xyz, r0.wwww, v2.xyzx
 104: mul r4.xyz, r1.wwww, v2.xyzx
 105: dp3 r0.w, r4.xyzx, r2.xyzx
 106: add r0.w, r0.w, l(0.500000)
 107: mul r1.xyz, r0.wwww, r1.xyzx
 108: div r1.xyz, r1.xyzx, r0.zzzz
 109: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
 110: mul r2.xyz, r0.zzzz, cb0[4].xyzx
 111: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
 112: max r2.xyz, r2.xyzx, cb0[1].xyzx
 113: add r2.xyz, -r1.xyzx, r2.xyzx
 114: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
 115: min r1.xyz, r1.xyzx, r2.xyzx
 116: dp3 r0.y, r3.xyzx, r3.xyzx
 117: rsq r0.y, r0.y
 118: mul r2.xyz, r0.yyyy, r3.xyzx
 119: dp3 r0.y, v5.xyzx, v5.xyzx
 120: rsq r0.w, r0.y
 121: max r0.y, r0.y, l(0.000000)
 122: rsq r0.y, r0.y
 123: mul r3.xyz, r0.wwww, v5.xyzx
 124: dp3_sat r0.w, r2.xyzx, r3.xyzx
 125: add r0.w, -r0.w, l(1.000000)
 126: log r0.w, r0.w
 127: mul r0.w, r0.w, cb3[1].x
 128: exp r0.w, r0.w
 129: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 130: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 131: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 132: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 133: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 134: mul_sat r2.xyz, r0.wwww, r2.xyzx
 135: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 136: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 137: mul r3.xyz, v1.yyyy, cb0[62].xywx
 138: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 139: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 140: add r3.xyz, r3.xyzx, cb0[64].xywx
 141: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 142: mul r5.w, r5.y, cb0[12].x
 143: add r3.xy, r5.zzzz, r5.xwxx
 144: div r3.xy, r3.xyxx, r3.zzzz
 145: mul r0.w, cb0[10].x, cb3[4].x
 146: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 147: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 148: mul r3.zw, r3.xxxy, r5.xxxy
 149: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 150: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 151: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 152: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 153: mul r5.xyz, r0.yyyy, v5.xyzx
 154: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 155: dp3 r0.y, -r5.xyzx, r4.xyzx
 156: add r0.y, r0.y, r0.y
 157: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 158: dp3_sat r0.y, r4.xyzx, r5.xyzx
 159: add r0.y, -r0.y, l(1.000000)
 160: mul r0.y, r0.y, r0.y
 161: mul r0.y, r0.y, r0.y
 162: mad r0.y, r0.y, l(0.500000), l(0.040000)
 163: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 164: add r0.w, r5.w, l(-1.000000)
 165: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 166: max r0.w, r0.w, l(0.000000)
 167: log r0.w, r0.w
 168: mul r0.w, r0.w, cb1[14].y
 169: exp r0.w, r0.w
 170: mul r0.w, r0.w, cb1[14].x
 171: mul r5.xyz, r5.xyzx, r0.wwww
 172: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 173: mul r5.xyz, r0.yyyy, r5.xyzx
 174: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 175: mul r0.y, cb1[10].z, cb1[13].x
 176: mul r0.x, r0.x, r0.y
 177: mul r0.x, r0.z, r0.x
 178: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 179: dp3 r0.w, r6.xyzx, r6.xyzx
 180: max r0.w, r0.w, l(0.000000)
 181: rsq r0.w, r0.w
 182: mul r5.xyz, r0.wwww, r6.xyzx
 183: dp3_sat r0.w, r4.xyzx, r5.xyzx
 184: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 185: mul r1.w, r1.w, r1.w
 186: max r1.w, r1.w, l(0.100000)
 187: mul r0.w, r0.w, r0.w
 188: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 189: mul r0.w, r0.w, r0.w
 190: mul r0.w, r1.w, r0.w
 191: mul r0.w, r0.w, l(3.000000)
 192: div r0.w, l(0.062500), r0.w
 193: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 194: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 195: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 196: add o0.xyz, r2.xyzx, r0.xyzx
 197: mov o0.w, l(0.300000)
 198: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r2.yzw, r0.wwww, l(0.000000, 0.040000, 0.040000, 0.040000), r1.xxyz
  94: add r4.xyz, v1.xyzx, -cb2[20].xyzx
  95: dp3 r4.x, r4.xyzx, r4.xyzx
  96: add r5.xyz, v1.xyzx, -cb2[21].xyzx
  97: dp3 r4.y, r5.xyzx, r5.xyzx
  98: add r5.xyz, v1.xyzx, -cb2[22].xyzx
  99: dp3 r4.z, r5.xyzx, r5.xyzx
 100: add r5.xyz, v1.xyzx, -cb2[23].xyzx
 101: dp3 r4.w, r5.xyzx, r5.xyzx
 102: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
 103: movc r5.xyz, r4.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
 104: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
 105: add r5.xyz, r5.xyzx, r4.yzwy
 106: max r4.yzw, r5.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
 108: add r0.w, -r0.w, l(4.000000)
 109: ftou r0.w, r0.w
 110: ishl r0.w, r0.w, l(2)
 111: mul r4.xyz, v1.yyyy, cb2[r0.w + 1].xyzx
 112: mad r4.xyz, cb2[r0.w + 0].xyzx, v1.xxxx, r4.xyzx
 113: mad r4.xyz, cb2[r0.w + 2].xyzx, v1.zzzz, r4.xyzx
 114: add r4.xyz, r4.xyzx, cb2[r0.w + 3].xyzx
 115: ge r0.w, l(0.000000), r4.z
 116: ge r1.w, r4.z, l(1.000000)
 117: sample_c_lz r3.w, r4.xyxx, t3.xxxx, s2, r4.z
 118: or r0.w, r0.w, r1.w
 119: add r1.w, -cb2[29].x, l(1.000000)
 120: mad r1.w, r3.w, cb2[29].x, r1.w
 121: movc r0.w, r0.w, l(1.000000), r1.w
 122: mul r1.w, cb1[10].z, cb1[13].x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r2.x, r0.w
 125: mul r4.xyz, r0.wwww, cb0[4].xyzx
 126: mad r2.xyz, r2.yzwy, r4.xyzx, r3.xyzx
 127: mad r1.xyz, v8.yzwy, r1.xyzx, r2.xyzx
 128: add o0.xyz, r0.xyzx, r1.xyzx
 129: mov o0.w, l(0.300000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: ge r0.w, l(0.000000), r0.z
  22: ge r1.x, r0.z, l(1.000000)
  23: sample_c_lz r0.x, r0.xyxx, t3.xxxx, s2, r0.z
  24: or r0.y, r0.w, r1.x
  25: add r0.z, -cb2[29].x, l(1.000000)
  26: mad r0.x, r0.x, cb2[29].x, r0.z
  27: movc r0.x, r0.y, l(1.000000), r0.x
  28: add r0.y, -r0.x, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  30: log r0.z, |r1.w|
  31: mul r0.z, r0.z, l(2.200000)
  32: exp r0.z, r0.z
  33: mul r0.z, r0.z, l(34.493240)
  34: mul r1.xyz, r0.zzzz, r1.xyzx
  35: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  36: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  37: max r0.z, r2.w, l(0.000100)
  38: dp3 r0.w, v2.xyzx, v2.xyzx
  39: rsq r1.w, r0.w
  40: sqrt r0.w, r0.w
  41: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  42: mul r3.xyz, r0.wwww, v2.xyzx
  43: mul r4.xyz, r1.wwww, v2.xyzx
  44: dp3 r0.w, r4.xyzx, r2.xyzx
  45: add r0.w, r0.w, l(0.500000)
  46: mul r1.xyz, r0.wwww, r1.xyzx
  47: div r1.xyz, r1.xyzx, r0.zzzz
  48: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
  49: mul r2.xyz, r0.zzzz, cb0[4].xyzx
  50: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
  51: max r2.xyz, r2.xyzx, cb0[1].xyzx
  52: add r2.xyz, -r1.xyzx, r2.xyzx
  53: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
  54: min r1.xyz, r1.xyzx, r2.xyzx
  55: dp3 r0.y, r3.xyzx, r3.xyzx
  56: rsq r0.y, r0.y
  57: mul r2.xyz, r0.yyyy, r3.xyzx
  58: dp3 r0.y, v5.xyzx, v5.xyzx
  59: rsq r0.w, r0.y
  60: max r0.y, r0.y, l(0.000000)
  61: rsq r0.y, r0.y
  62: mul r3.xyz, r0.wwww, v5.xyzx
  63: dp3_sat r0.w, r2.xyzx, r3.xyzx
  64: add r0.w, -r0.w, l(1.000000)
  65: log r0.w, r0.w
  66: mul r0.w, r0.w, cb3[1].x
  67: exp r0.w, r0.w
  68: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
  69: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
  70: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
  71: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  72: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  73: mul_sat r2.xyz, r0.wwww, r2.xyzx
  74: mul r2.xyz, r2.xyzx, cb3[1].yyyy
  75: mul r2.xyz, r2.xyzx, cb3[2].xyzx
  76: mul r3.xyz, v1.yyyy, cb0[62].xywx
  77: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
  78: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
  79: add r3.xyz, r3.xyzx, cb0[64].xywx
  80: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  81: mul r5.w, r5.y, cb0[12].x
  82: add r3.xy, r5.zzzz, r5.xwxx
  83: div r3.xy, r3.xyxx, r3.zzzz
  84: mul r0.w, cb0[10].x, cb3[4].x
  85: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
  86: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
  87: mul r3.zw, r3.xxxy, r5.xxxy
  88: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
  89: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
  90: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
  91: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  92: mul r5.xyz, r0.yyyy, v5.xyzx
  93: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
  94: dp3 r0.y, -r5.xyzx, r4.xyzx
  95: add r0.y, r0.y, r0.y
  96: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
  97: dp3_sat r0.y, r4.xyzx, r5.xyzx
  98: add r0.y, -r0.y, l(1.000000)
  99: mul r0.y, r0.y, r0.y
 100: mul r0.y, r0.y, r0.y
 101: mad r0.y, r0.y, l(0.500000), l(0.040000)
 102: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 103: add r0.w, r5.w, l(-1.000000)
 104: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 105: max r0.w, r0.w, l(0.000000)
 106: log r0.w, r0.w
 107: mul r0.w, r0.w, cb1[14].y
 108: exp r0.w, r0.w
 109: mul r0.w, r0.w, cb1[14].x
 110: mul r5.xyz, r5.xyzx, r0.wwww
 111: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 112: mul r5.xyz, r0.yyyy, r5.xyzx
 113: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 114: dp3 r0.y, r6.xyzx, r6.xyzx
 115: max r0.y, r0.y, l(0.000000)
 116: rsq r0.y, r0.y
 117: mul r5.xyz, r0.yyyy, r6.xyzx
 118: dp3_sat r0.y, r4.xyzx, r5.xyzx
 119: dp3_sat r0.w, cb0[3].xyzx, r5.xyzx
 120: mul r0.yw, r0.yyyw, r0.yyyw
 121: max r0.w, r0.w, l(0.100000)
 122: mad r0.y, r0.y, l(-0.937500), l(1.000010)
 123: mul r0.y, r0.y, r0.y
 124: mul r0.y, r0.w, r0.y
 125: mul r0.y, r0.y, l(3.000000)
 126: div r0.y, l(0.062500), r0.y
 127: mad r4.xyz, r0.yyyy, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 128: mul r0.y, cb1[10].z, cb1[13].x
 129: mul r0.x, r0.x, r0.y
 130: mul r0.x, r0.z, r0.x
 131: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 132: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 133: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 134: add o0.xyz, r2.xyzx, r0.xyzx
 135: mov o0.w, l(0.300000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, v5.xyzx, v5.xyzx
 101: max r1.w, r0.x, l(0.000000)
 102: rsq r0.x, r0.x
 103: mul r3.xyz, r0.xxxx, v5.xyzx
 104: rsq r0.x, r1.w
 105: mul r4.xyz, r0.xxxx, v5.xyzx
 106: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 107: dp3 r0.x, -r4.xyzx, r0.yzwy
 108: add r0.x, r0.x, r0.x
 109: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 110: dp3_sat r0.x, r0.yzwy, r4.xyzx
 111: add r0.x, -r0.x, l(1.000000)
 112: mul r0.x, r0.x, r0.x
 113: mul r0.x, r0.x, r0.x
 114: mad r0.x, r0.x, l(0.500000), l(0.040000)
 115: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 116: add r1.w, r4.w, l(-1.000000)
 117: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 118: max r1.w, r1.w, l(0.000000)
 119: log r1.w, r1.w
 120: mul r1.w, r1.w, cb1[14].y
 121: exp r1.w, r1.w
 122: mul r1.w, r1.w, cb1[14].x
 123: mul r4.xyz, r4.xyzx, r1.wwww
 124: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 125: mul r4.xyz, r0.xxxx, r4.xyzx
 126: dp3 r0.x, r1.xyzx, r1.xyzx
 127: rsq r0.x, r0.x
 128: mul r1.xyz, r0.xxxx, r1.xyzx
 129: dp3_sat r0.x, r1.xyzx, r3.xyzx
 130: add r0.x, -r0.x, l(1.000000)
 131: log r0.x, r0.x
 132: mul r0.x, r0.x, cb3[1].x
 133: exp r0.x, r0.x
 134: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
 135: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
 136: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
 137: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 138: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 139: mul_sat r1.xyz, r0.xxxx, r1.xyzx
 140: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 141: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 142: mul r3.xyz, v1.yyyy, cb0[62].xywx
 143: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 144: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 145: add r3.xyz, r3.xyzx, cb0[64].xywx
 146: mul r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 147: mul r6.w, r6.y, cb0[12].x
 148: add r3.xy, r6.zzzz, r6.xwxx
 149: div r3.xy, r3.xyxx, r3.zzzz
 150: mul r0.x, cb0[10].x, cb3[4].x
 151: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.xxxx
 152: sample r6.xyzw, r3.zwzz, t6.xyzw, s5
 153: mul r3.zw, r3.xxxy, r6.xxxy
 154: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 155: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 156: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 157: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 158: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 159: log r0.x, |r6.w|
 160: mul r0.x, r0.x, l(2.200000)
 161: exp r0.x, r0.x
 162: mul r0.x, r0.x, l(34.493240)
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 165: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 166: max r0.x, r7.w, l(0.000100)
 167: dp3 r1.w, r0.yzwy, r7.xyzx
 168: add r1.w, r1.w, l(0.500000)
 169: mul r6.xyz, r1.wwww, r6.xyzx
 170: div r6.xyz, r6.xyzx, r0.xxxx
 171: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 172: dp3 r0.x, r5.xyzx, r5.xyzx
 173: max r0.x, r0.x, l(0.000000)
 174: rsq r0.x, r0.x
 175: mul r5.xyz, r0.xxxx, r5.xyzx
 176: dp3_sat r0.x, r0.yzwy, r5.xyzx
 177: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 178: mul r0.xy, r0.xyxx, r0.xyxx
 179: max r0.y, r0.y, l(0.100000)
 180: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 181: mul r0.x, r0.x, r0.x
 182: mul r0.x, r0.y, r0.x
 183: mul r0.x, r0.x, l(3.000000)
 184: div r0.x, l(0.062500), r0.x
 185: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 186: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 187: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 188: add o0.xyz, r1.xyzx, r0.xyzx
 189: mov o0.w, l(0.300000)
 190: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers, 1 branches
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _AdditionalLightsCount at 80
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[16], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 5
   0: mul r0.xyz, v0.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[3].xyzx
   4: dp3 r1.x, v1.xyzx, cb2[4].xyzx
   5: dp3 r1.y, v1.xyzx, cb2[5].xyzx
   6: dp3 r1.z, v1.xyzx, cb2[6].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: max r0.w, r0.w, l(0.000000)
   9: rsq r0.w, r0.w
  10: mul r1.xyz, r0.wwww, r1.xyzx
  11: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  12: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  13: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: max r0.w, r0.w, l(0.000000)
  16: rsq r0.w, r0.w
  17: mul o3.xyz, r0.wwww, r2.xyzx
  18: mul r2.xyzw, r0.yyyy, cb0[62].xyzw
  19: mad r2.xyzw, cb0[61].xyzw, r0.xxxx, r2.xyzw
  20: mad r2.xyzw, cb0[63].xyzw, r0.zzzz, r2.xyzw
  21: add o0.xyzw, r2.xyzw, cb0[64].xyzw
  22: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  23: mad o6.xy, v4.xyxx, cb2[15].xyxx, cb2[15].zwzz
  24: min r0.w, cb0[5].x, cb2[10].y
  25: ftoi r0.w, r0.w
  26: mov r2.xyz, l(0,0,0,0)
  27: mov r1.w, l(0)
  28: loop 
  29:   uge r2.w, r1.w, r0.w
  30:   breakc_nz r2.w
  31:   and r2.w, r1.w, l(3)
  32:   ushr r3.x, r1.w, l(2)
  33:   dp4 r2.w, cb2[r3.x + 11].xyzw, icb[r2.w + 0].xyzw
  34:   ftoi r2.w, r2.w
  35:   mad r3.xyz, -r0.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
  36:   dp3 r3.w, r3.xyzx, r3.xyzx
  37:   max r3.w, r3.w, l(0.000061)
  38:   rsq r4.x, r3.w
  39:   mul r3.xyz, r3.xyzx, r4.xxxx
  40:   div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  41:   mul r3.w, r3.w, cb1[r2.w + 512].x
  42:   mad r3.w, -r3.w, r3.w, l(1.000000)
  43:   max r3.w, r3.w, l(0.000000)
  44:   mul r3.w, r3.w, r3.w
  45:   mul r3.w, r3.w, r4.x
  46:   dp3 r4.x, cb1[r2.w + 768].xyzx, r3.xyzx
  47:   mad_sat r4.x, r4.x, cb1[r2.w + 512].z, cb1[r2.w + 512].w
  48:   mul r4.x, r4.x, r4.x
  49:   mul r3.w, r3.w, r4.x
  50:   ftoi r4.x, cb1[r2.w + 1024].x
  51:   dp4 r4.x, cb2[13].xyzw, icb[r4.x + 0].xyzw
  52:   max r4.x, r4.x, cb1[r2.w + 1024].y
  53:   mul r3.w, r3.w, r4.x
  54:   mul r4.xyz, r3.wwww, cb1[r2.w + 256].xyzx
  55:   dp3_sat r2.w, r1.xyzx, r3.xyzx
  56:   mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
  57:   iadd r1.w, r1.w, l(1)
  58: endloop 
  59: mov o8.yzw, r2.xxyz
  60: mov o3.w, v2.w
  61: mov o4.xyzw, v3.xyzw
  62: mov o8.x, l(0)
  63: mov o9.xyzw, l(0,0,0,0)
  64: mov o1.xyz, r0.xyzx
  65: mov o2.xyz, r1.xyzx
  66: mov o7.xyz, l(0,0,0,0)
  67: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float    yzw
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v8.yzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  91: log r0.z, |r1.w|
  92: mul r0.z, r0.z, l(2.200000)
  93: exp r0.z, r0.z
  94: mul r0.z, r0.z, l(34.493240)
  95: mul r1.xyz, r0.zzzz, r1.xyzx
  96: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  97: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  98: max r0.z, r2.w, l(0.000100)
  99: dp3 r0.w, v2.xyzx, v2.xyzx
 100: rsq r1.w, r0.w
 101: sqrt r0.w, r0.w
 102: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 103: mul r3.xyz, r0.wwww, v2.xyzx
 104: mul r4.xyz, r1.wwww, v2.xyzx
 105: dp3 r0.w, r4.xyzx, r2.xyzx
 106: add r0.w, r0.w, l(0.500000)
 107: mul r1.xyz, r0.wwww, r1.xyzx
 108: div r1.xyz, r1.xyzx, r0.zzzz
 109: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
 110: mul r2.xyz, r0.zzzz, cb0[4].xyzx
 111: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
 112: max r2.xyz, r2.xyzx, cb0[1].xyzx
 113: add r2.xyz, -r1.xyzx, r2.xyzx
 114: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
 115: min r1.xyz, r1.xyzx, r2.xyzx
 116: dp3 r0.y, r3.xyzx, r3.xyzx
 117: rsq r0.y, r0.y
 118: mul r2.xyz, r0.yyyy, r3.xyzx
 119: dp3 r0.y, v5.xyzx, v5.xyzx
 120: rsq r0.w, r0.y
 121: max r0.y, r0.y, l(0.000000)
 122: rsq r0.y, r0.y
 123: mul r3.xyz, r0.wwww, v5.xyzx
 124: dp3_sat r0.w, r2.xyzx, r3.xyzx
 125: add r0.w, -r0.w, l(1.000000)
 126: log r0.w, r0.w
 127: mul r0.w, r0.w, cb3[1].x
 128: exp r0.w, r0.w
 129: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 130: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 131: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 132: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 133: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 134: mul_sat r2.xyz, r0.wwww, r2.xyzx
 135: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 136: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 137: mul r3.xyz, v1.yyyy, cb0[62].xywx
 138: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 139: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 140: add r3.xyz, r3.xyzx, cb0[64].xywx
 141: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 142: mul r5.w, r5.y, cb0[12].x
 143: add r3.xy, r5.zzzz, r5.xwxx
 144: div r3.xy, r3.xyxx, r3.zzzz
 145: mul r0.w, cb0[10].x, cb3[4].x
 146: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 147: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 148: mul r3.zw, r3.xxxy, r5.xxxy
 149: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 150: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 151: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 152: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 153: mul r5.xyz, r0.yyyy, v5.xyzx
 154: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 155: dp3 r0.y, -r5.xyzx, r4.xyzx
 156: add r0.y, r0.y, r0.y
 157: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 158: dp3_sat r0.y, r4.xyzx, r5.xyzx
 159: add r0.y, -r0.y, l(1.000000)
 160: mul r0.y, r0.y, r0.y
 161: mul r0.y, r0.y, r0.y
 162: mad r0.y, r0.y, l(0.500000), l(0.040000)
 163: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 164: add r0.w, r5.w, l(-1.000000)
 165: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 166: max r0.w, r0.w, l(0.000000)
 167: log r0.w, r0.w
 168: mul r0.w, r0.w, cb1[14].y
 169: exp r0.w, r0.w
 170: mul r0.w, r0.w, cb1[14].x
 171: mul r5.xyz, r5.xyzx, r0.wwww
 172: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 173: mul r5.xyz, r0.yyyy, r5.xyzx
 174: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 175: mul r0.y, cb1[10].z, cb1[13].x
 176: mul r0.x, r0.x, r0.y
 177: mul r0.x, r0.z, r0.x
 178: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 179: dp3 r0.w, r6.xyzx, r6.xyzx
 180: max r0.w, r0.w, l(0.000000)
 181: rsq r0.w, r0.w
 182: mul r5.xyz, r0.wwww, r6.xyzx
 183: dp3_sat r0.w, r4.xyzx, r5.xyzx
 184: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 185: mul r1.w, r1.w, r1.w
 186: max r1.w, r1.w, l(0.100000)
 187: mul r0.w, r0.w, r0.w
 188: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 189: mul r0.w, r0.w, r0.w
 190: mul r0.w, r1.w, r0.w
 191: mul r0.w, r0.w, l(3.000000)
 192: div r0.w, l(0.062500), r0.w
 193: mad r4.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 194: mad r0.xyz, r4.xyzx, r0.xyzx, r1.xyzx
 195: mad r0.xyz, v8.yzwy, r3.xyzx, r0.xyzx
 196: add o0.xyz, r2.xyzx, r0.xyzx
 197: mov o0.w, l(0.300000)
 198: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: sample_c_lz r2.w, r3.xyxx, t3.xxxx, s2, r3.z
  80: add r3.x, -cb3[29].x, l(1.000000)
  81: mad r2.w, r2.w, cb3[29].x, r3.x
  82: ge r3.x, l(0.000000), r3.z
  83: ge r3.y, r3.z, l(1.000000)
  84: or r3.x, r3.y, r3.x
  85: movc r2.w, r3.x, l(1.000000), r2.w
  86: dp3 r3.x, -r2.xyzx, r1.xyzx
  87: add r3.x, r3.x, r3.x
  88: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  89: dp3_sat r3.w, r1.xyzx, r2.xyzx
  90: add r3.w, -r3.w, l(1.000000)
  91: mul r3.w, r3.w, r3.w
  92: mul r3.w, r3.w, r3.w
  93: sample_l r6.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r3.x, r6.w, l(-1.000000)
  95: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  96: max r3.x, r3.x, l(0.000000)
  97: log r3.x, r3.x
  98: mul r3.x, r3.x, cb2[14].y
  99: exp r3.x, r3.x
 100: mul r3.x, r3.x, cb2[14].x
 101: mul r3.xyz, r6.xyzx, r3.xxxx
 102: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mad r3.w, r3.w, l(0.500000), l(0.040000)
 104: mul r3.xyz, r3.wwww, r3.xyzx
 105: mad r3.xyz, r4.xyzx, r5.xyzx, r3.xyzx
 106: mul r1.w, r1.w, r2.w
 107: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 108: mul r1.w, r1.w, r2.w
 109: mul r4.xyz, r1.wwww, cb0[4].xyzx
 110: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 111: dp3 r0.x, r6.xyzx, r6.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mul r6.xyz, r0.xxxx, r6.xyzx
 115: dp3_sat r0.x, r1.xyzx, r6.xyzx
 116: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 117: mul r0.x, r0.x, r0.x
 118: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 119: mul r1.w, r1.w, r1.w
 120: mul r0.x, r0.x, r0.x
 121: max r1.w, r1.w, l(0.100000)
 122: mul r0.x, r0.x, r1.w
 123: mul r0.x, r0.x, l(3.000000)
 124: div r0.x, l(0.062500), r0.x
 125: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 126: mad r3.xyz, r6.xyzx, r4.xyzx, r3.xyzx
 127: min r0.x, cb0[5].x, cb2[10].y
 128: ftoi r0.x, r0.x
 129: mov r4.xyz, r3.xyzx
 130: mov r1.w, l(0)
 131: loop 
 132:   uge r2.w, r1.w, r0.x
 133:   breakc_nz r2.w
 134:   and r2.w, r1.w, l(3)
 135:   ushr r3.w, r1.w, l(2)
 136:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 137:   ftoi r2.w, r2.w
 138:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 139:   dp3 r3.w, r6.xyzx, r6.xyzx
 140:   max r3.w, r3.w, l(0.000061)
 141:   rsq r4.w, r3.w
 142:   mul r7.xyz, r4.wwww, r6.xyzx
 143:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 144:   mul r3.w, r3.w, cb1[r2.w + 512].x
 145:   mad r3.w, -r3.w, r3.w, l(1.000000)
 146:   max r3.w, r3.w, l(0.000000)
 147:   mul r3.w, r3.w, r3.w
 148:   mul r3.w, r3.w, r5.w
 149:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 150:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 151:   mul r5.w, r5.w, r5.w
 152:   mul r3.w, r3.w, r5.w
 153:   ftoi r5.w, cb1[r2.w + 1024].x
 154:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 155:   max r5.w, r5.w, cb1[r2.w + 1024].y
 156:   mul r3.w, r3.w, r5.w
 157:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 158:   mul r3.w, r3.w, r5.w
 159:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 160:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 161:   dp3 r2.w, r6.xyzx, r6.xyzx
 162:   max r2.w, r2.w, l(0.000000)
 163:   rsq r2.w, r2.w
 164:   mul r6.xyz, r2.wwww, r6.xyzx
 165:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 166:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 167:   mul r2.w, r2.w, r2.w
 168:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 169:   mul r3.w, r3.w, r3.w
 170:   mul r2.w, r2.w, r2.w
 171:   max r3.w, r3.w, l(0.100000)
 172:   mul r2.w, r2.w, r3.w
 173:   mul r2.w, r2.w, l(3.000000)
 174:   div r2.w, l(0.062500), r2.w
 175:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 176:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 177:   iadd r1.w, r1.w, l(1)
 178: endloop 
 179: add o0.xyz, r0.yzwy, r4.xyzx
 180: mov o0.w, l(0.300000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: sample_c_lz r2.w, r3.xyxx, t3.xxxx, s2, r3.z
  80: add r3.x, -cb3[29].x, l(1.000000)
  81: mad r2.w, r2.w, cb3[29].x, r3.x
  82: ge r3.x, l(0.000000), r3.z
  83: ge r3.y, r3.z, l(1.000000)
  84: or r3.x, r3.y, r3.x
  85: movc r2.w, r3.x, l(1.000000), r2.w
  86: dp3_sat r3.x, cb0[3].xyzx, r1.xyzx
  87: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  88: add r4.w, -r2.w, l(1.000000)
  89: mad r3.yzw, -r3.yyzw, r4.wwww, r4.xxyz
  90: max r3.yzw, r3.yyzw, cb0[1].xxyz
  91: add r3.yzw, -r4.xxyz, r3.yyzw
  92: mad r3.yzw, cb3[29].xxxx, r3.yyzw, r4.xxyz
  93: min r3.yzw, r3.yyzw, r4.xxyz
  94: dp3 r4.x, -r2.xyzx, r1.xyzx
  95: add r4.x, r4.x, r4.x
  96: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  97: dp3_sat r4.w, r1.xyzx, r2.xyzx
  98: add r4.w, -r4.w, l(1.000000)
  99: mul r4.w, r4.w, r4.w
 100: mul r4.w, r4.w, r4.w
 101: sample_l r6.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 102: add r4.x, r6.w, l(-1.000000)
 103: mad r4.x, cb2[14].w, r4.x, l(1.000000)
 104: max r4.x, r4.x, l(0.000000)
 105: log r4.x, r4.x
 106: mul r4.x, r4.x, cb2[14].y
 107: exp r4.x, r4.x
 108: mul r4.x, r4.x, cb2[14].x
 109: mul r4.xyz, r6.xyzx, r4.xxxx
 110: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 111: mad r4.w, r4.w, l(0.500000), l(0.040000)
 112: mul r4.xyz, r4.wwww, r4.xyzx
 113: mad r3.yzw, r3.yyzw, r5.xxyz, r4.xxyz
 114: mul r1.w, r1.w, r2.w
 115: mul r1.w, r3.x, r1.w
 116: mul r4.xyz, r1.wwww, cb0[4].xyzx
 117: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 118: dp3 r0.x, r6.xyzx, r6.xyzx
 119: max r0.x, r0.x, l(0.000000)
 120: rsq r0.x, r0.x
 121: mul r6.xyz, r0.xxxx, r6.xyzx
 122: dp3_sat r0.x, r1.xyzx, r6.xyzx
 123: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 124: mul r0.x, r0.x, r0.x
 125: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 126: mul r1.w, r1.w, r1.w
 127: mul r0.x, r0.x, r0.x
 128: max r1.w, r1.w, l(0.100000)
 129: mul r0.x, r0.x, r1.w
 130: mul r0.x, r0.x, l(3.000000)
 131: div r0.x, l(0.062500), r0.x
 132: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 133: mad r3.xyz, r6.xyzx, r4.xyzx, r3.yzwy
 134: min r0.x, cb0[5].x, cb2[10].y
 135: ftoi r0.x, r0.x
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r2.w, r1.w, r0.x
 140:   breakc_nz r2.w
 141:   and r2.w, r1.w, l(3)
 142:   ushr r3.w, r1.w, l(2)
 143:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 144:   ftoi r2.w, r2.w
 145:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 146:   dp3 r3.w, r6.xyzx, r6.xyzx
 147:   max r3.w, r3.w, l(0.000061)
 148:   rsq r4.w, r3.w
 149:   mul r7.xyz, r4.wwww, r6.xyzx
 150:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 151:   mul r3.w, r3.w, cb1[r2.w + 512].x
 152:   mad r3.w, -r3.w, r3.w, l(1.000000)
 153:   max r3.w, r3.w, l(0.000000)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r3.w, r3.w, r5.w
 156:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 157:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 158:   mul r5.w, r5.w, r5.w
 159:   mul r3.w, r3.w, r5.w
 160:   ftoi r5.w, cb1[r2.w + 1024].x
 161:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 162:   max r5.w, r5.w, cb1[r2.w + 1024].y
 163:   mul r3.w, r3.w, r5.w
 164:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 165:   mul r3.w, r3.w, r5.w
 166:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 167:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 168:   dp3 r2.w, r6.xyzx, r6.xyzx
 169:   max r2.w, r2.w, l(0.000000)
 170:   rsq r2.w, r2.w
 171:   mul r6.xyz, r2.wwww, r6.xyzx
 172:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 173:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 174:   mul r2.w, r2.w, r2.w
 175:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 176:   mul r3.w, r3.w, r3.w
 177:   mul r2.w, r2.w, r2.w
 178:   max r3.w, r3.w, l(0.100000)
 179:   mul r2.w, r2.w, r3.w
 180:   mul r2.w, r2.w, l(3.000000)
 181:   div r2.w, l(0.062500), r2.w
 182:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 183:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 184:   iadd r1.w, r1.w, l(1)
 185: endloop 
 186: add o0.xyz, r0.yzwy, r4.xyzx
 187: mov o0.w, l(0.300000)
 188: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 206 math, 14 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: mad r6.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  80: round_ni r6.xy, r6.xyxx
  81: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r6.xyxx
  82: add r7.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  83: mul r8.xyzw, r7.xxzz, r7.xxzz
  84: mul r6.zw, r8.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  85: mad r7.xz, r8.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  86: add r8.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  87: min r8.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: mad r8.zw, -r8.zzzw, r8.zzzw, r8.xxxy
  89: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: mad r3.xy, -r3.xyxx, r3.xyxx, r7.ywyy
  91: add r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  92: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  93: mul r9.xy, r7.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mul r10.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  95: mul r8.xy, r8.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  96: mul r11.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mul r3.xy, r7.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  98: mov r9.z, r8.x
  99: mov r9.w, r3.x
 100: mov r10.z, r11.x
 101: mov r10.w, r6.z
 102: add r7.xyzw, r9.zwxz, r10.zwxz
 103: mov r8.z, r9.y
 104: mov r8.w, r3.y
 105: mov r11.z, r10.y
 106: mov r11.w, r6.w
 107: add r3.xyw, r8.zyzw, r11.zyzw
 108: div r8.xyz, r10.xzwx, r7.zwyz
 109: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 110: div r9.xyz, r11.zywz, r3.xywx
 111: add r9.xyz, r9.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 112: mul r8.xyz, r8.yxzy, cb3[30].xxxx
 113: mul r9.xyz, r9.xyzx, cb3[30].yyyy
 114: mov r8.w, r9.x
 115: mad r10.xyzw, r6.xyxy, cb3[30].xyxy, r8.ywxw
 116: mad r6.zw, r6.xxxy, cb3[30].xxxy, r8.zzzw
 117: mov r9.w, r8.y
 118: mov r8.yw, r9.yyyz
 119: mad r11.xyzw, r6.xyxy, cb3[30].xyxy, r8.xyzy
 120: mad r9.xyzw, r6.xyxy, cb3[30].xyxy, r9.wywz
 121: mad r8.xyzw, r6.xyxy, cb3[30].xyxy, r8.xwzw
 122: mul r12.xyzw, r3.xxxy, r7.zwyz
 123: mul r13.xyzw, r3.yyww, r7.xyzw
 124: mul r2.w, r3.w, r7.y
 125: sample_c_lz r3.x, r10.xyxx, t3.xxxx, s2, r3.z
 126: sample_c_lz r3.y, r10.zwzz, t3.xxxx, s2, r3.z
 127: mul r3.y, r3.y, r12.y
 128: mad r3.x, r12.x, r3.x, r3.y
 129: sample_c_lz r3.y, r6.zwzz, t3.xxxx, s2, r3.z
 130: mad r3.x, r12.z, r3.y, r3.x
 131: sample_c_lz r3.y, r9.xyxx, t3.xxxx, s2, r3.z
 132: mad r3.x, r12.w, r3.y, r3.x
 133: sample_c_lz r3.y, r11.xyxx, t3.xxxx, s2, r3.z
 134: mad r3.x, r13.x, r3.y, r3.x
 135: sample_c_lz r3.y, r11.zwzz, t3.xxxx, s2, r3.z
 136: mad r3.x, r13.y, r3.y, r3.x
 137: sample_c_lz r3.y, r9.zwzz, t3.xxxx, s2, r3.z
 138: mad r3.x, r13.z, r3.y, r3.x
 139: sample_c_lz r3.y, r8.xyxx, t3.xxxx, s2, r3.z
 140: mad r3.x, r13.w, r3.y, r3.x
 141: sample_c_lz r3.y, r8.zwzz, t3.xxxx, s2, r3.z
 142: mad r2.w, r2.w, r3.y, r3.x
 143: add r3.x, -cb3[29].x, l(1.000000)
 144: mad r2.w, r2.w, cb3[29].x, r3.x
 145: ge r3.x, l(0.000000), r3.z
 146: ge r3.y, r3.z, l(1.000000)
 147: or r3.x, r3.y, r3.x
 148: movc r2.w, r3.x, l(1.000000), r2.w
 149: dp3 r3.x, -r2.xyzx, r1.xyzx
 150: add r3.x, r3.x, r3.x
 151: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 152: dp3_sat r3.w, r1.xyzx, r2.xyzx
 153: add r3.w, -r3.w, l(1.000000)
 154: mul r3.w, r3.w, r3.w
 155: mul r3.w, r3.w, r3.w
 156: sample_l r6.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 157: add r3.x, r6.w, l(-1.000000)
 158: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 159: max r3.x, r3.x, l(0.000000)
 160: log r3.x, r3.x
 161: mul r3.x, r3.x, cb2[14].y
 162: exp r3.x, r3.x
 163: mul r3.x, r3.x, cb2[14].x
 164: mul r3.xyz, r6.xyzx, r3.xxxx
 165: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 166: mad r3.w, r3.w, l(0.500000), l(0.040000)
 167: mul r3.xyz, r3.wwww, r3.xyzx
 168: mad r3.xyz, r4.xyzx, r5.xyzx, r3.xyzx
 169: mul r1.w, r1.w, r2.w
 170: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 171: mul r1.w, r1.w, r2.w
 172: mul r4.xyz, r1.wwww, cb0[4].xyzx
 173: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 174: dp3 r0.x, r6.xyzx, r6.xyzx
 175: max r0.x, r0.x, l(0.000000)
 176: rsq r0.x, r0.x
 177: mul r6.xyz, r0.xxxx, r6.xyzx
 178: dp3_sat r0.x, r1.xyzx, r6.xyzx
 179: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 180: mul r0.x, r0.x, r0.x
 181: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 182: mul r1.w, r1.w, r1.w
 183: mul r0.x, r0.x, r0.x
 184: max r1.w, r1.w, l(0.100000)
 185: mul r0.x, r0.x, r1.w
 186: mul r0.x, r0.x, l(3.000000)
 187: div r0.x, l(0.062500), r0.x
 188: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 189: mad r3.xyz, r6.xyzx, r4.xyzx, r3.xyzx
 190: min r0.x, cb0[5].x, cb2[10].y
 191: ftoi r0.x, r0.x
 192: mov r4.xyz, r3.xyzx
 193: mov r1.w, l(0)
 194: loop 
 195:   uge r2.w, r1.w, r0.x
 196:   breakc_nz r2.w
 197:   and r2.w, r1.w, l(3)
 198:   ushr r3.w, r1.w, l(2)
 199:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 200:   ftoi r2.w, r2.w
 201:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 202:   dp3 r3.w, r6.xyzx, r6.xyzx
 203:   max r3.w, r3.w, l(0.000061)
 204:   rsq r4.w, r3.w
 205:   mul r7.xyz, r4.wwww, r6.xyzx
 206:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 207:   mul r3.w, r3.w, cb1[r2.w + 512].x
 208:   mad r3.w, -r3.w, r3.w, l(1.000000)
 209:   max r3.w, r3.w, l(0.000000)
 210:   mul r3.w, r3.w, r3.w
 211:   mul r3.w, r3.w, r5.w
 212:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 213:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 214:   mul r5.w, r5.w, r5.w
 215:   mul r3.w, r3.w, r5.w
 216:   ftoi r5.w, cb1[r2.w + 1024].x
 217:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 218:   max r5.w, r5.w, cb1[r2.w + 1024].y
 219:   mul r3.w, r3.w, r5.w
 220:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 221:   mul r3.w, r3.w, r5.w
 222:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 223:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 224:   dp3 r2.w, r6.xyzx, r6.xyzx
 225:   max r2.w, r2.w, l(0.000000)
 226:   rsq r2.w, r2.w
 227:   mul r6.xyz, r2.wwww, r6.xyzx
 228:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 229:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 230:   mul r2.w, r2.w, r2.w
 231:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 232:   mul r3.w, r3.w, r3.w
 233:   mul r2.w, r2.w, r2.w
 234:   max r3.w, r3.w, l(0.100000)
 235:   mul r2.w, r2.w, r3.w
 236:   mul r2.w, r2.w, l(3.000000)
 237:   div r2.w, l(0.062500), r2.w
 238:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 239:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 240:   iadd r1.w, r1.w, l(1)
 241: endloop 
 242: add o0.xyz, r0.yzwy, r4.xyzx
 243: mov o0.w, l(0.300000)
 244: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 213 math, 14 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 4 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb4[4].x
  13: mad r1.zw, v4.xxxy, cb4[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t6.xyzw, s5
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb4[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t4.xyzw, s3
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb4[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb4[0].zzzw
  30: mad r0.zw, v4.xxxy, cb4[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t5.xyzw, s4
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb4[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb4[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: mad r6.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  80: round_ni r6.xy, r6.xyxx
  81: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r6.xyxx
  82: add r7.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  83: mul r8.xyzw, r7.xxzz, r7.xxzz
  84: mul r6.zw, r8.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  85: mad r7.xz, r8.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  86: add r8.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  87: min r8.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: mad r8.zw, -r8.zzzw, r8.zzzw, r8.xxxy
  89: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: mad r3.xy, -r3.xyxx, r3.xyxx, r7.ywyy
  91: add r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  92: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  93: mul r9.xy, r7.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mul r10.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  95: mul r8.xy, r8.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  96: mul r11.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mul r3.xy, r7.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  98: mov r9.z, r8.x
  99: mov r9.w, r3.x
 100: mov r10.z, r11.x
 101: mov r10.w, r6.z
 102: add r7.xyzw, r9.zwxz, r10.zwxz
 103: mov r8.z, r9.y
 104: mov r8.w, r3.y
 105: mov r11.z, r10.y
 106: mov r11.w, r6.w
 107: add r3.xyw, r8.zyzw, r11.zyzw
 108: div r8.xyz, r10.xzwx, r7.zwyz
 109: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 110: div r9.xyz, r11.zywz, r3.xywx
 111: add r9.xyz, r9.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 112: mul r8.xyz, r8.yxzy, cb3[30].xxxx
 113: mul r9.xyz, r9.xyzx, cb3[30].yyyy
 114: mov r8.w, r9.x
 115: mad r10.xyzw, r6.xyxy, cb3[30].xyxy, r8.ywxw
 116: mad r6.zw, r6.xxxy, cb3[30].xxxy, r8.zzzw
 117: mov r9.w, r8.y
 118: mov r8.yw, r9.yyyz
 119: mad r11.xyzw, r6.xyxy, cb3[30].xyxy, r8.xyzy
 120: mad r9.xyzw, r6.xyxy, cb3[30].xyxy, r9.wywz
 121: mad r8.xyzw, r6.xyxy, cb3[30].xyxy, r8.xwzw
 122: mul r12.xyzw, r3.xxxy, r7.zwyz
 123: mul r13.xyzw, r3.yyww, r7.xyzw
 124: mul r2.w, r3.w, r7.y
 125: sample_c_lz r3.x, r10.xyxx, t3.xxxx, s2, r3.z
 126: sample_c_lz r3.y, r10.zwzz, t3.xxxx, s2, r3.z
 127: mul r3.y, r3.y, r12.y
 128: mad r3.x, r12.x, r3.x, r3.y
 129: sample_c_lz r3.y, r6.zwzz, t3.xxxx, s2, r3.z
 130: mad r3.x, r12.z, r3.y, r3.x
 131: sample_c_lz r3.y, r9.xyxx, t3.xxxx, s2, r3.z
 132: mad r3.x, r12.w, r3.y, r3.x
 133: sample_c_lz r3.y, r11.xyxx, t3.xxxx, s2, r3.z
 134: mad r3.x, r13.x, r3.y, r3.x
 135: sample_c_lz r3.y, r11.zwzz, t3.xxxx, s2, r3.z
 136: mad r3.x, r13.y, r3.y, r3.x
 137: sample_c_lz r3.y, r9.zwzz, t3.xxxx, s2, r3.z
 138: mad r3.x, r13.z, r3.y, r3.x
 139: sample_c_lz r3.y, r8.xyxx, t3.xxxx, s2, r3.z
 140: mad r3.x, r13.w, r3.y, r3.x
 141: sample_c_lz r3.y, r8.zwzz, t3.xxxx, s2, r3.z
 142: mad r2.w, r2.w, r3.y, r3.x
 143: add r3.x, -cb3[29].x, l(1.000000)
 144: mad r2.w, r2.w, cb3[29].x, r3.x
 145: ge r3.x, l(0.000000), r3.z
 146: ge r3.y, r3.z, l(1.000000)
 147: or r3.x, r3.y, r3.x
 148: movc r2.w, r3.x, l(1.000000), r2.w
 149: dp3_sat r3.x, cb0[3].xyzx, r1.xyzx
 150: mul r3.yzw, r3.xxxx, cb0[4].xxyz
 151: add r4.w, -r2.w, l(1.000000)
 152: mad r3.yzw, -r3.yyzw, r4.wwww, r4.xxyz
 153: max r3.yzw, r3.yyzw, cb0[1].xxyz
 154: add r3.yzw, -r4.xxyz, r3.yyzw
 155: mad r3.yzw, cb3[29].xxxx, r3.yyzw, r4.xxyz
 156: min r3.yzw, r3.yyzw, r4.xxyz
 157: dp3 r4.x, -r2.xyzx, r1.xyzx
 158: add r4.x, r4.x, r4.x
 159: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
 160: dp3_sat r4.w, r1.xyzx, r2.xyzx
 161: add r4.w, -r4.w, l(1.000000)
 162: mul r4.w, r4.w, r4.w
 163: mul r4.w, r4.w, r4.w
 164: sample_l r6.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 165: add r4.x, r6.w, l(-1.000000)
 166: mad r4.x, cb2[14].w, r4.x, l(1.000000)
 167: max r4.x, r4.x, l(0.000000)
 168: log r4.x, r4.x
 169: mul r4.x, r4.x, cb2[14].y
 170: exp r4.x, r4.x
 171: mul r4.x, r4.x, cb2[14].x
 172: mul r4.xyz, r6.xyzx, r4.xxxx
 173: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 174: mad r4.w, r4.w, l(0.500000), l(0.040000)
 175: mul r4.xyz, r4.wwww, r4.xyzx
 176: mad r3.yzw, r3.yyzw, r5.xxyz, r4.xxyz
 177: mul r1.w, r1.w, r2.w
 178: mul r1.w, r3.x, r1.w
 179: mul r4.xyz, r1.wwww, cb0[4].xyzx
 180: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 181: dp3 r0.x, r6.xyzx, r6.xyzx
 182: max r0.x, r0.x, l(0.000000)
 183: rsq r0.x, r0.x
 184: mul r6.xyz, r0.xxxx, r6.xyzx
 185: dp3_sat r0.x, r1.xyzx, r6.xyzx
 186: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 187: mul r0.x, r0.x, r0.x
 188: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 189: mul r1.w, r1.w, r1.w
 190: mul r0.x, r0.x, r0.x
 191: max r1.w, r1.w, l(0.100000)
 192: mul r0.x, r0.x, r1.w
 193: mul r0.x, r0.x, l(3.000000)
 194: div r0.x, l(0.062500), r0.x
 195: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 196: mad r3.xyz, r6.xyzx, r4.xyzx, r3.yzwy
 197: min r0.x, cb0[5].x, cb2[10].y
 198: ftoi r0.x, r0.x
 199: mov r4.xyz, r3.xyzx
 200: mov r1.w, l(0)
 201: loop 
 202:   uge r2.w, r1.w, r0.x
 203:   breakc_nz r2.w
 204:   and r2.w, r1.w, l(3)
 205:   ushr r3.w, r1.w, l(2)
 206:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 207:   ftoi r2.w, r2.w
 208:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 209:   dp3 r3.w, r6.xyzx, r6.xyzx
 210:   max r3.w, r3.w, l(0.000061)
 211:   rsq r4.w, r3.w
 212:   mul r7.xyz, r4.wwww, r6.xyzx
 213:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 214:   mul r3.w, r3.w, cb1[r2.w + 512].x
 215:   mad r3.w, -r3.w, r3.w, l(1.000000)
 216:   max r3.w, r3.w, l(0.000000)
 217:   mul r3.w, r3.w, r3.w
 218:   mul r3.w, r3.w, r5.w
 219:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 220:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 221:   mul r5.w, r5.w, r5.w
 222:   mul r3.w, r3.w, r5.w
 223:   ftoi r5.w, cb1[r2.w + 1024].x
 224:   dp4 r5.w, cb2[13].xyzw, icb[r5.w + 0].xyzw
 225:   max r5.w, r5.w, cb1[r2.w + 1024].y
 226:   mul r3.w, r3.w, r5.w
 227:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 228:   mul r3.w, r3.w, r5.w
 229:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 230:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 231:   dp3 r2.w, r6.xyzx, r6.xyzx
 232:   max r2.w, r2.w, l(0.000000)
 233:   rsq r2.w, r2.w
 234:   mul r6.xyz, r2.wwww, r6.xyzx
 235:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 236:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 237:   mul r2.w, r2.w, r2.w
 238:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 239:   mul r3.w, r3.w, r3.w
 240:   mul r2.w, r2.w, r2.w
 241:   max r3.w, r3.w, l(0.100000)
 242:   mul r2.w, r2.w, r3.w
 243:   mul r2.w, r2.w, l(3.000000)
 244:   div r2.w, l(0.062500), r2.w
 245:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 246:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 247:   iadd r1.w, r1.w, l(1)
 248: endloop 
 249: add o0.xyz, r0.yzwy, r4.xyzx
 250: mov o0.w, l(0.300000)
 251: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: sample_c_lz r2.w, r3.xyxx, t3.xxxx, s2, r3.z
  80: add r3.x, -cb3[29].x, l(1.000000)
  81: mad r2.w, r2.w, cb3[29].x, r3.x
  82: ge r3.x, l(0.000000), r3.z
  83: ge r3.y, r3.z, l(1.000000)
  84: or r3.x, r3.y, r3.x
  85: movc r2.w, r3.x, l(1.000000), r2.w
  86: dp3 r3.x, -r2.xyzx, r1.xyzx
  87: add r3.x, r3.x, r3.x
  88: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
  89: dp3_sat r3.w, r1.xyzx, r2.xyzx
  90: add r3.w, -r3.w, l(1.000000)
  91: mul r3.w, r3.w, r3.w
  92: mul r3.w, r3.w, r3.w
  93: sample_l r6.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
  94: add r3.x, r6.w, l(-1.000000)
  95: mad r3.x, cb2[14].w, r3.x, l(1.000000)
  96: max r3.x, r3.x, l(0.000000)
  97: log r3.x, r3.x
  98: mul r3.x, r3.x, cb2[14].y
  99: exp r3.x, r3.x
 100: mul r3.x, r3.x, cb2[14].x
 101: mul r3.xyz, r6.xyzx, r3.xxxx
 102: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 103: mad r3.w, r3.w, l(0.500000), l(0.040000)
 104: mul r3.xyz, r3.wwww, r3.xyzx
 105: mad r3.xyz, r4.xyzx, r5.xyzx, r3.xyzx
 106: mul r1.w, r1.w, r2.w
 107: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 108: mul r1.w, r1.w, r2.w
 109: mul r4.xyz, r1.wwww, cb0[4].xyzx
 110: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 111: dp3 r0.x, r6.xyzx, r6.xyzx
 112: max r0.x, r0.x, l(0.000000)
 113: rsq r0.x, r0.x
 114: mul r6.xyz, r0.xxxx, r6.xyzx
 115: dp3_sat r0.x, r1.xyzx, r6.xyzx
 116: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 117: mul r0.x, r0.x, r0.x
 118: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 119: mul r1.w, r1.w, r1.w
 120: mul r0.x, r0.x, r0.x
 121: max r1.w, r1.w, l(0.100000)
 122: mul r0.x, r0.x, r1.w
 123: mul r0.x, r0.x, l(3.000000)
 124: div r0.x, l(0.062500), r0.x
 125: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 126: mad r3.xyz, r6.xyzx, r4.xyzx, r3.xyzx
 127: min r0.x, cb0[5].x, cb2[10].y
 128: ftoi r0.x, r0.x
 129: mov r4.xyz, r3.xyzx
 130: mov r1.w, l(0)
 131: loop 
 132:   uge r2.w, r1.w, r0.x
 133:   breakc_nz r2.w
 134:   and r2.w, r1.w, l(3)
 135:   ushr r3.w, r1.w, l(2)
 136:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 137:   ftoi r2.w, r2.w
 138:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 139:   dp3 r3.w, r6.xyzx, r6.xyzx
 140:   max r3.w, r3.w, l(0.000061)
 141:   rsq r4.w, r3.w
 142:   mul r7.xyz, r4.wwww, r6.xyzx
 143:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 144:   mul r3.w, r3.w, cb1[r2.w + 512].x
 145:   mad r3.w, -r3.w, r3.w, l(1.000000)
 146:   max r3.w, r3.w, l(0.000000)
 147:   mul r3.w, r3.w, r3.w
 148:   mul r3.w, r3.w, r5.w
 149:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 150:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 151:   mul r5.w, r5.w, r5.w
 152:   mul r3.w, r3.w, r5.w
 153:   ishl r5.w, r2.w, l(2)
 154:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 155:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 156:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 157:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 158:   div r8.xyz, r8.xyzx, r8.wwww
 159:   sample_c_lz r5.w, r8.xyxx, t4.xxxx, s3, r8.z
 160:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 161:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 162:   ge r6.w, l(0.000000), r8.z
 163:   ge r7.w, r8.z, l(1.000000)
 164:   or r6.w, r6.w, r7.w
 165:   movc r5.w, r6.w, l(1.000000), r5.w
 166:   ftoi r6.w, cb1[r2.w + 1024].x
 167:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 168:   max r6.w, r6.w, cb1[r2.w + 1024].y
 169:   mul r3.w, r3.w, r6.w
 170:   mul r3.w, r5.w, r3.w
 171:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 172:   mul r3.w, r3.w, r5.w
 173:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 174:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 175:   dp3 r2.w, r6.xyzx, r6.xyzx
 176:   max r2.w, r2.w, l(0.000000)
 177:   rsq r2.w, r2.w
 178:   mul r6.xyz, r2.wwww, r6.xyzx
 179:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 180:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 181:   mul r2.w, r2.w, r2.w
 182:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 183:   mul r3.w, r3.w, r3.w
 184:   mul r2.w, r2.w, r2.w
 185:   max r3.w, r3.w, l(0.100000)
 186:   mul r2.w, r2.w, r3.w
 187:   mul r2.w, r2.w, l(3.000000)
 188:   div r2.w, l(0.062500), r2.w
 189:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 190:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 191:   iadd r1.w, r1.w, l(1)
 192: endloop 
 193: add o0.xyz, r0.yzwy, r4.xyzx
 194: mov o0.w, l(0.300000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 181 math, 9 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[30], dynamicIndexed
      dcl_constantbuffer CB4[1280], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: sample_c_lz r2.w, r3.xyxx, t3.xxxx, s2, r3.z
  80: add r3.x, -cb3[29].x, l(1.000000)
  81: mad r2.w, r2.w, cb3[29].x, r3.x
  82: ge r3.x, l(0.000000), r3.z
  83: ge r3.y, r3.z, l(1.000000)
  84: or r3.x, r3.y, r3.x
  85: movc r2.w, r3.x, l(1.000000), r2.w
  86: dp3_sat r3.x, cb0[3].xyzx, r1.xyzx
  87: mul r3.yzw, r3.xxxx, cb0[4].xxyz
  88: add r4.w, -r2.w, l(1.000000)
  89: mad r3.yzw, -r3.yyzw, r4.wwww, r4.xxyz
  90: max r3.yzw, r3.yyzw, cb0[1].xxyz
  91: add r3.yzw, -r4.xxyz, r3.yyzw
  92: mad r3.yzw, cb3[29].xxxx, r3.yyzw, r4.xxyz
  93: min r3.yzw, r3.yyzw, r4.xxyz
  94: dp3 r4.x, -r2.xyzx, r1.xyzx
  95: add r4.x, r4.x, r4.x
  96: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
  97: dp3_sat r4.w, r1.xyzx, r2.xyzx
  98: add r4.w, -r4.w, l(1.000000)
  99: mul r4.w, r4.w, r4.w
 100: mul r4.w, r4.w, r4.w
 101: sample_l r6.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 102: add r4.x, r6.w, l(-1.000000)
 103: mad r4.x, cb2[14].w, r4.x, l(1.000000)
 104: max r4.x, r4.x, l(0.000000)
 105: log r4.x, r4.x
 106: mul r4.x, r4.x, cb2[14].y
 107: exp r4.x, r4.x
 108: mul r4.x, r4.x, cb2[14].x
 109: mul r4.xyz, r6.xyzx, r4.xxxx
 110: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 111: mad r4.w, r4.w, l(0.500000), l(0.040000)
 112: mul r4.xyz, r4.wwww, r4.xyzx
 113: mad r3.yzw, r3.yyzw, r5.xxyz, r4.xxyz
 114: mul r1.w, r1.w, r2.w
 115: mul r1.w, r3.x, r1.w
 116: mul r4.xyz, r1.wwww, cb0[4].xyzx
 117: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 118: dp3 r0.x, r6.xyzx, r6.xyzx
 119: max r0.x, r0.x, l(0.000000)
 120: rsq r0.x, r0.x
 121: mul r6.xyz, r0.xxxx, r6.xyzx
 122: dp3_sat r0.x, r1.xyzx, r6.xyzx
 123: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 124: mul r0.x, r0.x, r0.x
 125: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 126: mul r1.w, r1.w, r1.w
 127: mul r0.x, r0.x, r0.x
 128: max r1.w, r1.w, l(0.100000)
 129: mul r0.x, r0.x, r1.w
 130: mul r0.x, r0.x, l(3.000000)
 131: div r0.x, l(0.062500), r0.x
 132: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 133: mad r3.xyz, r6.xyzx, r4.xyzx, r3.yzwy
 134: min r0.x, cb0[5].x, cb2[10].y
 135: ftoi r0.x, r0.x
 136: mov r4.xyz, r3.xyzx
 137: mov r1.w, l(0)
 138: loop 
 139:   uge r2.w, r1.w, r0.x
 140:   breakc_nz r2.w
 141:   and r2.w, r1.w, l(3)
 142:   ushr r3.w, r1.w, l(2)
 143:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 144:   ftoi r2.w, r2.w
 145:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 146:   dp3 r3.w, r6.xyzx, r6.xyzx
 147:   max r3.w, r3.w, l(0.000061)
 148:   rsq r4.w, r3.w
 149:   mul r7.xyz, r4.wwww, r6.xyzx
 150:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 151:   mul r3.w, r3.w, cb1[r2.w + 512].x
 152:   mad r3.w, -r3.w, r3.w, l(1.000000)
 153:   max r3.w, r3.w, l(0.000000)
 154:   mul r3.w, r3.w, r3.w
 155:   mul r3.w, r3.w, r5.w
 156:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 157:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 158:   mul r5.w, r5.w, r5.w
 159:   mul r3.w, r3.w, r5.w
 160:   ishl r5.w, r2.w, l(2)
 161:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 162:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 163:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 164:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 165:   div r8.xyz, r8.xyzx, r8.wwww
 166:   sample_c_lz r5.w, r8.xyxx, t4.xxxx, s3, r8.z
 167:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 168:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 169:   ge r6.w, l(0.000000), r8.z
 170:   ge r7.w, r8.z, l(1.000000)
 171:   or r6.w, r6.w, r7.w
 172:   movc r5.w, r6.w, l(1.000000), r5.w
 173:   ftoi r6.w, cb1[r2.w + 1024].x
 174:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 175:   max r6.w, r6.w, cb1[r2.w + 1024].y
 176:   mul r3.w, r3.w, r6.w
 177:   mul r3.w, r5.w, r3.w
 178:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 179:   mul r3.w, r3.w, r5.w
 180:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 181:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 182:   dp3 r2.w, r6.xyzx, r6.xyzx
 183:   max r2.w, r2.w, l(0.000000)
 184:   rsq r2.w, r2.w
 185:   mul r6.xyz, r2.wwww, r6.xyzx
 186:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 187:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 188:   mul r2.w, r2.w, r2.w
 189:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 190:   mul r3.w, r3.w, r3.w
 191:   mul r2.w, r2.w, r2.w
 192:   max r3.w, r3.w, l(0.100000)
 193:   mul r2.w, r2.w, r3.w
 194:   mul r2.w, r2.w, l(3.000000)
 195:   div r2.w, l(0.062500), r2.w
 196:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 197:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 198:   iadd r1.w, r1.w, l(1)
 199: endloop 
 200: add o0.xyz, r0.yzwy, r4.xyzx
 201: mov o0.w, l(0.300000)
 202: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 262 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: mad r6.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  80: round_ni r6.xy, r6.xyxx
  81: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r6.xyxx
  82: add r7.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  83: mul r8.xyzw, r7.xxzz, r7.xxzz
  84: mul r6.zw, r8.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  85: mad r7.xz, r8.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  86: add r8.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  87: min r8.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: mad r8.zw, -r8.zzzw, r8.zzzw, r8.xxxy
  89: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: mad r3.xy, -r3.xyxx, r3.xyxx, r7.ywyy
  91: add r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  92: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  93: mul r9.xy, r7.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mul r10.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  95: mul r8.xy, r8.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  96: mul r11.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mul r3.xy, r7.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  98: mov r9.z, r8.x
  99: mov r9.w, r3.x
 100: mov r10.z, r11.x
 101: mov r10.w, r6.z
 102: add r7.xyzw, r9.zwxz, r10.zwxz
 103: mov r8.z, r9.y
 104: mov r8.w, r3.y
 105: mov r11.z, r10.y
 106: mov r11.w, r6.w
 107: add r3.xyw, r8.zyzw, r11.zyzw
 108: div r8.xyz, r10.xzwx, r7.zwyz
 109: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 110: div r9.xyz, r11.zywz, r3.xywx
 111: add r9.xyz, r9.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 112: mul r8.xyz, r8.yxzy, cb3[30].xxxx
 113: mul r9.xyz, r9.xyzx, cb3[30].yyyy
 114: mov r8.w, r9.x
 115: mad r10.xyzw, r6.xyxy, cb3[30].xyxy, r8.ywxw
 116: mad r6.zw, r6.xxxy, cb3[30].xxxy, r8.zzzw
 117: mov r9.w, r8.y
 118: mov r8.yw, r9.yyyz
 119: mad r11.xyzw, r6.xyxy, cb3[30].xyxy, r8.xyzy
 120: mad r9.xyzw, r6.xyxy, cb3[30].xyxy, r9.wywz
 121: mad r8.xyzw, r6.xyxy, cb3[30].xyxy, r8.xwzw
 122: mul r12.xyzw, r3.xxxy, r7.zwyz
 123: mul r13.xyzw, r3.yyww, r7.xyzw
 124: mul r2.w, r3.w, r7.y
 125: sample_c_lz r3.x, r10.xyxx, t3.xxxx, s2, r3.z
 126: sample_c_lz r3.y, r10.zwzz, t3.xxxx, s2, r3.z
 127: mul r3.y, r3.y, r12.y
 128: mad r3.x, r12.x, r3.x, r3.y
 129: sample_c_lz r3.y, r6.zwzz, t3.xxxx, s2, r3.z
 130: mad r3.x, r12.z, r3.y, r3.x
 131: sample_c_lz r3.y, r9.xyxx, t3.xxxx, s2, r3.z
 132: mad r3.x, r12.w, r3.y, r3.x
 133: sample_c_lz r3.y, r11.xyxx, t3.xxxx, s2, r3.z
 134: mad r3.x, r13.x, r3.y, r3.x
 135: sample_c_lz r3.y, r11.zwzz, t3.xxxx, s2, r3.z
 136: mad r3.x, r13.y, r3.y, r3.x
 137: sample_c_lz r3.y, r9.zwzz, t3.xxxx, s2, r3.z
 138: mad r3.x, r13.z, r3.y, r3.x
 139: sample_c_lz r3.y, r8.xyxx, t3.xxxx, s2, r3.z
 140: mad r3.x, r13.w, r3.y, r3.x
 141: sample_c_lz r3.y, r8.zwzz, t3.xxxx, s2, r3.z
 142: mad r2.w, r2.w, r3.y, r3.x
 143: add r3.x, -cb3[29].x, l(1.000000)
 144: mad r2.w, r2.w, cb3[29].x, r3.x
 145: ge r3.x, l(0.000000), r3.z
 146: ge r3.y, r3.z, l(1.000000)
 147: or r3.x, r3.y, r3.x
 148: movc r2.w, r3.x, l(1.000000), r2.w
 149: dp3 r3.x, -r2.xyzx, r1.xyzx
 150: add r3.x, r3.x, r3.x
 151: mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
 152: dp3_sat r3.w, r1.xyzx, r2.xyzx
 153: add r3.w, -r3.w, l(1.000000)
 154: mul r3.w, r3.w, r3.w
 155: mul r3.w, r3.w, r3.w
 156: sample_l r6.xyzw, r3.xyzx, t0.xyzw, s0, l(4.050000)
 157: add r3.x, r6.w, l(-1.000000)
 158: mad r3.x, cb2[14].w, r3.x, l(1.000000)
 159: max r3.x, r3.x, l(0.000000)
 160: log r3.x, r3.x
 161: mul r3.x, r3.x, cb2[14].y
 162: exp r3.x, r3.x
 163: mul r3.x, r3.x, cb2[14].x
 164: mul r3.xyz, r6.xyzx, r3.xxxx
 165: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 166: mad r3.w, r3.w, l(0.500000), l(0.040000)
 167: mul r3.xyz, r3.wwww, r3.xyzx
 168: mad r3.xyz, r4.xyzx, r5.xyzx, r3.xyzx
 169: mul r1.w, r1.w, r2.w
 170: dp3_sat r2.w, r1.xyzx, cb0[3].xyzx
 171: mul r1.w, r1.w, r2.w
 172: mul r4.xyz, r1.wwww, cb0[4].xyzx
 173: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 174: dp3 r0.x, r6.xyzx, r6.xyzx
 175: max r0.x, r0.x, l(0.000000)
 176: rsq r0.x, r0.x
 177: mul r6.xyz, r0.xxxx, r6.xyzx
 178: dp3_sat r0.x, r1.xyzx, r6.xyzx
 179: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 180: mul r0.x, r0.x, r0.x
 181: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 182: mul r1.w, r1.w, r1.w
 183: mul r0.x, r0.x, r0.x
 184: max r1.w, r1.w, l(0.100000)
 185: mul r0.x, r0.x, r1.w
 186: mul r0.x, r0.x, l(3.000000)
 187: div r0.x, l(0.062500), r0.x
 188: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 189: mad r3.xyz, r6.xyzx, r4.xyzx, r3.xyzx
 190: min r0.x, cb0[5].x, cb2[10].y
 191: ftoi r0.x, r0.x
 192: mov r4.xyz, r3.xyzx
 193: mov r1.w, l(0)
 194: loop 
 195:   uge r2.w, r1.w, r0.x
 196:   breakc_nz r2.w
 197:   and r2.w, r1.w, l(3)
 198:   ushr r3.w, r1.w, l(2)
 199:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 200:   ftoi r2.w, r2.w
 201:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 202:   dp3 r3.w, r6.xyzx, r6.xyzx
 203:   max r3.w, r3.w, l(0.000061)
 204:   rsq r4.w, r3.w
 205:   mul r7.xyz, r4.wwww, r6.xyzx
 206:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 207:   mul r3.w, r3.w, cb1[r2.w + 512].x
 208:   mad r3.w, -r3.w, r3.w, l(1.000000)
 209:   max r3.w, r3.w, l(0.000000)
 210:   mul r3.w, r3.w, r3.w
 211:   mul r3.w, r3.w, r5.w
 212:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 213:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 214:   mul r5.w, r5.w, r5.w
 215:   mul r3.w, r3.w, r5.w
 216:   ishl r5.w, r2.w, l(2)
 217:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 218:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 219:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 220:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 221:   div r8.xyz, r8.xyzx, r8.wwww
 222:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 223:   round_ni r9.xy, r9.xyxx
 224:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 225:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 226:   mul r11.xyzw, r10.xxzz, r10.xxzz
 227:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 228:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 229:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 230:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 231:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 232:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 233:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 234:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 235:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 236:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 237:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 238:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 239:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 240:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 241:   mov r12.z, r11.x
 242:   mov r12.w, r8.x
 243:   mov r13.z, r14.x
 244:   mov r13.w, r9.z
 245:   add r10.xyzw, r12.zwxz, r13.zwxz
 246:   mov r11.z, r12.y
 247:   mov r11.w, r8.y
 248:   mov r14.z, r13.y
 249:   mov r14.w, r9.w
 250:   add r8.xyw, r11.zyzw, r14.zyzw
 251:   div r11.xyz, r13.xzwx, r10.zwyz
 252:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 253:   div r12.xyz, r14.zywz, r8.xywx
 254:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 255:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 256:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 257:   mov r11.w, r12.x
 258:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 259:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 260:   mov r12.w, r11.y
 261:   mov r11.yw, r12.yyyz
 262:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 263:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 264:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 265:   mul r15.xyzw, r8.xxxy, r10.zwyz
 266:   mul r16.xyzw, r8.yyww, r10.xyzw
 267:   mul r5.w, r8.w, r10.y
 268:   sample_c_lz r6.w, r13.xyxx, t4.xxxx, s3, r8.z
 269:   sample_c_lz r7.w, r13.zwzz, t4.xxxx, s3, r8.z
 270:   mul r7.w, r7.w, r15.y
 271:   mad r6.w, r15.x, r6.w, r7.w
 272:   sample_c_lz r7.w, r9.zwzz, t4.xxxx, s3, r8.z
 273:   mad r6.w, r15.z, r7.w, r6.w
 274:   sample_c_lz r7.w, r12.xyxx, t4.xxxx, s3, r8.z
 275:   mad r6.w, r15.w, r7.w, r6.w
 276:   sample_c_lz r7.w, r14.xyxx, t4.xxxx, s3, r8.z
 277:   mad r6.w, r16.x, r7.w, r6.w
 278:   sample_c_lz r7.w, r14.zwzz, t4.xxxx, s3, r8.z
 279:   mad r6.w, r16.y, r7.w, r6.w
 280:   sample_c_lz r7.w, r12.zwzz, t4.xxxx, s3, r8.z
 281:   mad r6.w, r16.z, r7.w, r6.w
 282:   sample_c_lz r7.w, r11.xyxx, t4.xxxx, s3, r8.z
 283:   mad r6.w, r16.w, r7.w, r6.w
 284:   sample_c_lz r7.w, r11.zwzz, t4.xxxx, s3, r8.z
 285:   mad r5.w, r5.w, r7.w, r6.w
 286:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 287:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 288:   ge r6.w, l(0.000000), r8.z
 289:   ge r7.w, r8.z, l(1.000000)
 290:   or r6.w, r6.w, r7.w
 291:   movc r5.w, r6.w, l(1.000000), r5.w
 292:   ftoi r6.w, cb1[r2.w + 1024].x
 293:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 294:   max r6.w, r6.w, cb1[r2.w + 1024].y
 295:   mul r3.w, r3.w, r6.w
 296:   mul r3.w, r5.w, r3.w
 297:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 298:   mul r3.w, r3.w, r5.w
 299:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 300:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 301:   dp3 r2.w, r6.xyzx, r6.xyzx
 302:   max r2.w, r2.w, l(0.000000)
 303:   rsq r2.w, r2.w
 304:   mul r6.xyz, r2.wwww, r6.xyzx
 305:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 306:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 307:   mul r2.w, r2.w, r2.w
 308:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 309:   mul r3.w, r3.w, r3.w
 310:   mul r2.w, r2.w, r2.w
 311:   max r3.w, r3.w, l(0.100000)
 312:   mul r2.w, r2.w, r3.w
 313:   mul r2.w, r2.w, l(3.000000)
 314:   div r2.w, l(0.062500), r2.w
 315:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 316:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 317:   iadd r1.w, r1.w, l(1)
 318: endloop 
 319: add o0.xyz, r0.yzwy, r4.xyzx
 320: mov o0.w, l(0.300000)
 321: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHTS _ADDITIONAL_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 269 math, 17 temp registers, 5 textures, 1 branches
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_AdditionalLightsShadowmapTexture" to slot 4 sampler slot 3
Set 2D Texture "_CameraOpaqueTexture" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_FE0BAE36" to slot 6 sampler slot 5
Set 2D Texture "Texture2D_E192FBFC" to slot 7 sampler slot 6

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _AdditionalLightsCount at 80
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "AdditionalLights" (20480 bytes) on slot 1 {
  Vector4 _AdditionalLightsPosition[256] at 0
  Vector4 _AdditionalLightsColor[256] at 4096
  Vector4 _AdditionalLightsAttenuation[256] at 8192
  Vector4 _AdditionalLightsSpotDir[256] at 12288
  Vector4 _AdditionalLightsOcclusionProbes[256] at 16384
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 2 {
  Vector4 unity_LightData at 160
  Vector4 unity_LightIndices[2] at 176
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 3 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "AdditionalLightShadows" (20560 bytes) on slot 4 {
  Matrix4x4 _AdditionalLightsWorldToShadow[256] at 0
  Vector4 _AdditionalShadowParams[256] at 16384
  Vector4 _AdditionalShadowmapSize at 20544
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 5 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[1280], dynamicIndexed
      dcl_constantbuffer CB2[15], dynamicIndexed
      dcl_constantbuffer CB3[31], dynamicIndexed
      dcl_constantbuffer CB4[1285], dynamicIndexed
      dcl_constantbuffer CB5[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_comparison
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 17
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.y, r0.x
   2: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
   3: mul r0.yzw, r0.yyyy, v2.xxyz
   4: mul r1.xyz, v1.yyyy, cb0[62].xywx
   5: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
   6: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
   7: add r1.xyz, r1.xyzx, cb0[64].xywx
   8: mul r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   9: mul r2.w, r2.y, cb0[12].x
  10: add r1.xy, r2.zzzz, r2.xwxx
  11: div r1.xy, r1.xyxx, r1.zzzz
  12: mul r1.z, cb0[10].x, cb5[4].x
  13: mad r1.zw, v4.xxxy, cb5[3].xxxy, r1.zzzz
  14: sample r2.xyzw, r1.zwzz, t7.xyzw, s6
  15: mul r1.zw, r1.xxxy, r2.xxxy
  16: mad r1.xy, r1.zwzz, cb5[0].zwzz, r1.xyxx
  17: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  18: dp3 r1.w, r0.yzwy, r0.yzwy
  19: rsq r1.w, r1.w
  20: mul r0.yzw, r0.yyzw, r1.wwww
  21: dp3 r1.w, v5.xyzx, v5.xyzx
  22: rsq r2.x, r1.w
  23: mul r2.xyz, r2.xxxx, v5.xyzx
  24: dp3_sat r0.y, r0.yzwy, r2.xyzx
  25: add r0.y, -r0.y, l(1.000000)
  26: log r0.y, r0.y
  27: mul r0.y, r0.y, cb5[1].x
  28: exp r0.y, r0.y
  29: mul r0.zw, cb0[10].xxxx, cb5[0].zzzw
  30: mad r0.zw, v4.xxxy, cb5[0].xxxy, r0.zzzw
  31: sample r2.xyzw, r0.zwzz, t6.xyzw, s5
  32: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  33: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  34: mul_sat r0.yzw, r0.yyyy, r2.xxyz
  35: mul r0.yzw, r0.yyzw, cb5[1].yyyy
  36: mul r0.yzw, r0.yyzw, cb5[2].xxyz
  37: mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
  38: rsq r0.x, r0.x
  39: mul r1.xyz, r0.xxxx, v2.xyzx
  40: max r0.x, r1.w, l(0.000000)
  41: rsq r0.x, r0.x
  42: mul r2.xyz, r0.xxxx, v5.xyzx
  43: add r3.xyz, v1.xyzx, -cb3[20].xyzx
  44: add r4.xyz, v1.xyzx, -cb3[21].xyzx
  45: add r5.xyz, v1.xyzx, -cb3[22].xyzx
  46: add r6.xyz, v1.xyzx, -cb3[23].xyzx
  47: dp3 r3.x, r3.xyzx, r3.xyzx
  48: dp3 r3.y, r4.xyzx, r4.xyzx
  49: dp3 r3.z, r5.xyzx, r5.xyzx
  50: dp3 r3.w, r6.xyzx, r6.xyzx
  51: lt r3.xyzw, r3.xyzw, cb3[24].xyzw
  52: and r4.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  53: movc r3.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  54: add r3.xyz, r3.xyzx, r4.yzwy
  55: max r4.yzw, r3.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb3[r1.w + 1].xyzx
  61: mad r3.xyz, cb3[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb3[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb3[r1.w + 3].xyzx
  64: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  65: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  66: log r1.w, |r5.w|
  67: mul r1.w, r1.w, l(2.200000)
  68: exp r1.w, r1.w
  69: mul r1.w, r1.w, l(34.493240)
  70: mul r5.xyz, r1.wwww, r5.xyzx
  71: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: dp3 r1.w, r1.xyzx, r4.xyzx
  73: add r1.w, r1.w, l(0.500000)
  74: mul r4.xyz, r1.wwww, r5.xyzx
  75: max r1.w, r4.w, l(0.000100)
  76: div r4.xyz, r4.xyzx, r1.wwww
  77: mul r5.xyz, r0.yzwy, l(0.960000, 0.960000, 0.960000, 0.000000)
  78: mul r1.w, cb2[10].z, cb2[13].x
  79: mad r6.xy, r3.xyxx, cb3[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  80: round_ni r6.xy, r6.xyxx
  81: mad r3.xy, r3.xyxx, cb3[30].zwzz, -r6.xyxx
  82: add r7.xyzw, r3.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  83: mul r8.xyzw, r7.xxzz, r7.xxzz
  84: mul r6.zw, r8.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
  85: mad r7.xz, r8.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r3.xxyx
  86: add r8.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  87: min r8.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: mad r8.zw, -r8.zzzw, r8.zzzw, r8.xxxy
  89: max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: mad r3.xy, -r3.xyxx, r3.xyxx, r7.ywyy
  91: add r8.zw, r8.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  92: add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  93: mul r9.xy, r7.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  94: mul r10.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  95: mul r8.xy, r8.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  96: mul r11.xy, r3.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  97: mul r3.xy, r7.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
  98: mov r9.z, r8.x
  99: mov r9.w, r3.x
 100: mov r10.z, r11.x
 101: mov r10.w, r6.z
 102: add r7.xyzw, r9.zwxz, r10.zwxz
 103: mov r8.z, r9.y
 104: mov r8.w, r3.y
 105: mov r11.z, r10.y
 106: mov r11.w, r6.w
 107: add r3.xyw, r8.zyzw, r11.zyzw
 108: div r8.xyz, r10.xzwx, r7.zwyz
 109: add r8.xyz, r8.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 110: div r9.xyz, r11.zywz, r3.xywx
 111: add r9.xyz, r9.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 112: mul r8.xyz, r8.yxzy, cb3[30].xxxx
 113: mul r9.xyz, r9.xyzx, cb3[30].yyyy
 114: mov r8.w, r9.x
 115: mad r10.xyzw, r6.xyxy, cb3[30].xyxy, r8.ywxw
 116: mad r6.zw, r6.xxxy, cb3[30].xxxy, r8.zzzw
 117: mov r9.w, r8.y
 118: mov r8.yw, r9.yyyz
 119: mad r11.xyzw, r6.xyxy, cb3[30].xyxy, r8.xyzy
 120: mad r9.xyzw, r6.xyxy, cb3[30].xyxy, r9.wywz
 121: mad r8.xyzw, r6.xyxy, cb3[30].xyxy, r8.xwzw
 122: mul r12.xyzw, r3.xxxy, r7.zwyz
 123: mul r13.xyzw, r3.yyww, r7.xyzw
 124: mul r2.w, r3.w, r7.y
 125: sample_c_lz r3.x, r10.xyxx, t3.xxxx, s2, r3.z
 126: sample_c_lz r3.y, r10.zwzz, t3.xxxx, s2, r3.z
 127: mul r3.y, r3.y, r12.y
 128: mad r3.x, r12.x, r3.x, r3.y
 129: sample_c_lz r3.y, r6.zwzz, t3.xxxx, s2, r3.z
 130: mad r3.x, r12.z, r3.y, r3.x
 131: sample_c_lz r3.y, r9.xyxx, t3.xxxx, s2, r3.z
 132: mad r3.x, r12.w, r3.y, r3.x
 133: sample_c_lz r3.y, r11.xyxx, t3.xxxx, s2, r3.z
 134: mad r3.x, r13.x, r3.y, r3.x
 135: sample_c_lz r3.y, r11.zwzz, t3.xxxx, s2, r3.z
 136: mad r3.x, r13.y, r3.y, r3.x
 137: sample_c_lz r3.y, r9.zwzz, t3.xxxx, s2, r3.z
 138: mad r3.x, r13.z, r3.y, r3.x
 139: sample_c_lz r3.y, r8.xyxx, t3.xxxx, s2, r3.z
 140: mad r3.x, r13.w, r3.y, r3.x
 141: sample_c_lz r3.y, r8.zwzz, t3.xxxx, s2, r3.z
 142: mad r2.w, r2.w, r3.y, r3.x
 143: add r3.x, -cb3[29].x, l(1.000000)
 144: mad r2.w, r2.w, cb3[29].x, r3.x
 145: ge r3.x, l(0.000000), r3.z
 146: ge r3.y, r3.z, l(1.000000)
 147: or r3.x, r3.y, r3.x
 148: movc r2.w, r3.x, l(1.000000), r2.w
 149: dp3_sat r3.x, cb0[3].xyzx, r1.xyzx
 150: mul r3.yzw, r3.xxxx, cb0[4].xxyz
 151: add r4.w, -r2.w, l(1.000000)
 152: mad r3.yzw, -r3.yyzw, r4.wwww, r4.xxyz
 153: max r3.yzw, r3.yyzw, cb0[1].xxyz
 154: add r3.yzw, -r4.xxyz, r3.yyzw
 155: mad r3.yzw, cb3[29].xxxx, r3.yyzw, r4.xxyz
 156: min r3.yzw, r3.yyzw, r4.xxyz
 157: dp3 r4.x, -r2.xyzx, r1.xyzx
 158: add r4.x, r4.x, r4.x
 159: mad r4.xyz, r1.xyzx, -r4.xxxx, -r2.xyzx
 160: dp3_sat r4.w, r1.xyzx, r2.xyzx
 161: add r4.w, -r4.w, l(1.000000)
 162: mul r4.w, r4.w, r4.w
 163: mul r4.w, r4.w, r4.w
 164: sample_l r6.xyzw, r4.xyzx, t0.xyzw, s0, l(4.050000)
 165: add r4.x, r6.w, l(-1.000000)
 166: mad r4.x, cb2[14].w, r4.x, l(1.000000)
 167: max r4.x, r4.x, l(0.000000)
 168: log r4.x, r4.x
 169: mul r4.x, r4.x, cb2[14].y
 170: exp r4.x, r4.x
 171: mul r4.x, r4.x, cb2[14].x
 172: mul r4.xyz, r6.xyzx, r4.xxxx
 173: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 174: mad r4.w, r4.w, l(0.500000), l(0.040000)
 175: mul r4.xyz, r4.wwww, r4.xyzx
 176: mad r3.yzw, r3.yyzw, r5.xxyz, r4.xxyz
 177: mul r1.w, r1.w, r2.w
 178: mul r1.w, r3.x, r1.w
 179: mul r4.xyz, r1.wwww, cb0[4].xyzx
 180: mad r6.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 181: dp3 r0.x, r6.xyzx, r6.xyzx
 182: max r0.x, r0.x, l(0.000000)
 183: rsq r0.x, r0.x
 184: mul r6.xyz, r0.xxxx, r6.xyzx
 185: dp3_sat r0.x, r1.xyzx, r6.xyzx
 186: dp3_sat r1.w, cb0[3].xyzx, r6.xyzx
 187: mul r0.x, r0.x, r0.x
 188: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 189: mul r1.w, r1.w, r1.w
 190: mul r0.x, r0.x, r0.x
 191: max r1.w, r1.w, l(0.100000)
 192: mul r0.x, r0.x, r1.w
 193: mul r0.x, r0.x, l(3.000000)
 194: div r0.x, l(0.062500), r0.x
 195: mad r6.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 196: mad r3.xyz, r6.xyzx, r4.xyzx, r3.yzwy
 197: min r0.x, cb0[5].x, cb2[10].y
 198: ftoi r0.x, r0.x
 199: mov r4.xyz, r3.xyzx
 200: mov r1.w, l(0)
 201: loop 
 202:   uge r2.w, r1.w, r0.x
 203:   breakc_nz r2.w
 204:   and r2.w, r1.w, l(3)
 205:   ushr r3.w, r1.w, l(2)
 206:   dp4 r2.w, cb2[r3.w + 11].xyzw, icb[r2.w + 0].xyzw
 207:   ftoi r2.w, r2.w
 208:   mad r6.xyz, -v1.xyzx, cb1[r2.w + 0].wwww, cb1[r2.w + 0].xyzx
 209:   dp3 r3.w, r6.xyzx, r6.xyzx
 210:   max r3.w, r3.w, l(0.000061)
 211:   rsq r4.w, r3.w
 212:   mul r7.xyz, r4.wwww, r6.xyzx
 213:   div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
 214:   mul r3.w, r3.w, cb1[r2.w + 512].x
 215:   mad r3.w, -r3.w, r3.w, l(1.000000)
 216:   max r3.w, r3.w, l(0.000000)
 217:   mul r3.w, r3.w, r3.w
 218:   mul r3.w, r3.w, r5.w
 219:   dp3 r5.w, cb1[r2.w + 768].xyzx, r7.xyzx
 220:   mad_sat r5.w, r5.w, cb1[r2.w + 512].z, cb1[r2.w + 512].w
 221:   mul r5.w, r5.w, r5.w
 222:   mul r3.w, r3.w, r5.w
 223:   ishl r5.w, r2.w, l(2)
 224:   mul r8.xyzw, v1.yyyy, cb4[r5.w + 1].xyzw
 225:   mad r8.xyzw, cb4[r5.w + 0].xyzw, v1.xxxx, r8.xyzw
 226:   mad r8.xyzw, cb4[r5.w + 2].xyzw, v1.zzzz, r8.xyzw
 227:   add r8.xyzw, r8.xyzw, cb4[r5.w + 3].xyzw
 228:   div r8.xyz, r8.xyzx, r8.wwww
 229:   mad r9.xy, r8.xyxx, cb4[1284].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 230:   round_ni r9.xy, r9.xyxx
 231:   mad r8.xy, r8.xyxx, cb4[1284].zwzz, -r9.xyxx
 232:   add r10.xyzw, r8.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 233:   mul r11.xyzw, r10.xxzz, r10.xxzz
 234:   mul r9.zw, r11.yyyw, l(0.000000, 0.000000, 0.080000, 0.080000)
 235:   mad r10.xz, r11.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), -r8.xxyx
 236:   add r11.xy, -r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 237:   min r11.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
 238:   mad r11.zw, -r11.zzzw, r11.zzzw, r11.xxxy
 239:   max r8.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 240:   mad r8.xy, -r8.xyxx, r8.xyxx, r10.ywyy
 241:   add r11.zw, r11.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 242:   add r8.xy, r8.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
 243:   mul r12.xy, r10.xzxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 244:   mul r13.xy, r11.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 245:   mul r11.xy, r11.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
 246:   mul r14.xy, r8.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
 247:   mul r8.xy, r10.ywyy, l(0.160000, 0.160000, 0.000000, 0.000000)
 248:   mov r12.z, r11.x
 249:   mov r12.w, r8.x
 250:   mov r13.z, r14.x
 251:   mov r13.w, r9.z
 252:   add r10.xyzw, r12.zwxz, r13.zwxz
 253:   mov r11.z, r12.y
 254:   mov r11.w, r8.y
 255:   mov r14.z, r13.y
 256:   mov r14.w, r9.w
 257:   add r8.xyw, r11.zyzw, r14.zyzw
 258:   div r11.xyz, r13.xzwx, r10.zwyz
 259:   add r11.xyz, r11.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 260:   div r12.xyz, r14.zywz, r8.xywx
 261:   add r12.xyz, r12.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
 262:   mul r11.xyz, r11.yxzy, cb4[1284].xxxx
 263:   mul r12.xyz, r12.xyzx, cb4[1284].yyyy
 264:   mov r11.w, r12.x
 265:   mad r13.xyzw, r9.xyxy, cb4[1284].xyxy, r11.ywxw
 266:   mad r9.zw, r9.xxxy, cb4[1284].xxxy, r11.zzzw
 267:   mov r12.w, r11.y
 268:   mov r11.yw, r12.yyyz
 269:   mad r14.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xyzy
 270:   mad r12.xyzw, r9.xyxy, cb4[1284].xyxy, r12.wywz
 271:   mad r11.xyzw, r9.xyxy, cb4[1284].xyxy, r11.xwzw
 272:   mul r15.xyzw, r8.xxxy, r10.zwyz
 273:   mul r16.xyzw, r8.yyww, r10.xyzw
 274:   mul r5.w, r8.w, r10.y
 275:   sample_c_lz r6.w, r13.xyxx, t4.xxxx, s3, r8.z
 276:   sample_c_lz r7.w, r13.zwzz, t4.xxxx, s3, r8.z
 277:   mul r7.w, r7.w, r15.y
 278:   mad r6.w, r15.x, r6.w, r7.w
 279:   sample_c_lz r7.w, r9.zwzz, t4.xxxx, s3, r8.z
 280:   mad r6.w, r15.z, r7.w, r6.w
 281:   sample_c_lz r7.w, r12.xyxx, t4.xxxx, s3, r8.z
 282:   mad r6.w, r15.w, r7.w, r6.w
 283:   sample_c_lz r7.w, r14.xyxx, t4.xxxx, s3, r8.z
 284:   mad r6.w, r16.x, r7.w, r6.w
 285:   sample_c_lz r7.w, r14.zwzz, t4.xxxx, s3, r8.z
 286:   mad r6.w, r16.y, r7.w, r6.w
 287:   sample_c_lz r7.w, r12.zwzz, t4.xxxx, s3, r8.z
 288:   mad r6.w, r16.z, r7.w, r6.w
 289:   sample_c_lz r7.w, r11.xyxx, t4.xxxx, s3, r8.z
 290:   mad r6.w, r16.w, r7.w, r6.w
 291:   sample_c_lz r7.w, r11.zwzz, t4.xxxx, s3, r8.z
 292:   mad r5.w, r5.w, r7.w, r6.w
 293:   add r6.w, l(1.000000), -cb4[r2.w + 1024].x
 294:   mad r5.w, r5.w, cb4[r2.w + 1024].x, r6.w
 295:   ge r6.w, l(0.000000), r8.z
 296:   ge r7.w, r8.z, l(1.000000)
 297:   or r6.w, r6.w, r7.w
 298:   movc r5.w, r6.w, l(1.000000), r5.w
 299:   ftoi r6.w, cb1[r2.w + 1024].x
 300:   dp4 r6.w, cb2[13].xyzw, icb[r6.w + 0].xyzw
 301:   max r6.w, r6.w, cb1[r2.w + 1024].y
 302:   mul r3.w, r3.w, r6.w
 303:   mul r3.w, r5.w, r3.w
 304:   dp3_sat r5.w, r1.xyzx, r7.xyzx
 305:   mul r3.w, r3.w, r5.w
 306:   mul r8.xyz, r3.wwww, cb1[r2.w + 256].xyzx
 307:   mad r6.xyz, r6.xyzx, r4.wwww, r2.xyzx
 308:   dp3 r2.w, r6.xyzx, r6.xyzx
 309:   max r2.w, r2.w, l(0.000000)
 310:   rsq r2.w, r2.w
 311:   mul r6.xyz, r2.wwww, r6.xyzx
 312:   dp3_sat r2.w, r1.xyzx, r6.xyzx
 313:   dp3_sat r3.w, r7.xyzx, r6.xyzx
 314:   mul r2.w, r2.w, r2.w
 315:   mad r2.w, r2.w, l(-0.937500), l(1.000010)
 316:   mul r3.w, r3.w, r3.w
 317:   mul r2.w, r2.w, r2.w
 318:   max r3.w, r3.w, l(0.100000)
 319:   mul r2.w, r2.w, r3.w
 320:   mul r2.w, r2.w, l(3.000000)
 321:   div r2.w, l(0.062500), r2.w
 322:   mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r5.xyzx
 323:   mad r4.xyz, r6.xyzx, r8.xyzx, r4.xyzx
 324:   iadd r1.w, r1.w, l(1)
 325: endloop 
 326: add o0.xyz, r0.yzwy, r4.xyzx
 327: mov o0.w, l(0.300000)
 328: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  95: dp3 r4.x, r2.yzwy, r2.yzwy
  96: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  97: dp3 r4.y, r2.yzwy, r2.yzwy
  98: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  99: dp3 r4.z, r2.yzwy, r2.yzwy
 100: add r2.yzw, v1.xxyz, -cb2[23].xxyz
 101: dp3 r4.w, r2.yzwy, r2.yzwy
 102: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
 103: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
 104: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
 105: add r2.yzw, r2.yyzw, r4.yyzw
 106: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
 108: add r0.w, -r0.w, l(4.000000)
 109: ftou r0.w, r0.w
 110: ishl r0.w, r0.w, l(2)
 111: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
 112: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 113: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 114: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 115: ge r0.w, l(0.000000), r2.w
 116: ge r1.w, r2.w, l(1.000000)
 117: sample_c_lz r2.y, r2.yzyy, t3.xxxx, s2, r2.w
 118: or r0.w, r0.w, r1.w
 119: add r1.w, -cb2[29].x, l(1.000000)
 120: mad r1.w, r2.y, cb2[29].x, r1.w
 121: movc r0.w, r0.w, l(1.000000), r1.w
 122: mul r1.w, cb1[10].z, cb1[13].x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r2.x, r0.w
 125: mul r2.xyz, r0.wwww, cb0[4].xyzx
 126: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 127: add o0.xyz, r0.xyzx, r1.xyzx
 128: mov o0.w, l(0.300000)
 129: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: add r3.xyz, v1.xyzx, -cb2[20].xyzx
  44: dp3 r3.x, r3.xyzx, r3.xyzx
  45: add r4.xyz, v1.xyzx, -cb2[21].xyzx
  46: dp3 r3.y, r4.xyzx, r4.xyzx
  47: add r4.xyz, v1.xyzx, -cb2[22].xyzx
  48: dp3 r3.z, r4.xyzx, r4.xyzx
  49: add r4.xyz, v1.xyzx, -cb2[23].xyzx
  50: dp3 r3.w, r4.xyzx, r4.xyzx
  51: lt r3.xyzw, r3.xyzw, cb2[24].xyzw
  52: movc r4.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  53: and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  54: add r4.xyz, r4.xyzx, r3.yzwy
  55: max r3.yzw, r4.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r3.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb2[r1.w + 1].xyzx
  61: mad r3.xyz, cb2[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb2[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb2[r1.w + 3].xyzx
  64: ge r1.w, l(0.000000), r3.z
  65: ge r2.w, r3.z, l(1.000000)
  66: sample_c_lz r3.x, r3.xyxx, t3.xxxx, s2, r3.z
  67: or r1.w, r1.w, r2.w
  68: add r2.w, -cb2[29].x, l(1.000000)
  69: mad r2.w, r3.x, cb2[29].x, r2.w
  70: movc r1.w, r1.w, l(1.000000), r2.w
  71: add r2.w, -r1.w, l(1.000000)
  72: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  73: log r3.w, |r3.w|
  74: mul r3.w, r3.w, l(2.200000)
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, l(34.493240)
  77: mul r3.xyz, r3.wwww, r3.xyzx
  78: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  79: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  80: max r3.w, r4.w, l(0.000100)
  81: dp3 r4.x, r2.xyzx, r4.xyzx
  82: add r4.x, r4.x, l(0.500000)
  83: mul r3.xyz, r3.xyzx, r4.xxxx
  84: div r3.xyz, r3.xyzx, r3.wwww
  85: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  86: mul r4.xyz, r3.wwww, cb0[4].xyzx
  87: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  88: max r4.xyz, r4.xyzx, cb0[1].xyzx
  89: add r4.xyz, -r3.xyzx, r4.xyzx
  90: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  91: min r3.xyz, r3.xyzx, r4.xyzx
  92: mul r4.xyz, r0.wwww, v5.xyzx
  93: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  94: dp3 r0.w, -r4.xyzx, r2.xyzx
  95: add r0.w, r0.w, r0.w
  96: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: add r0.w, -r0.w, l(1.000000)
  99: mul r0.w, r0.w, r0.w
 100: mul r0.w, r0.w, r0.w
 101: mad r0.w, r0.w, l(0.500000), l(0.040000)
 102: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 103: add r2.w, r4.w, l(-1.000000)
 104: mad r2.w, cb1[14].w, r2.w, l(1.000000)
 105: max r2.w, r2.w, l(0.000000)
 106: log r2.w, r2.w
 107: mul r2.w, r2.w, cb1[14].y
 108: exp r2.w, r2.w
 109: mul r2.w, r2.w, cb1[14].x
 110: mul r4.xyz, r4.xyzx, r2.wwww
 111: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 112: mul r4.xyz, r0.wwww, r4.xyzx
 113: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
 114: dp3 r0.w, r5.xyzx, r5.xyzx
 115: max r0.w, r0.w, l(0.000000)
 116: rsq r0.w, r0.w
 117: mul r4.xyz, r0.wwww, r5.xyzx
 118: dp3_sat r0.w, r2.xyzx, r4.xyzx
 119: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
 120: mul r2.x, r2.x, r2.x
 121: max r2.x, r2.x, l(0.100000)
 122: mul r0.w, r0.w, r0.w
 123: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 124: mul r0.w, r0.w, r0.w
 125: mul r0.w, r2.x, r0.w
 126: mul r0.w, r0.w, l(3.000000)
 127: div r0.w, l(0.062500), r0.w
 128: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 129: mul r0.w, cb1[10].z, cb1[13].x
 130: mul r0.w, r1.w, r0.w
 131: mul r0.w, r3.w, r0.w
 132: mul r2.xyz, r0.wwww, cb0[4].xyzx
 133: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 134: add o0.xyz, r0.xyzx, r1.xyzx
 135: mov o0.w, l(0.300000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 161 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, r1.xyzx, r1.xyzx
 101: rsq r0.x, r0.x
 102: mul r1.xyz, r0.xxxx, r1.xyzx
 103: dp3 r0.x, v5.xyzx, v5.xyzx
 104: rsq r1.w, r0.x
 105: max r0.x, r0.x, l(0.000000)
 106: rsq r0.x, r0.x
 107: mul r3.xyz, r1.wwww, v5.xyzx
 108: dp3_sat r1.x, r1.xyzx, r3.xyzx
 109: add r1.x, -r1.x, l(1.000000)
 110: log r1.x, r1.x
 111: mul r1.x, r1.x, cb3[1].x
 112: exp r1.x, r1.x
 113: mul r1.yz, cb0[10].xxxx, cb3[0].zzwz
 114: mad r1.yz, v4.xxyx, cb3[0].xxyx, r1.yyzy
 115: sample r3.xyzw, r1.yzyy, t5.xyzw, s4
 116: add r1.yzw, r3.xxyz, l(0.000000, -0.010000, -0.010000, -0.010000)
 117: mad r1.yzw, r1.yyzw, l(0.000000, 2.636364, 2.636364, 2.636364), l(0.000000, -0.220000, -0.220000, -0.220000)
 118: mul_sat r1.xyz, r1.yzwy, r1.xxxx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r4.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r4.w, r4.y, cb0[12].x
 127: add r3.xy, r4.zzzz, r4.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r1.w, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r1.wwww
 131: sample r4.xyzw, r3.zwzz, t6.xyzw, s5
 132: mul r3.zw, r3.xxxy, r4.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mul r4.xyz, r0.xxxx, v5.xyzx
 138: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 139: dp3 r0.x, -r4.xyzx, r0.yzwy
 140: add r0.x, r0.x, r0.x
 141: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 142: dp3_sat r0.x, r0.yzwy, r4.xyzx
 143: add r0.x, -r0.x, l(1.000000)
 144: mul r0.x, r0.x, r0.x
 145: mul r0.x, r0.x, r0.x
 146: mad r0.x, r0.x, l(0.500000), l(0.040000)
 147: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 148: add r1.w, r4.w, l(-1.000000)
 149: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 150: max r1.w, r1.w, l(0.000000)
 151: log r1.w, r1.w
 152: mul r1.w, r1.w, cb1[14].y
 153: exp r1.w, r1.w
 154: mul r1.w, r1.w, cb1[14].x
 155: mul r4.xyz, r4.xyzx, r1.wwww
 156: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 157: mul r4.xyz, r0.xxxx, r4.xyzx
 158: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 159: log r0.x, |r6.w|
 160: mul r0.x, r0.x, l(2.200000)
 161: exp r0.x, r0.x
 162: mul r0.x, r0.x, l(34.493240)
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 165: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 166: max r0.x, r7.w, l(0.000100)
 167: dp3 r1.w, r0.yzwy, r7.xyzx
 168: add r1.w, r1.w, l(0.500000)
 169: mul r6.xyz, r1.wwww, r6.xyzx
 170: div r6.xyz, r6.xyzx, r0.xxxx
 171: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 172: dp3 r0.x, r5.xyzx, r5.xyzx
 173: max r0.x, r0.x, l(0.000000)
 174: rsq r0.x, r0.x
 175: mul r5.xyz, r0.xxxx, r5.xyzx
 176: dp3_sat r0.x, r0.yzwy, r5.xyzx
 177: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 178: mul r0.xy, r0.xyxx, r0.xyxx
 179: max r0.y, r0.y, l(0.100000)
 180: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 181: mul r0.x, r0.x, r0.x
 182: mul r0.x, r0.y, r0.x
 183: mul r0.x, r0.x, l(3.000000)
 184: div r0.x, l(0.062500), r0.x
 185: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 186: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 187: add o0.xyz, r1.xyzx, r0.xyzx
 188: mov o0.w, l(0.300000)
 189: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  91: log r0.z, |r1.w|
  92: mul r0.z, r0.z, l(2.200000)
  93: exp r0.z, r0.z
  94: mul r0.z, r0.z, l(34.493240)
  95: mul r1.xyz, r0.zzzz, r1.xyzx
  96: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  97: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  98: max r0.z, r2.w, l(0.000100)
  99: dp3 r0.w, v2.xyzx, v2.xyzx
 100: rsq r1.w, r0.w
 101: sqrt r0.w, r0.w
 102: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 103: mul r3.xyz, r0.wwww, v2.xyzx
 104: mul r4.xyz, r1.wwww, v2.xyzx
 105: dp3 r0.w, r4.xyzx, r2.xyzx
 106: add r0.w, r0.w, l(0.500000)
 107: mul r1.xyz, r0.wwww, r1.xyzx
 108: div r1.xyz, r1.xyzx, r0.zzzz
 109: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
 110: mul r2.xyz, r0.zzzz, cb0[4].xyzx
 111: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
 112: max r2.xyz, r2.xyzx, cb0[1].xyzx
 113: add r2.xyz, -r1.xyzx, r2.xyzx
 114: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
 115: min r1.xyz, r1.xyzx, r2.xyzx
 116: dp3 r0.y, r3.xyzx, r3.xyzx
 117: rsq r0.y, r0.y
 118: mul r2.xyz, r0.yyyy, r3.xyzx
 119: dp3 r0.y, v5.xyzx, v5.xyzx
 120: rsq r0.w, r0.y
 121: max r0.y, r0.y, l(0.000000)
 122: rsq r0.y, r0.y
 123: mul r3.xyz, r0.wwww, v5.xyzx
 124: dp3_sat r0.w, r2.xyzx, r3.xyzx
 125: add r0.w, -r0.w, l(1.000000)
 126: log r0.w, r0.w
 127: mul r0.w, r0.w, cb3[1].x
 128: exp r0.w, r0.w
 129: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 130: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 131: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 132: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 133: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 134: mul_sat r2.xyz, r0.wwww, r2.xyzx
 135: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 136: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 137: mul r3.xyz, v1.yyyy, cb0[62].xywx
 138: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 139: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 140: add r3.xyz, r3.xyzx, cb0[64].xywx
 141: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 142: mul r5.w, r5.y, cb0[12].x
 143: add r3.xy, r5.zzzz, r5.xwxx
 144: div r3.xy, r3.xyxx, r3.zzzz
 145: mul r0.w, cb0[10].x, cb3[4].x
 146: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 147: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 148: mul r3.zw, r3.xxxy, r5.xxxy
 149: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 150: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 151: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 152: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 153: mul r5.xyz, r0.yyyy, v5.xyzx
 154: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 155: dp3 r0.y, -r5.xyzx, r4.xyzx
 156: add r0.y, r0.y, r0.y
 157: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 158: dp3_sat r0.y, r4.xyzx, r5.xyzx
 159: add r0.y, -r0.y, l(1.000000)
 160: mul r0.y, r0.y, r0.y
 161: mul r0.y, r0.y, r0.y
 162: mad r0.y, r0.y, l(0.500000), l(0.040000)
 163: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 164: add r0.w, r5.w, l(-1.000000)
 165: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 166: max r0.w, r0.w, l(0.000000)
 167: log r0.w, r0.w
 168: mul r0.w, r0.w, cb1[14].y
 169: exp r0.w, r0.w
 170: mul r0.w, r0.w, cb1[14].x
 171: mul r5.xyz, r5.xyzx, r0.wwww
 172: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 173: mul r5.xyz, r0.yyyy, r5.xyzx
 174: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 175: mul r0.y, cb1[10].z, cb1[13].x
 176: mul r0.x, r0.x, r0.y
 177: mul r0.x, r0.z, r0.x
 178: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 179: dp3 r0.w, r6.xyzx, r6.xyzx
 180: max r0.w, r0.w, l(0.000000)
 181: rsq r0.w, r0.w
 182: mul r5.xyz, r0.wwww, r6.xyzx
 183: dp3_sat r0.w, r4.xyzx, r5.xyzx
 184: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 185: mul r1.w, r1.w, r1.w
 186: max r1.w, r1.w, l(0.100000)
 187: mul r0.w, r0.w, r0.w
 188: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 189: mul r0.w, r0.w, r0.w
 190: mul r0.w, r1.w, r0.w
 191: mul r0.w, r0.w, l(3.000000)
 192: div r0.w, l(0.062500), r0.w
 193: mad r3.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 194: mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
 195: add o0.xyz, r2.xyzx, r0.xyzx
 196: mov o0.w, l(0.300000)
 197: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: mul r3.xyz, r0.wwww, v5.xyzx
  44: mad r4.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  45: dp3 r0.w, -r3.xyzx, r2.xyzx
  46: add r0.w, r0.w, r0.w
  47: mad r5.xyz, r2.xyzx, -r0.wwww, -r3.xyzx
  48: dp3_sat r0.w, r2.xyzx, r3.xyzx
  49: add r0.w, -r0.w, l(1.000000)
  50: mul r0.w, r0.w, r0.w
  51: mul r0.w, r0.w, r0.w
  52: mad r0.w, r0.w, l(0.500000), l(0.040000)
  53: sample_l r3.xyzw, r5.xyzx, t0.xyzw, s0, l(4.050000)
  54: add r1.w, r3.w, l(-1.000000)
  55: mad r1.w, cb1[14].w, r1.w, l(1.000000)
  56: max r1.w, r1.w, l(0.000000)
  57: log r1.w, r1.w
  58: mul r1.w, r1.w, cb1[14].y
  59: exp r1.w, r1.w
  60: mul r1.w, r1.w, cb1[14].x
  61: mul r3.xyz, r3.xyzx, r1.wwww
  62: mul r3.xyz, r3.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
  63: mul r3.xyz, r0.wwww, r3.xyzx
  64: sample r5.xyzw, v6.xyxx, t1.xyzw, s1
  65: log r0.w, |r5.w|
  66: mul r0.w, r0.w, l(2.200000)
  67: exp r0.w, r0.w
  68: mul r0.w, r0.w, l(34.493240)
  69: mul r5.xyz, r0.wwww, r5.xyzx
  70: sample r6.xyzw, v6.xyxx, t2.xyzw, s1
  71: add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  72: max r0.w, r6.w, l(0.000100)
  73: dp3 r1.w, r2.xyzx, r6.xyzx
  74: add r1.w, r1.w, l(0.500000)
  75: mul r5.xyz, r1.wwww, r5.xyzx
  76: div r5.xyz, r5.xyzx, r0.wwww
  77: mad r3.xyz, r5.xyzx, r1.xyzx, r3.xyzx
  78: dp3 r0.w, r4.xyzx, r4.xyzx
  79: max r0.w, r0.w, l(0.000000)
  80: rsq r0.w, r0.w
  81: mul r4.xyz, r0.wwww, r4.xyzx
  82: dp3_sat r0.w, r2.xyzx, r4.xyzx
  83: dp3_sat r1.w, cb0[3].xyzx, r4.xyzx
  84: mul r1.w, r1.w, r1.w
  85: max r1.w, r1.w, l(0.100000)
  86: dp3_sat r2.x, r2.xyzx, cb0[3].xyzx
  87: mul r0.w, r0.w, r0.w
  88: mad r0.w, r0.w, l(-0.937500), l(1.000010)
  89: mul r0.w, r0.w, r0.w
  90: mul r0.w, r1.w, r0.w
  91: mul r0.w, r0.w, l(3.000000)
  92: div r0.w, l(0.062500), r0.w
  93: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
  94: add r2.yzw, v1.xxyz, -cb2[20].xxyz
  95: dp3 r4.x, r2.yzwy, r2.yzwy
  96: add r2.yzw, v1.xxyz, -cb2[21].xxyz
  97: dp3 r4.y, r2.yzwy, r2.yzwy
  98: add r2.yzw, v1.xxyz, -cb2[22].xxyz
  99: dp3 r4.z, r2.yzwy, r2.yzwy
 100: add r2.yzw, v1.xxyz, -cb2[23].xxyz
 101: dp3 r4.w, r2.yzwy, r2.yzwy
 102: lt r4.xyzw, r4.xyzw, cb2[24].xyzw
 103: movc r2.yzw, r4.xxyz, l(0,-1.000000,-1.000000,-1.000000), l(0,-0.000000,-0.000000,-0.000000)
 104: and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
 105: add r2.yzw, r2.yyzw, r4.yyzw
 106: max r4.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: dp4 r0.w, r4.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
 108: add r0.w, -r0.w, l(4.000000)
 109: ftou r0.w, r0.w
 110: ishl r0.w, r0.w, l(2)
 111: mul r2.yzw, v1.yyyy, cb2[r0.w + 1].xxyz
 112: mad r2.yzw, cb2[r0.w + 0].xxyz, v1.xxxx, r2.yyzw
 113: mad r2.yzw, cb2[r0.w + 2].xxyz, v1.zzzz, r2.yyzw
 114: add r2.yzw, r2.yyzw, cb2[r0.w + 3].xxyz
 115: ge r0.w, l(0.000000), r2.w
 116: ge r1.w, r2.w, l(1.000000)
 117: sample_c_lz r2.y, r2.yzyy, t3.xxxx, s2, r2.w
 118: or r0.w, r0.w, r1.w
 119: add r1.w, -cb2[29].x, l(1.000000)
 120: mad r1.w, r2.y, cb2[29].x, r1.w
 121: movc r0.w, r0.w, l(1.000000), r1.w
 122: mul r1.w, cb1[10].z, cb1[13].x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r2.x, r0.w
 125: mul r2.xyz, r0.wwww, cb0[4].xyzx
 126: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 127: add o0.xyz, r0.xyzx, r1.xyzx
 128: mov o0.w, l(0.300000)
 129: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 7 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[30], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: mul r0.xyz, v1.yyyy, cb0[62].xywx
   1: mad r0.xyz, cb0[61].xywx, v1.xxxx, r0.xyzx
   2: mad r0.xyz, cb0[63].xywx, v1.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb0[64].xywx
   4: mul r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mul r1.w, r1.y, cb0[12].x
   6: add r0.xy, r1.zzzz, r1.xwxx
   7: div r0.xy, r0.xyxx, r0.zzzz
   8: mul r0.z, cb0[10].x, cb3[4].x
   9: mad r0.zw, v4.xxxy, cb3[3].xxxy, r0.zzzz
  10: sample r1.xyzw, r0.zwzz, t6.xyzw, s5
  11: mul r0.zw, r0.xxxy, r1.xxxy
  12: mad r0.xy, r0.zwzz, cb3[0].zwzz, r0.xyxx
  13: sample r0.xyzw, r0.xyxx, t4.xyzw, s3
  14: mul r1.xy, cb0[10].xxxx, cb3[0].zwzz
  15: mad r1.xy, v4.xyxx, cb3[0].xyxx, r1.xyxx
  16: sample r1.xyzw, r1.xyxx, t5.xyzw, s4
  17: add r1.xyz, r1.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
  18: mad r1.xyz, r1.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
  19: dp3 r0.w, v2.xyzx, v2.xyzx
  20: sqrt r1.w, r0.w
  21: rsq r0.w, r0.w
  22: mul r2.xyz, r0.wwww, v2.xyzx
  23: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  24: mul r3.xyz, r0.wwww, v2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: rsq r0.w, r0.w
  27: mul r3.xyz, r0.wwww, r3.xyzx
  28: dp3 r0.w, v5.xyzx, v5.xyzx
  29: rsq r1.w, r0.w
  30: max r0.w, r0.w, l(0.000000)
  31: rsq r0.w, r0.w
  32: mul r4.xyz, r1.wwww, v5.xyzx
  33: dp3_sat r1.w, r3.xyzx, r4.xyzx
  34: add r1.w, -r1.w, l(1.000000)
  35: log r1.w, r1.w
  36: mul r1.w, r1.w, cb3[1].x
  37: exp r1.w, r1.w
  38: mul_sat r1.xyz, r1.xyzx, r1.wwww
  39: mul r1.xyz, r1.xyzx, cb3[1].yyyy
  40: mul r1.xyz, r1.xyzx, cb3[2].xyzx
  41: mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  42: mul r1.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
  43: add r3.xyz, v1.xyzx, -cb2[20].xyzx
  44: dp3 r3.x, r3.xyzx, r3.xyzx
  45: add r4.xyz, v1.xyzx, -cb2[21].xyzx
  46: dp3 r3.y, r4.xyzx, r4.xyzx
  47: add r4.xyz, v1.xyzx, -cb2[22].xyzx
  48: dp3 r3.z, r4.xyzx, r4.xyzx
  49: add r4.xyz, v1.xyzx, -cb2[23].xyzx
  50: dp3 r3.w, r4.xyzx, r4.xyzx
  51: lt r3.xyzw, r3.xyzw, cb2[24].xyzw
  52: movc r4.xyz, r3.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  53: and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  54: add r4.xyz, r4.xyzx, r3.yzwy
  55: max r3.yzw, r4.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: dp4 r1.w, r3.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  57: add r1.w, -r1.w, l(4.000000)
  58: ftou r1.w, r1.w
  59: ishl r1.w, r1.w, l(2)
  60: mul r3.xyz, v1.yyyy, cb2[r1.w + 1].xyzx
  61: mad r3.xyz, cb2[r1.w + 0].xyzx, v1.xxxx, r3.xyzx
  62: mad r3.xyz, cb2[r1.w + 2].xyzx, v1.zzzz, r3.xyzx
  63: add r3.xyz, r3.xyzx, cb2[r1.w + 3].xyzx
  64: ge r1.w, l(0.000000), r3.z
  65: ge r2.w, r3.z, l(1.000000)
  66: sample_c_lz r3.x, r3.xyxx, t3.xxxx, s2, r3.z
  67: or r1.w, r1.w, r2.w
  68: add r2.w, -cb2[29].x, l(1.000000)
  69: mad r2.w, r3.x, cb2[29].x, r2.w
  70: movc r1.w, r1.w, l(1.000000), r2.w
  71: add r2.w, -r1.w, l(1.000000)
  72: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  73: log r3.w, |r3.w|
  74: mul r3.w, r3.w, l(2.200000)
  75: exp r3.w, r3.w
  76: mul r3.w, r3.w, l(34.493240)
  77: mul r3.xyz, r3.wwww, r3.xyzx
  78: sample r4.xyzw, v6.xyxx, t2.xyzw, s1
  79: add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  80: max r3.w, r4.w, l(0.000100)
  81: dp3 r4.x, r2.xyzx, r4.xyzx
  82: add r4.x, r4.x, l(0.500000)
  83: mul r3.xyz, r3.xyzx, r4.xxxx
  84: div r3.xyz, r3.xyzx, r3.wwww
  85: dp3_sat r3.w, cb0[3].xyzx, r2.xyzx
  86: mul r4.xyz, r3.wwww, cb0[4].xyzx
  87: mad r4.xyz, -r4.xyzx, r2.wwww, r3.xyzx
  88: max r4.xyz, r4.xyzx, cb0[1].xyzx
  89: add r4.xyz, -r3.xyzx, r4.xyzx
  90: mad r4.xyz, cb2[29].xxxx, r4.xyzx, r3.xyzx
  91: min r3.xyz, r3.xyzx, r4.xyzx
  92: mul r4.xyz, r0.wwww, v5.xyzx
  93: mad r5.xyz, v5.xyzx, r0.wwww, cb0[3].xyzx
  94: dp3 r0.w, -r4.xyzx, r2.xyzx
  95: add r0.w, r0.w, r0.w
  96: mad r6.xyz, r2.xyzx, -r0.wwww, -r4.xyzx
  97: dp3_sat r0.w, r2.xyzx, r4.xyzx
  98: add r0.w, -r0.w, l(1.000000)
  99: mul r0.w, r0.w, r0.w
 100: mul r0.w, r0.w, r0.w
 101: mad r0.w, r0.w, l(0.500000), l(0.040000)
 102: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 103: add r2.w, r4.w, l(-1.000000)
 104: mad r2.w, cb1[14].w, r2.w, l(1.000000)
 105: max r2.w, r2.w, l(0.000000)
 106: log r2.w, r2.w
 107: mul r2.w, r2.w, cb1[14].y
 108: exp r2.w, r2.w
 109: mul r2.w, r2.w, cb1[14].x
 110: mul r4.xyz, r4.xyzx, r2.wwww
 111: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 112: mul r4.xyz, r0.wwww, r4.xyzx
 113: mad r3.xyz, r3.xyzx, r1.xyzx, r4.xyzx
 114: dp3 r0.w, r5.xyzx, r5.xyzx
 115: max r0.w, r0.w, l(0.000000)
 116: rsq r0.w, r0.w
 117: mul r4.xyz, r0.wwww, r5.xyzx
 118: dp3_sat r0.w, r2.xyzx, r4.xyzx
 119: dp3_sat r2.x, cb0[3].xyzx, r4.xyzx
 120: mul r2.x, r2.x, r2.x
 121: max r2.x, r2.x, l(0.100000)
 122: mul r0.w, r0.w, r0.w
 123: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 124: mul r0.w, r0.w, r0.w
 125: mul r0.w, r2.x, r0.w
 126: mul r0.w, r0.w, l(3.000000)
 127: div r0.w, l(0.062500), r0.w
 128: mad r1.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
 129: mul r0.w, cb1[10].z, cb1[13].x
 130: mul r0.w, r1.w, r0.w
 131: mul r0.w, r3.w, r0.w
 132: mul r2.xyz, r0.wwww, cb0[4].xyzx
 133: mad r1.xyz, r1.xyzx, r2.xyzx, r3.xyzx
 134: add o0.xyz, r0.xyzx, r1.xyzx
 135: mov o0.w, l(0.300000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 161 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: mul r0.y, cb1[10].z, cb1[13].x
  90: mul r0.x, r0.x, r0.y
  91: dp3 r0.y, v2.xyzx, v2.xyzx
  92: rsq r0.z, r0.y
  93: sqrt r0.y, r0.y
  94: div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  95: mul r1.xyz, r0.yyyy, v2.xyzx
  96: mul r0.yzw, r0.zzzz, v2.xxyz
  97: dp3_sat r1.w, r0.yzwy, cb0[3].xyzx
  98: mul r0.x, r0.x, r1.w
  99: mul r2.xyz, r0.xxxx, cb0[4].xyzx
 100: dp3 r0.x, r1.xyzx, r1.xyzx
 101: rsq r0.x, r0.x
 102: mul r1.xyz, r0.xxxx, r1.xyzx
 103: dp3 r0.x, v5.xyzx, v5.xyzx
 104: rsq r1.w, r0.x
 105: max r0.x, r0.x, l(0.000000)
 106: rsq r0.x, r0.x
 107: mul r3.xyz, r1.wwww, v5.xyzx
 108: dp3_sat r1.x, r1.xyzx, r3.xyzx
 109: add r1.x, -r1.x, l(1.000000)
 110: log r1.x, r1.x
 111: mul r1.x, r1.x, cb3[1].x
 112: exp r1.x, r1.x
 113: mul r1.yz, cb0[10].xxxx, cb3[0].zzwz
 114: mad r1.yz, v4.xxyx, cb3[0].xxyx, r1.yyzy
 115: sample r3.xyzw, r1.yzyy, t5.xyzw, s4
 116: add r1.yzw, r3.xxyz, l(0.000000, -0.010000, -0.010000, -0.010000)
 117: mad r1.yzw, r1.yyzw, l(0.000000, 2.636364, 2.636364, 2.636364), l(0.000000, -0.220000, -0.220000, -0.220000)
 118: mul_sat r1.xyz, r1.yzwy, r1.xxxx
 119: mul r1.xyz, r1.xyzx, cb3[1].yyyy
 120: mul r1.xyz, r1.xyzx, cb3[2].xyzx
 121: mul r3.xyz, v1.yyyy, cb0[62].xywx
 122: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 123: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 124: add r3.xyz, r3.xyzx, cb0[64].xywx
 125: mul r4.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 126: mul r4.w, r4.y, cb0[12].x
 127: add r3.xy, r4.zzzz, r4.xwxx
 128: div r3.xy, r3.xyxx, r3.zzzz
 129: mul r1.w, cb0[10].x, cb3[4].x
 130: mad r3.zw, v4.xxxy, cb3[3].xxxy, r1.wwww
 131: sample r4.xyzw, r3.zwzz, t6.xyzw, s5
 132: mul r3.zw, r3.xxxy, r4.xxxy
 133: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 134: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 135: mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 136: mul r3.xyz, r1.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 137: mul r4.xyz, r0.xxxx, v5.xyzx
 138: mad r5.xyz, v5.xyzx, r0.xxxx, cb0[3].xyzx
 139: dp3 r0.x, -r4.xyzx, r0.yzwy
 140: add r0.x, r0.x, r0.x
 141: mad r6.xyz, r0.yzwy, -r0.xxxx, -r4.xyzx
 142: dp3_sat r0.x, r0.yzwy, r4.xyzx
 143: add r0.x, -r0.x, l(1.000000)
 144: mul r0.x, r0.x, r0.x
 145: mul r0.x, r0.x, r0.x
 146: mad r0.x, r0.x, l(0.500000), l(0.040000)
 147: sample_l r4.xyzw, r6.xyzx, t0.xyzw, s0, l(4.050000)
 148: add r1.w, r4.w, l(-1.000000)
 149: mad r1.w, cb1[14].w, r1.w, l(1.000000)
 150: max r1.w, r1.w, l(0.000000)
 151: log r1.w, r1.w
 152: mul r1.w, r1.w, cb1[14].y
 153: exp r1.w, r1.w
 154: mul r1.w, r1.w, cb1[14].x
 155: mul r4.xyz, r4.xyzx, r1.wwww
 156: mul r4.xyz, r4.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 157: mul r4.xyz, r0.xxxx, r4.xyzx
 158: sample r6.xyzw, v6.xyxx, t1.xyzw, s1
 159: log r0.x, |r6.w|
 160: mul r0.x, r0.x, l(2.200000)
 161: exp r0.x, r0.x
 162: mul r0.x, r0.x, l(34.493240)
 163: mul r6.xyz, r0.xxxx, r6.xyzx
 164: sample r7.xyzw, v6.xyxx, t2.xyzw, s1
 165: add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
 166: max r0.x, r7.w, l(0.000100)
 167: dp3 r1.w, r0.yzwy, r7.xyzx
 168: add r1.w, r1.w, l(0.500000)
 169: mul r6.xyz, r1.wwww, r6.xyzx
 170: div r6.xyz, r6.xyzx, r0.xxxx
 171: mad r4.xyz, r6.xyzx, r3.xyzx, r4.xyzx
 172: dp3 r0.x, r5.xyzx, r5.xyzx
 173: max r0.x, r0.x, l(0.000000)
 174: rsq r0.x, r0.x
 175: mul r5.xyz, r0.xxxx, r5.xyzx
 176: dp3_sat r0.x, r0.yzwy, r5.xyzx
 177: dp3_sat r0.y, cb0[3].xyzx, r5.xyzx
 178: mul r0.xy, r0.xyxx, r0.xyxx
 179: max r0.y, r0.y, l(0.100000)
 180: mad r0.x, r0.x, l(-0.937500), l(1.000010)
 181: mul r0.x, r0.x, r0.x
 182: mul r0.x, r0.y, r0.x
 183: mul r0.x, r0.x, l(3.000000)
 184: div r0.x, l(0.062500), r0.x
 185: mad r0.xyz, r0.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 186: mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
 187: add o0.xyz, r1.xyzx, r0.xyzx
 188: mov o0.w, l(0.300000)
 189: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED LIGHTMAP_ON _ADDITIONAL_LIGHT_SHADOWS _ADDITIONAL_OFF _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MIXED_LIGHTING_SUBTRACTIVE _SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_LightmapST at 240
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_input v3.xyzw
      dcl_input v4.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_output o9.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o5.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  18: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  19: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: max r0.w, r0.w, l(0.000000)
  22: rsq r0.w, r0.w
  23: mul o3.xyz, r0.wwww, r0.xyzx
  24: mov o3.w, v2.w
  25: mov o4.xyzw, v3.xyzw
  26: mad o6.xy, v4.xyxx, cb1[15].xyxx, cb1[15].zwzz
  27: mov o7.xyz, l(0,0,0,0)
  28: mov o8.xyzw, l(0,0,0,0)
  29: mov o9.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 8 temp registers, 5 textures
Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_Lightmap" to slot 1
Set 2D Texture "unity_LightmapInd" to slot 2 sampler slot -1
Set 2D Texture "_MainLightShadowmapTexture" to slot 3 sampler slot 2
Set 2D Texture "_CameraOpaqueTexture" to slot 4 sampler slot 3
Set 2D Texture "Texture2D_FE0BAE36" to slot 5 sampler slot 4
Set 2D Texture "Texture2D_E192FBFC" to slot 6 sampler slot 5

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _SubtractiveShadowColor at 16
  Vector4 _MainLightPosition at 48
  Vector4 _MainLightColor at 64
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Vector4 unity_LightData at 160
  Vector4 unity_ProbesOcclusion at 208
  Vector4 unity_SpecCube0_HDR at 224
}
Constant Buffer "MainLightShadows" (496 bytes) on slot 2 {
  Matrix4x4 _MainLightWorldToShadow[5] at 0
  Vector4 _CascadeShadowSplitSpheres0 at 320
  Vector4 _CascadeShadowSplitSpheres1 at 336
  Vector4 _CascadeShadowSplitSpheres2 at 352
  Vector4 _CascadeShadowSplitSpheres3 at 368
  Vector4 _CascadeShadowSplitSphereRadii at 384
  Vector4 _MainLightShadowParams at 464
  Vector4 _MainLightShadowmapSize at 480
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 3 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
// TEXCOORD                 8   xyzw        9     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[15], immediateIndexed
      dcl_constantbuffer CB2[31], dynamicIndexed
      dcl_constantbuffer CB3[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texturecube (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, v1.xyzx, -cb2[20].xyzx
   1: dp3 r0.x, r0.xyzx, r0.xyzx
   2: add r1.xyz, v1.xyzx, -cb2[21].xyzx
   3: dp3 r0.y, r1.xyzx, r1.xyzx
   4: add r1.xyz, v1.xyzx, -cb2[22].xyzx
   5: dp3 r0.z, r1.xyzx, r1.xyzx
   6: add r1.xyz, v1.xyzx, -cb2[23].xyzx
   7: dp3 r0.w, r1.xyzx, r1.xyzx
   8: lt r0.xyzw, r0.xyzw, cb2[24].xyzw
   9: movc r1.xyz, r0.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(-0.000000,-0.000000,-0.000000,0)
  10: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  11: add r1.xyz, r1.xyzx, r0.yzwy
  12: max r0.yzw, r1.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  13: dp4 r0.x, r0.xyzw, l(4.000000, 3.000000, 2.000000, 1.000000)
  14: add r0.x, -r0.x, l(4.000000)
  15: ftou r0.x, r0.x
  16: ishl r0.x, r0.x, l(2)
  17: mul r0.yzw, v1.yyyy, cb2[r0.x + 1].xxyz
  18: mad r0.yzw, cb2[r0.x + 0].xxyz, v1.xxxx, r0.yyzw
  19: mad r0.yzw, cb2[r0.x + 2].xxyz, v1.zzzz, r0.yyzw
  20: add r0.xyz, r0.yzwy, cb2[r0.x + 3].xyzx
  21: mad r1.xy, r0.xyxx, cb2[30].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  22: round_ni r1.xy, r1.xyxx
  23: mad r0.xy, r0.xyxx, cb2[30].zwzz, -r1.xyxx
  24: min r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  25: add r2.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  26: mad r1.zw, -r1.zzzw, r1.zzzw, r2.xxxy
  27: mul r2.xy, r2.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  28: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  29: mul r3.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  30: max r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  31: add r4.xyzw, r0.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  32: mad r1.zw, -r1.zzzw, r1.zzzw, r4.yyyw
  33: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  34: mul r5.xy, r1.zwzz, l(0.160000, 0.160000, 0.000000, 0.000000)
  35: mul r6.xyzw, r4.xxzz, r4.xxzz
  36: mul r1.zw, r4.yyyw, l(0.000000, 0.000000, 0.160000, 0.160000)
  37: mad r0.xy, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), -r0.xyxx
  38: mul r2.zw, r6.wwwy, l(0.000000, 0.000000, 0.080000, 0.080000)
  39: mul r4.xy, r0.xyxx, l(0.160000, 0.160000, 0.000000, 0.000000)
  40: mov r3.z, r4.y
  41: mov r3.w, r1.w
  42: mov r4.w, r1.z
  43: mov r5.zw, r2.yyyz
  44: add r0.xyw, r3.zyzw, r5.zyzw
  45: mov r4.z, r3.x
  46: div r3.xyz, r5.zywz, r0.xywx
  47: mov r2.z, r5.x
  48: add r3.xyz, r3.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  49: mul r3.xyz, r3.xyzx, cb2[30].yyyy
  50: mov r5.w, r3.x
  51: add r4.xyzw, r2.zwxz, r4.zwxz
  52: div r2.xyz, r2.xzwx, r4.zwyz
  53: add r2.xyz, r2.xyzx, l(-2.500000, -0.500000, 1.500000, 0.000000)
  54: mul r5.xyz, r2.yxzy, cb2[30].xxxx
  55: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.ywxw
  56: mad r1.zw, r1.xxxy, cb2[30].xxxy, r5.zzzw
  57: sample_c_lz r1.z, r1.zwzz, t3.xxxx, s2, r0.z
  58: sample_c_lz r1.w, r2.xyxx, t3.xxxx, s2, r0.z
  59: sample_c_lz r2.x, r2.zwzz, t3.xxxx, s2, r0.z
  60: mul r6.xyzw, r0.xxxy, r4.zwyz
  61: mul r0.x, r2.x, r6.y
  62: mad r0.x, r6.x, r1.w, r0.x
  63: mad r0.x, r6.z, r1.z, r0.x
  64: mov r3.w, r5.y
  65: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r3.wywz
  66: mov r5.yw, r3.yyyz
  67: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s2, r0.z
  68: sample_c_lz r1.w, r2.zwzz, t3.xxxx, s2, r0.z
  69: mad r0.x, r6.w, r1.z, r0.x
  70: mad r2.xyzw, r1.xyxy, cb2[30].xyxy, r5.xyzy
  71: mad r3.xyzw, r1.xyxy, cb2[30].xyxy, r5.xwzw
  72: sample_c_lz r1.x, r2.xyxx, t3.xxxx, s2, r0.z
  73: sample_c_lz r1.y, r2.zwzz, t3.xxxx, s2, r0.z
  74: mul r2.xyzw, r0.yyww, r4.xyzw
  75: mul r0.y, r0.w, r4.y
  76: mad r0.x, r2.x, r1.x, r0.x
  77: mad r0.x, r2.y, r1.y, r0.x
  78: mad r0.x, r2.z, r1.w, r0.x
  79: sample_c_lz r0.w, r3.xyxx, t3.xxxx, s2, r0.z
  80: sample_c_lz r1.x, r3.zwzz, t3.xxxx, s2, r0.z
  81: mad r0.x, r2.w, r0.w, r0.x
  82: mad r0.x, r0.y, r1.x, r0.x
  83: add r0.y, -cb2[29].x, l(1.000000)
  84: mad r0.x, r0.x, cb2[29].x, r0.y
  85: ge r0.y, l(0.000000), r0.z
  86: ge r0.z, r0.z, l(1.000000)
  87: or r0.y, r0.z, r0.y
  88: movc r0.x, r0.y, l(1.000000), r0.x
  89: add r0.y, -r0.x, l(1.000000)
  90: sample r1.xyzw, v6.xyxx, t1.xyzw, s1
  91: log r0.z, |r1.w|
  92: mul r0.z, r0.z, l(2.200000)
  93: exp r0.z, r0.z
  94: mul r0.z, r0.z, l(34.493240)
  95: mul r1.xyz, r0.zzzz, r1.xyzx
  96: sample r2.xyzw, v6.xyxx, t2.xyzw, s1
  97: add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  98: max r0.z, r2.w, l(0.000100)
  99: dp3 r0.w, v2.xyzx, v2.xyzx
 100: rsq r1.w, r0.w
 101: sqrt r0.w, r0.w
 102: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
 103: mul r3.xyz, r0.wwww, v2.xyzx
 104: mul r4.xyz, r1.wwww, v2.xyzx
 105: dp3 r0.w, r4.xyzx, r2.xyzx
 106: add r0.w, r0.w, l(0.500000)
 107: mul r1.xyz, r0.wwww, r1.xyzx
 108: div r1.xyz, r1.xyzx, r0.zzzz
 109: dp3_sat r0.z, cb0[3].xyzx, r4.xyzx
 110: mul r2.xyz, r0.zzzz, cb0[4].xyzx
 111: mad r2.xyz, -r2.xyzx, r0.yyyy, r1.xyzx
 112: max r2.xyz, r2.xyzx, cb0[1].xyzx
 113: add r2.xyz, -r1.xyzx, r2.xyzx
 114: mad r2.xyz, cb2[29].xxxx, r2.xyzx, r1.xyzx
 115: min r1.xyz, r1.xyzx, r2.xyzx
 116: dp3 r0.y, r3.xyzx, r3.xyzx
 117: rsq r0.y, r0.y
 118: mul r2.xyz, r0.yyyy, r3.xyzx
 119: dp3 r0.y, v5.xyzx, v5.xyzx
 120: rsq r0.w, r0.y
 121: max r0.y, r0.y, l(0.000000)
 122: rsq r0.y, r0.y
 123: mul r3.xyz, r0.wwww, v5.xyzx
 124: dp3_sat r0.w, r2.xyzx, r3.xyzx
 125: add r0.w, -r0.w, l(1.000000)
 126: log r0.w, r0.w
 127: mul r0.w, r0.w, cb3[1].x
 128: exp r0.w, r0.w
 129: mul r2.xy, cb0[10].xxxx, cb3[0].zwzz
 130: mad r2.xy, v4.xyxx, cb3[0].xyxx, r2.xyxx
 131: sample r2.xyzw, r2.xyxx, t5.xyzw, s4
 132: add r2.xyz, r2.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
 133: mad r2.xyz, r2.xyzx, l(2.636364, 2.636364, 2.636364, 0.000000), l(-0.220000, -0.220000, -0.220000, 0.000000)
 134: mul_sat r2.xyz, r0.wwww, r2.xyzx
 135: mul r2.xyz, r2.xyzx, cb3[1].yyyy
 136: mul r2.xyz, r2.xyzx, cb3[2].xyzx
 137: mul r3.xyz, v1.yyyy, cb0[62].xywx
 138: mad r3.xyz, cb0[61].xywx, v1.xxxx, r3.xyzx
 139: mad r3.xyz, cb0[63].xywx, v1.zzzz, r3.xyzx
 140: add r3.xyz, r3.xyzx, cb0[64].xywx
 141: mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
 142: mul r5.w, r5.y, cb0[12].x
 143: add r3.xy, r5.zzzz, r5.xwxx
 144: div r3.xy, r3.xyxx, r3.zzzz
 145: mul r0.w, cb0[10].x, cb3[4].x
 146: mad r3.zw, v4.xxxy, cb3[3].xxxy, r0.wwww
 147: sample r5.xyzw, r3.zwzz, t6.xyzw, s5
 148: mul r3.zw, r3.xxxy, r5.xxxy
 149: mad r3.xy, r3.zwzz, cb3[0].zwzz, r3.xyxx
 150: sample r3.xyzw, r3.xyxx, t4.xyzw, s3
 151: mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
 152: mul r3.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
 153: mul r5.xyz, r0.yyyy, v5.xyzx
 154: mad r6.xyz, v5.xyzx, r0.yyyy, cb0[3].xyzx
 155: dp3 r0.y, -r5.xyzx, r4.xyzx
 156: add r0.y, r0.y, r0.y
 157: mad r7.xyz, r4.xyzx, -r0.yyyy, -r5.xyzx
 158: dp3_sat r0.y, r4.xyzx, r5.xyzx
 159: add r0.y, -r0.y, l(1.000000)
 160: mul r0.y, r0.y, r0.y
 161: mul r0.y, r0.y, r0.y
 162: mad r0.y, r0.y, l(0.500000), l(0.040000)
 163: sample_l r5.xyzw, r7.xyzx, t0.xyzw, s0, l(4.050000)
 164: add r0.w, r5.w, l(-1.000000)
 165: mad r0.w, cb1[14].w, r0.w, l(1.000000)
 166: max r0.w, r0.w, l(0.000000)
 167: log r0.w, r0.w
 168: mul r0.w, r0.w, cb1[14].y
 169: exp r0.w, r0.w
 170: mul r0.w, r0.w, cb1[14].x
 171: mul r5.xyz, r5.xyzx, r0.wwww
 172: mul r5.xyz, r5.xyzx, l(0.941176, 0.941176, 0.941176, 0.000000)
 173: mul r5.xyz, r0.yyyy, r5.xyzx
 174: mad r1.xyz, r1.xyzx, r3.xyzx, r5.xyzx
 175: mul r0.y, cb1[10].z, cb1[13].x
 176: mul r0.x, r0.x, r0.y
 177: mul r0.x, r0.z, r0.x
 178: mul r0.xyz, r0.xxxx, cb0[4].xyzx
 179: dp3 r0.w, r6.xyzx, r6.xyzx
 180: max r0.w, r0.w, l(0.000000)
 181: rsq r0.w, r0.w
 182: mul r5.xyz, r0.wwww, r6.xyzx
 183: dp3_sat r0.w, r4.xyzx, r5.xyzx
 184: dp3_sat r1.w, cb0[3].xyzx, r5.xyzx
 185: mul r1.w, r1.w, r1.w
 186: max r1.w, r1.w, l(0.100000)
 187: mul r0.w, r0.w, r0.w
 188: mad r0.w, r0.w, l(-0.937500), l(1.000010)
 189: mul r0.w, r0.w, r0.w
 190: mul r0.w, r1.w, r0.w
 191: mul r0.w, r0.w, l(3.000000)
 192: div r0.w, l(0.062500), r0.w
 193: mad r3.xyz, r0.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r3.xyzx
 194: mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
 195: add o0.xyz, r2.xyzx, r0.xyzx
 196: mov o0.w, l(0.300000)
 197: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 21 math
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent+0" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "$Globals" (1872 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _ShadowBias at 1808
  Vector3 _LightDirection at 1856
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[117], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mad r0.xyz, cb0[116].xyzx, cb0[113].xxxx, r0.xyzx
   5: dp3 r1.x, v1.xyzx, cb1[4].xyzx
   6: dp3 r1.y, v1.xyzx, cb1[5].xyzx
   7: dp3 r1.z, v1.xyzx, cb1[6].xyzx
   8: dp3 r0.w, r1.xyzx, r1.xyzx
   9: max r0.w, r0.w, l(0.000000)
  10: rsq r0.w, r0.w
  11: mul r1.xyz, r0.wwww, r1.xyzx
  12: dp3_sat r0.w, cb0[116].xyzx, r1.xyzx
  13: add r0.w, -r0.w, l(1.000000)
  14: mul r0.w, r0.w, cb0[113].y
  15: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  16: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
  17: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
  18: mad r0.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
  19: add r0.xyzw, r0.xyzw, cb0[64].xyzw
  20: min o0.z, r0.w, r0.z
  21: mov o0.xyw, r0.xyxw
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 8 math
 Pass {
  Name "DepthOnly"
  Tags { "LIGHTMODE"="DepthOnly" "QUEUE"="Transparent+0" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" }
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[64].xyzw
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 16 math
 // Stats for Fragment shader:
 //        d3d11: 36 math, 3 texture
 Pass {
  Tags { "LIGHTMODE"="Universal2D" "QUEUE"="Transparent+0" "RenderType"="Transparent" "RenderPipeline"="UniversalPipeline" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha, One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 16 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector3 _WorldSpaceCameraPos at 176
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[62].xyzw
   5: mad r1.xyzw, cb0[61].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb0[63].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r1.xyzw, cb0[64].xyzw
   8: mov o1.xyz, r0.xyzx
   9: add o4.xyz, -r0.xyzx, cb0[11].xyzx
  10: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  11: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  12: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: max r0.w, r0.w, l(0.000000)
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mov o3.xyzw, v3.xyzw
  18: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 3 temp registers, 3 textures
Set 2D Texture "_CameraOpaqueTexture" to slot 0
Set 2D Texture "Texture2D_FE0BAE36" to slot 1
Set 2D Texture "Texture2D_E192FBFC" to slot 2

Constant Buffer "$Globals" (1856 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 976
  Vector4 _TimeParameters at 160
  Vector4 _ProjectionParams at 192
}
Constant Buffer "UnityPerMaterial" (80 bytes) on slot 1 {
  Vector2 Vector2_7FC22752 at 0
  Vector2 Vector2_17D0D0AB at 8
  Float Vector1_B0E68DC1 at 16
  Float Vector1_B1B449DB at 20
  Vector4 Color_67C3A959 at 32
  Vector2 Vector2_57BD9D1D at 48
  Float Vector1_5FF0718A at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[65], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: sqrt r0.x, r0.x
   2: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
   3: mul r0.xyz, r0.xxxx, v2.xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: rsq r0.w, r0.w
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: dp3 r0.w, v4.xyzx, v4.xyzx
   8: rsq r0.w, r0.w
   9: mul r1.xyz, r0.wwww, v4.xyzx
  10: dp3_sat r0.x, r0.xyzx, r1.xyzx
  11: add r0.x, -r0.x, l(1.000000)
  12: log r0.x, r0.x
  13: mul r0.x, r0.x, cb1[1].x
  14: exp r0.x, r0.x
  15: mul r0.yz, cb0[10].xxxx, cb1[0].zzwz
  16: mad r0.yz, v3.xxyx, cb1[0].xxyx, r0.yyzy
  17: sample r1.xyzw, r0.yzyy, t1.xyzw, s1
  18: add r0.yzw, r1.xxyz, l(0.000000, -0.010000, -0.010000, -0.010000)
  19: mad r0.yzw, r0.yyzw, l(0.000000, 2.636364, 2.636364, 2.636364), l(0.000000, -0.220000, -0.220000, -0.220000)
  20: mul_sat r0.xyz, r0.yzwy, r0.xxxx
  21: mul r0.xyz, r0.xyzx, cb1[1].yyyy
  22: mul r0.xyz, r0.xyzx, cb1[2].xyzx
  23: mul r1.xyz, v1.yyyy, cb0[62].xywx
  24: mad r1.xyz, cb0[61].xywx, v1.xxxx, r1.xyzx
  25: mad r1.xyz, cb0[63].xywx, v1.zzzz, r1.xyzx
  26: add r1.xyz, r1.xyzx, cb0[64].xywx
  27: mul r0.w, r1.y, cb0[12].x
  28: mul r2.w, r0.w, l(0.500000)
  29: mul r2.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
  30: add r1.xy, r2.zzzz, r2.xwxx
  31: div r1.xy, r1.xyxx, r1.zzzz
  32: mul r0.w, cb0[10].x, cb1[4].x
  33: mad r1.zw, v3.xxxy, cb1[3].xxxy, r0.wwww
  34: sample r2.xyzw, r1.zwzz, t2.xyzw, s2
  35: mul r1.zw, r1.xxxy, r2.xxxy
  36: mad r1.xy, r1.zwzz, cb1[0].zwzz, r1.xyxx
  37: sample r1.xyzw, r1.xyxx, t0.xyzw, s0
  38: mad o0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
  39: mov o0.w, l(0.300000)
  40: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "UnityEditor.ShaderGraph.PBRMasterGUI"
Fallback "Hidden/Shader Graph/FallbackError"
}